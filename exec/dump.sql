-- MySQL dump 10.13  Distrib 8.0.38, for Linux (x86_64)
--
-- Host: localhost    Database: withme
-- ------------------------------------------------------
-- Server version	8.0.38

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `member`
--

DROP TABLE IF EXISTS `member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `member` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `updated_at` datetime(6) DEFAULT NULL,
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `provider` enum('GITHUB','GITLAB','SSAFY_GIT') COLLATE utf8mb4_unicode_ci NOT NULL,
  `username` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member`
--

LOCK TABLES `member` WRITE;
/*!40000 ALTER TABLE `member` DISABLE KEYS */;
INSERT INTO `member` VALUES (23,'2024-11-12 14:33:09.530182','2024-11-12 14:33:09.530193',0,'GITHUB','qjatjs123123'),(24,'2024-11-12 14:54:33.208178','2024-11-12 14:54:33.208197',0,'GITHUB','gyeongmann'),(25,'2024-11-12 14:54:36.165633','2024-11-12 14:54:36.165643',0,'GITHUB','taegun1011'),(26,'2024-11-12 15:02:15.096706','2024-11-12 15:02:15.096715',0,'GITLAB','hkc8857'),(27,'2024-11-12 15:05:33.549391','2024-11-12 15:05:33.549398',0,'GITHUB','Jaeyoung9999'),(28,'2024-11-12 15:06:24.702681','2024-11-12 15:06:24.702688',0,'GITLAB','qjatjs123123'),(29,'2024-11-12 16:45:01.592853','2024-11-12 16:45:01.592859',0,'GITLAB','xorjsghkd1011'),(30,'2024-11-12 19:34:32.006538','2024-11-12 19:34:32.006543',0,'GITLAB','hoshogi'),(31,'2024-11-13 15:09:29.840895','2024-11-13 15:09:29.840907',0,'GITLAB','plrare.dev'),(32,'2024-11-13 15:33:47.440230','2024-11-13 15:33:47.440254',0,'GITHUB','YWJ1228'),(33,'2024-11-14 09:50:59.448154','2024-11-14 09:50:59.448166',0,'GITLAB','junsk50'),(34,'2024-11-14 10:22:17.818377','2024-11-14 10:22:17.818385',0,'GITLAB','j990809'),(35,'2024-11-14 18:33:21.779513','2024-11-14 18:33:21.779525',0,'GITHUB','hannabananah'),(36,'2024-11-15 09:20:13.418566','2024-11-15 09:20:13.418575',0,'GITLAB','shinwc1998'),(37,'2024-11-15 09:43:19.153848','2024-11-15 09:43:19.153857',0,'GITLAB','akhack1231'),(38,'2024-11-15 09:43:39.749466','2024-11-15 09:43:39.749486',0,'GITHUB','DKL1231'),(39,'2024-11-15 09:45:22.766441','2024-11-15 09:45:22.766448',0,'GITHUB','wonchul98');
/*!40000 ALTER TABLE `member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `repo`
--

DROP TABLE IF EXISTS `repo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `repo` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `updated_at` datetime(6) DEFAULT NULL,
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `is_visible` tinyint(1) NOT NULL DEFAULT '0',
  `member_id` bigint NOT NULL,
  `workspace_id` bigint NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKo6bvd6v6xnyma6xvr5a9tmttl` (`member_id`),
  KEY `FK2u9vmq5jrqp86b8weaddtfxms` (`workspace_id`),
  CONSTRAINT `FK2u9vmq5jrqp86b8weaddtfxms` FOREIGN KEY (`workspace_id`) REFERENCES `workspace` (`id`),
  CONSTRAINT `FKo6bvd6v6xnyma6xvr5a9tmttl` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=747 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `repo`
--

LOCK TABLES `repo` WRITE;
/*!40000 ALTER TABLE `repo` DISABLE KEYS */;
INSERT INTO `repo` VALUES (457,'2024-11-12 14:54:34.013072','2024-11-13 19:00:33.451646',0,0,24,408),(458,'2024-11-12 14:54:34.067555','2024-11-12 14:54:34.067574',0,0,24,409),(459,'2024-11-12 14:54:34.113867','2024-11-12 14:54:34.113883',0,0,24,410),(460,'2024-11-12 14:54:34.147279','2024-11-13 19:00:40.450779',0,0,24,411),(461,'2024-11-12 14:54:34.176815','2024-11-12 14:54:34.176830',0,0,24,412),(462,'2024-11-12 14:54:34.211110','2024-11-13 19:00:30.969452',0,0,24,413),(463,'2024-11-12 14:54:34.243044','2024-11-16 15:11:02.751131',0,0,24,414),(464,'2024-11-12 14:54:34.288770','2024-11-12 14:54:34.288785',0,0,24,415),(465,'2024-11-12 14:54:34.330328','2024-11-12 14:54:34.330344',0,0,24,416),(466,'2024-11-12 14:54:34.377342','2024-11-12 14:54:34.377357',0,0,24,417),(467,'2024-11-12 14:54:34.414936','2024-11-12 14:54:34.414953',0,0,24,418),(468,'2024-11-12 14:54:34.456549','2024-11-12 14:54:34.456561',0,0,24,419),(469,'2024-11-12 14:54:34.485424','2024-11-12 14:54:34.485437',0,0,24,420),(470,'2024-11-12 14:54:34.515739','2024-11-12 14:54:34.515753',0,0,24,421),(471,'2024-11-12 14:54:34.547740','2024-11-19 09:26:28.746455',0,0,24,422),(472,'2024-11-12 14:54:34.582854','2024-11-12 14:54:34.582866',0,0,24,423),(473,'2024-11-12 14:54:34.614216','2024-11-12 14:54:34.614230',0,0,24,424),(474,'2024-11-12 14:54:34.643924','2024-11-12 14:54:34.643936',0,0,24,425),(475,'2024-11-12 14:54:34.677150','2024-11-12 14:54:34.677167',0,0,24,426),(476,'2024-11-12 14:54:34.711800','2024-11-16 15:11:05.080485',0,0,24,427),(477,'2024-11-12 14:54:34.768240','2024-11-14 00:44:25.742489',0,0,24,428),(478,'2024-11-12 14:54:34.797921','2024-11-12 14:54:34.797932',0,0,24,429),(479,'2024-11-12 14:54:34.829210','2024-11-12 14:54:34.829222',0,0,24,430),(480,'2024-11-12 14:54:34.857481','2024-11-12 14:54:34.857490',0,0,24,431),(481,'2024-11-12 14:54:34.885970','2024-11-19 09:28:01.500224',0,1,24,379),(482,'2024-11-12 14:54:34.916571','2024-11-12 14:54:34.916586',0,0,24,381),(483,'2024-11-12 14:54:34.952351','2024-11-12 14:54:34.952362',0,0,24,432),(484,'2024-11-12 14:54:36.805933','2024-11-13 10:03:03.489817',0,1,25,433),(485,'2024-11-12 14:54:36.837634','2024-11-12 15:54:46.790442',0,1,25,379),(486,'2024-11-12 14:54:36.877995','2024-11-13 10:04:25.782953',0,1,25,434),(487,'2024-11-12 14:54:36.905515','2024-11-18 13:41:48.311732',0,1,25,435),(488,'2024-11-12 14:54:36.933426','2024-11-12 14:54:36.933439',0,0,25,436),(489,'2024-11-12 14:54:36.964777','2024-11-12 14:54:36.964905',0,0,25,437),(490,'2024-11-12 14:54:37.000961','2024-11-17 10:21:19.333189',0,1,25,438),(491,'2024-11-12 14:54:37.038453','2024-11-12 14:54:37.038465',0,0,25,439),(492,'2024-11-12 14:54:37.071187','2024-11-12 14:54:37.071198',0,0,25,440),(493,'2024-11-12 14:54:37.102904','2024-11-12 15:55:38.683847',0,1,25,441),(494,'2024-11-12 14:54:37.138614','2024-11-12 14:54:37.138628',0,0,25,442),(495,'2024-11-12 14:54:37.173595','2024-11-18 09:51:40.691968',0,0,25,443),(497,'2024-11-12 14:54:37.231917','2024-11-12 14:54:37.231931',0,0,25,445),(498,'2024-11-12 15:02:16.096920','2024-11-18 19:23:41.888467',0,1,26,446),(499,'2024-11-12 15:02:16.122606','2024-11-12 15:02:16.122617',0,0,26,447),(500,'2024-11-12 15:02:16.147462','2024-11-12 15:02:16.147470',0,0,26,448),(501,'2024-11-12 15:02:16.174486','2024-11-12 15:02:16.174503',0,0,26,449),(502,'2024-11-12 15:02:16.196945','2024-11-12 15:02:16.196953',0,0,26,450),(503,'2024-11-12 15:02:16.219914','2024-11-12 15:02:16.219920',0,0,26,451),(504,'2024-11-12 15:02:16.242945','2024-11-12 15:02:16.242951',0,0,26,452),(505,'2024-11-12 15:05:34.287544','2024-11-15 17:21:24.252867',0,0,27,453),(506,'2024-11-12 15:05:34.308667','2024-11-12 15:05:34.308675',0,0,27,454),(507,'2024-11-12 15:05:34.330324','2024-11-17 16:35:59.830876',0,0,27,455),(508,'2024-11-12 15:05:34.351070','2024-11-12 15:05:34.351078',0,0,27,456),(509,'2024-11-12 15:05:34.380495','2024-11-19 01:44:08.973216',0,1,27,457),(510,'2024-11-12 15:05:34.404585','2024-11-17 16:35:56.885745',0,0,27,458),(511,'2024-11-12 15:05:34.427955','2024-11-12 15:05:34.427964',0,0,27,459),(512,'2024-11-12 15:05:34.451006','2024-11-12 15:05:34.451015',0,0,27,460),(513,'2024-11-12 15:05:34.474160','2024-11-12 15:05:34.474166',0,0,27,461),(514,'2024-11-12 15:05:34.498251','2024-11-12 15:05:34.498257',0,0,27,462),(515,'2024-11-12 15:05:34.522555','2024-11-19 08:56:20.437009',0,0,27,463),(516,'2024-11-12 15:05:34.542458','2024-11-12 15:05:34.542464',0,0,27,464),(517,'2024-11-12 15:05:34.561889','2024-11-12 15:05:34.561898',0,0,27,465),(518,'2024-11-12 15:05:34.590628','2024-11-19 02:32:52.675381',0,0,27,466),(519,'2024-11-12 15:05:34.613832','2024-11-12 15:05:34.613838',0,0,27,467),(520,'2024-11-12 15:05:34.636099','2024-11-12 15:05:34.636104',0,0,27,468),(521,'2024-11-12 15:05:34.657925','2024-11-12 15:05:34.657931',0,0,27,469),(522,'2024-11-12 15:05:34.680484','2024-11-17 14:06:49.465794',0,0,27,470),(523,'2024-11-12 15:05:34.699758','2024-11-12 15:05:34.699763',0,0,27,471),(524,'2024-11-12 15:05:34.721909','2024-11-14 13:43:45.509898',0,1,27,379),(525,'2024-11-12 15:05:34.743283','2024-11-17 16:36:02.944326',0,0,27,381),(526,'2024-11-12 15:06:25.680418','2024-11-12 15:06:43.572066',0,1,28,446),(527,'2024-11-12 15:06:25.707980','2024-11-12 15:06:25.707989',0,0,28,472),(528,'2024-11-12 15:06:25.733537','2024-11-12 15:06:25.733544',0,0,28,449),(529,'2024-11-12 15:06:25.755668','2024-11-12 15:06:25.755675',0,0,28,473),(530,'2024-11-12 15:06:25.777633','2024-11-12 15:06:25.777639',0,0,28,474),(531,'2024-11-12 15:06:25.800349','2024-11-12 15:06:25.800354',0,0,28,475),(532,'2024-11-12 15:06:25.821979','2024-11-12 15:06:25.821986',0,0,28,476),(533,'2024-11-12 15:06:25.844004','2024-11-12 15:06:25.844010',0,0,28,477),(534,'2024-11-12 15:06:25.866243','2024-11-12 15:06:25.866250',0,0,28,478),(535,'2024-11-12 15:06:25.890802','2024-11-12 15:06:25.890808',0,0,28,479),(536,'2024-11-12 15:06:25.914502','2024-11-12 15:06:25.914509',0,0,28,480),(537,'2024-11-12 16:45:02.095283','2024-11-12 16:45:11.518344',0,1,29,446),(538,'2024-11-12 16:45:02.119234','2024-11-14 15:08:12.671232',0,1,29,472),(539,'2024-11-12 16:45:02.138314','2024-11-18 10:34:24.637458',0,1,29,481),(540,'2024-11-12 16:45:02.160014','2024-11-18 10:34:10.876820',0,0,29,449),(541,'2024-11-12 16:45:02.188075','2024-11-12 16:45:02.188084',0,0,29,473),(542,'2024-11-12 16:45:02.211431','2024-11-17 09:50:04.086774',0,1,29,482),(543,'2024-11-12 16:45:02.236665','2024-11-12 16:45:02.236673',0,0,29,483),(544,'2024-11-12 16:45:02.259858','2024-11-12 16:45:02.259865',0,0,29,484),(545,'2024-11-12 16:45:02.282553','2024-11-12 16:45:02.282560',0,0,29,485),(546,'2024-11-12 16:45:02.305580','2024-11-12 16:45:02.305587',0,0,29,477),(547,'2024-11-12 16:45:02.325237','2024-11-12 16:45:02.325250',0,0,29,478),(548,'2024-11-12 16:45:02.346214','2024-11-12 16:45:02.346219',0,0,29,486),(549,'2024-11-12 16:45:02.371228','2024-11-12 16:45:02.371237',0,0,29,479),(550,'2024-11-12 16:45:02.397583','2024-11-12 16:48:17.704517',0,1,29,487),(551,'2024-11-12 16:45:02.421483','2024-11-12 16:45:02.421490',0,0,29,480),(552,'2024-11-12 19:34:32.536271','2024-11-12 19:34:32.536276',0,0,30,488),(553,'2024-11-12 19:34:32.559869','2024-11-12 19:34:32.559875',0,0,30,489),(554,'2024-11-12 19:34:32.579618','2024-11-12 19:34:32.579625',0,0,30,490),(555,'2024-11-12 19:34:32.603298','2024-11-12 19:35:35.122752',0,1,30,449),(556,'2024-11-12 19:34:32.625455','2024-11-12 19:44:08.474497',0,1,30,474),(557,'2024-11-12 19:34:32.649794','2024-11-12 19:35:08.086619',0,1,30,475),(558,'2024-11-13 13:05:51.493631','2024-11-14 14:27:32.743652',0,1,29,491),(559,'2024-11-13 15:09:30.811177','2024-11-13 15:10:00.207956',0,1,31,492),(560,'2024-11-13 15:09:30.840256','2024-11-13 15:09:30.840265',0,0,31,493),(561,'2024-11-13 15:09:30.869289','2024-11-13 15:09:30.869298',0,0,31,494),(562,'2024-11-13 15:09:30.904249','2024-11-13 15:09:30.904259',0,0,31,449),(563,'2024-11-13 15:09:30.931851','2024-11-13 15:09:30.931860',0,0,31,473),(564,'2024-11-13 15:09:30.959102','2024-11-13 15:09:30.959112',0,0,31,495),(565,'2024-11-13 15:09:30.986159','2024-11-13 15:09:30.986169',0,0,31,496),(566,'2024-11-13 15:09:31.012214','2024-11-13 15:09:31.012239',0,0,31,497),(567,'2024-11-13 15:09:31.051343','2024-11-13 15:09:31.051354',0,0,31,477),(568,'2024-11-13 15:09:31.081895','2024-11-13 15:09:31.081905',0,0,31,478),(569,'2024-11-13 15:09:31.112571','2024-11-13 15:09:31.112582',0,0,31,480),(570,'2024-11-13 15:33:48.230256','2024-11-13 15:34:25.034434',0,1,32,498),(571,'2024-11-13 15:33:48.254133','2024-11-13 15:33:48.254140',0,0,32,433),(572,'2024-11-13 15:33:48.276661','2024-11-13 15:33:48.276668',0,0,32,499),(573,'2024-11-13 15:33:48.297298','2024-11-13 15:33:48.297305',0,0,32,500),(574,'2024-11-13 15:33:48.318384','2024-11-13 15:33:48.318391',0,0,32,501),(575,'2024-11-13 15:33:48.340674','2024-11-13 15:33:48.340681',0,0,32,502),(576,'2024-11-13 15:33:48.365490','2024-11-13 15:33:48.365498',0,0,32,503),(577,'2024-11-13 15:33:48.408540','2024-11-13 15:33:48.408547',0,0,32,504),(578,'2024-11-13 15:33:48.433184','2024-11-13 15:33:48.433191',0,0,32,505),(579,'2024-11-13 15:33:48.454504','2024-11-13 15:33:48.454511',0,0,32,506),(580,'2024-11-13 15:33:48.483119','2024-11-13 15:33:48.483126',0,0,32,507),(581,'2024-11-13 15:33:48.504896','2024-11-13 15:33:48.504903',0,0,32,508),(582,'2024-11-14 09:51:00.435505','2024-11-14 09:54:47.624109',0,0,33,492),(583,'2024-11-14 09:51:00.458174','2024-11-14 09:51:00.458182',0,0,33,509),(584,'2024-11-14 09:51:00.479819','2024-11-14 09:51:00.479827',0,0,33,449),(585,'2024-11-14 09:51:00.498270','2024-11-14 09:51:00.498278',0,0,33,473),(586,'2024-11-14 09:51:00.526018','2024-11-14 09:51:00.526027',0,0,33,510),(587,'2024-11-14 09:51:00.548964','2024-11-14 09:51:00.548971',0,0,33,511),(588,'2024-11-14 09:51:00.577612','2024-11-14 09:51:00.577620',0,0,33,512),(589,'2024-11-14 09:51:00.612257','2024-11-14 09:51:00.612266',0,0,33,477),(590,'2024-11-14 09:51:00.637488','2024-11-14 09:51:00.637497',0,0,33,478),(591,'2024-11-14 09:51:00.658291','2024-11-14 09:51:00.658299',0,0,33,480),(592,'2024-11-14 09:54:53.118849','2024-11-19 12:29:49.339903',0,0,23,513),(593,'2024-11-14 09:54:53.141695','2024-11-19 12:42:24.785976',0,1,23,379),(594,'2024-11-14 09:54:53.164253','2024-11-19 12:29:29.943406',0,0,23,380),(595,'2024-11-14 09:54:53.186342','2024-11-18 19:41:51.174435',0,0,23,381),(596,'2024-11-14 09:54:53.206452','2024-11-19 12:29:46.438932',0,0,23,514),(597,'2024-11-14 09:54:53.227298','2024-11-17 17:09:08.039375',0,0,23,515),(598,'2024-11-14 09:54:53.246121','2024-11-19 12:29:44.149766',0,0,23,516),(599,'2024-11-14 09:54:53.267046','2024-11-16 19:19:24.196224',0,0,23,517),(600,'2024-11-14 09:54:53.283650','2024-11-19 12:29:22.865553',0,0,23,518),(601,'2024-11-14 09:54:53.302647','2024-11-17 17:09:04.871055',0,0,23,519),(602,'2024-11-14 09:54:53.324693','2024-11-14 09:54:53.324699',0,0,23,520),(603,'2024-11-14 09:54:53.350321','2024-11-19 12:29:39.595898',0,0,23,521),(604,'2024-11-14 09:54:53.367745','2024-11-14 09:54:53.367750',0,0,23,522),(605,'2024-11-14 09:54:53.385700','2024-11-14 09:54:53.385705',0,0,23,523),(606,'2024-11-14 09:54:53.404151','2024-11-19 12:29:52.682506',0,0,23,524),(607,'2024-11-14 09:54:53.421926','2024-11-19 12:29:37.428943',0,0,23,525),(608,'2024-11-14 09:54:53.440995','2024-11-19 12:29:32.551598',0,0,23,526),(609,'2024-11-14 09:54:53.460278','2024-11-19 12:29:35.227818',0,0,23,527),(610,'2024-11-14 09:54:53.477258','2024-11-14 09:54:53.477264',0,0,23,528),(611,'2024-11-14 09:54:53.494986','2024-11-14 09:54:53.494992',0,0,23,529),(612,'2024-11-14 09:54:53.516649','2024-11-19 12:29:42.065185',0,0,23,530),(613,'2024-11-14 09:54:53.535158','2024-11-19 12:29:25.275053',0,0,23,531),(614,'2024-11-14 09:54:53.552336','2024-11-14 09:54:53.552340',0,0,23,532),(615,'2024-11-14 09:54:53.569846','2024-11-16 19:19:26.692457',0,0,23,533),(616,'2024-11-14 09:54:53.588885','2024-11-19 12:29:27.568534',0,0,23,534),(617,'2024-11-14 09:54:53.606572','2024-11-14 09:54:53.606578',0,0,23,535),(618,'2024-11-14 09:54:53.625093','2024-11-19 12:29:55.569770',0,0,23,536),(619,'2024-11-14 09:54:53.642279','2024-11-14 09:54:53.642284',0,0,23,537),(620,'2024-11-14 09:54:53.659154','2024-11-14 09:54:53.659159',0,0,23,538),(621,'2024-11-14 09:54:53.675414','2024-11-14 09:54:53.675420',0,0,23,539),(622,'2024-11-14 10:22:18.557701','2024-11-14 13:50:34.377214',0,1,34,446),(623,'2024-11-14 10:22:18.576019','2024-11-14 10:22:18.576025',0,0,34,540),(624,'2024-11-14 10:22:18.606821','2024-11-14 10:22:18.606830',0,0,34,449),(625,'2024-11-14 10:22:18.624175','2024-11-14 10:22:18.624182',0,0,34,541),(626,'2024-11-14 10:22:18.640848','2024-11-14 10:22:18.640855',0,0,34,542),(627,'2024-11-14 10:22:18.658203','2024-11-14 10:22:18.658209',0,0,34,543),(628,'2024-11-14 14:12:07.641863','2024-11-14 14:12:21.215372',0,1,34,491),(629,'2024-11-14 18:33:23.207747','2024-11-14 18:33:23.207754',0,0,35,544),(630,'2024-11-14 18:33:23.231310','2024-11-14 18:33:23.231318',0,0,35,545),(631,'2024-11-14 18:33:23.248782','2024-11-14 18:33:23.248788',0,0,35,546),(632,'2024-11-14 18:33:23.267833','2024-11-14 18:33:23.267861',0,0,35,547),(633,'2024-11-14 18:33:23.286479','2024-11-14 18:33:23.286484',0,0,35,548),(634,'2024-11-14 18:33:23.307681','2024-11-14 18:33:23.307687',0,0,35,549),(635,'2024-11-14 18:33:23.327127','2024-11-14 18:33:23.327134',0,0,35,550),(636,'2024-11-14 18:33:23.348854','2024-11-14 18:33:23.348860',0,0,35,551),(637,'2024-11-14 18:33:23.366701','2024-11-14 18:33:23.366708',0,0,35,552),(638,'2024-11-14 18:33:23.392951','2024-11-14 18:33:23.392959',0,0,35,553),(639,'2024-11-14 18:33:23.412712','2024-11-14 18:33:23.412718',0,0,35,554),(640,'2024-11-14 18:33:23.432192','2024-11-14 18:33:23.432198',0,0,35,555),(641,'2024-11-14 18:33:23.447916','2024-11-14 18:33:23.447923',0,0,35,556),(642,'2024-11-14 18:33:23.469200','2024-11-14 18:33:23.469209',0,0,35,557),(643,'2024-11-14 18:33:23.489497','2024-11-14 18:33:23.489506',0,0,35,558),(644,'2024-11-14 18:33:23.512516','2024-11-14 18:33:23.512524',0,0,35,559),(645,'2024-11-14 18:33:23.532411','2024-11-14 18:33:23.532419',0,0,35,560),(646,'2024-11-14 18:33:23.552634','2024-11-14 18:33:23.552642',0,0,35,561),(647,'2024-11-14 18:33:23.575694','2024-11-14 18:33:23.575702',0,0,35,562),(648,'2024-11-14 18:33:23.602333','2024-11-14 18:33:23.602341',0,0,35,563),(649,'2024-11-14 18:33:23.627160','2024-11-14 18:33:23.627169',0,0,35,564),(650,'2024-11-14 18:33:23.649123','2024-11-14 18:33:23.649132',0,0,35,565),(651,'2024-11-14 18:33:23.680763','2024-11-14 18:33:23.680773',0,0,35,566),(652,'2024-11-14 18:33:23.702798','2024-11-14 18:33:23.702805',0,0,35,567),(653,'2024-11-14 18:33:23.719521','2024-11-14 18:33:23.719527',0,0,35,568),(654,'2024-11-14 18:33:23.739635','2024-11-14 18:33:23.739642',0,0,35,569),(655,'2024-11-14 18:33:23.761682','2024-11-14 18:33:23.761688',0,0,35,570),(656,'2024-11-14 18:33:23.781329','2024-11-14 18:33:23.781334',0,0,35,571),(657,'2024-11-14 18:33:23.797892','2024-11-14 18:33:23.797898',0,0,35,572),(658,'2024-11-14 18:33:23.815941','2024-11-14 18:33:23.815949',0,0,35,573),(659,'2024-11-15 09:20:14.356218','2024-11-18 19:26:43.893210',0,1,36,446),(660,'2024-11-15 09:20:14.377837','2024-11-15 09:20:14.377845',0,0,36,574),(661,'2024-11-15 09:20:14.396156','2024-11-15 09:20:14.396163',0,0,36,449),(662,'2024-11-15 09:20:14.413840','2024-11-15 09:20:14.413848',0,0,36,473),(663,'2024-11-15 09:20:14.435367','2024-11-15 09:20:14.435375',0,0,36,474),(664,'2024-11-15 09:20:14.453188','2024-11-15 09:20:14.453196',0,0,36,475),(665,'2024-11-15 09:20:14.471658','2024-11-15 09:20:14.471666',0,0,36,575),(666,'2024-11-15 09:20:14.505341','2024-11-15 09:20:14.505351',0,0,36,477),(667,'2024-11-15 09:20:14.523571','2024-11-15 09:20:14.523579',0,0,36,478),(668,'2024-11-15 09:20:14.543205','2024-11-15 09:20:14.543213',0,0,36,480),(669,'2024-11-15 09:43:21.982987','2024-11-18 18:31:35.122737',0,1,37,446),(670,'2024-11-15 09:43:22.003169','2024-11-17 00:36:12.750393',0,1,37,576),(671,'2024-11-15 09:43:22.021229','2024-11-15 09:43:22.021236',0,0,37,577),(672,'2024-11-15 09:43:22.040445','2024-11-15 09:43:22.040454',0,0,37,449),(673,'2024-11-15 09:43:22.063489','2024-11-15 09:43:22.063497',0,0,37,578),(674,'2024-11-15 09:43:22.083311','2024-11-15 09:43:22.083318',0,0,37,579),(675,'2024-11-15 09:43:22.112900','2024-11-15 09:43:22.112908',0,0,37,580),(676,'2024-11-15 09:43:22.132522','2024-11-17 00:18:50.382175',0,1,37,581),(677,'2024-11-15 09:43:22.152858','2024-11-15 09:43:22.152867',0,0,37,582),(678,'2024-11-15 09:43:22.172264','2024-11-15 09:43:22.172271',0,0,37,583),(679,'2024-11-15 09:43:22.198012','2024-11-15 09:43:22.198020',0,0,37,584),(680,'2024-11-15 09:43:22.217338','2024-11-15 09:43:22.217344',0,0,37,585),(681,'2024-11-15 09:43:22.239274','2024-11-15 09:43:22.239305',0,0,37,586),(682,'2024-11-15 09:43:22.258310','2024-11-15 09:43:22.258316',0,0,37,587),(683,'2024-11-15 09:43:22.276603','2024-11-15 09:43:22.276609',0,0,37,588),(684,'2024-11-15 09:43:22.293038','2024-11-15 09:43:22.293043',0,0,37,589),(685,'2024-11-15 09:43:22.311005','2024-11-17 00:31:56.138544',0,1,37,590),(686,'2024-11-15 09:43:22.330283','2024-11-15 09:43:22.330289',0,0,37,591),(687,'2024-11-15 09:43:22.350238','2024-11-15 09:43:22.350244',0,0,37,592),(688,'2024-11-15 09:43:22.366884','2024-11-15 09:43:22.366914',0,0,37,593),(689,'2024-11-15 09:43:40.452072','2024-11-18 14:14:10.474563',0,1,38,594),(690,'2024-11-15 09:43:40.472985','2024-11-18 16:03:10.670357',0,0,38,595),(691,'2024-11-15 09:43:40.492742','2024-11-18 16:00:18.140708',0,1,38,596),(692,'2024-11-15 09:43:40.512885','2024-11-15 09:43:40.512899',0,0,38,597),(693,'2024-11-15 09:43:40.531657','2024-11-15 09:43:40.531662',0,0,38,598),(694,'2024-11-15 09:43:40.554284','2024-11-17 12:26:23.814257',0,1,38,599),(695,'2024-11-15 09:43:40.573135','2024-11-15 09:43:40.573140',0,0,38,600),(696,'2024-11-15 09:43:40.590576','2024-11-15 09:43:40.590581',0,0,38,601),(697,'2024-11-15 09:43:40.606157','2024-11-15 09:43:40.606162',0,0,38,602),(698,'2024-11-15 09:43:40.626160','2024-11-15 09:43:40.626165',0,0,38,603),(699,'2024-11-15 09:43:40.647623','2024-11-17 11:27:52.625567',0,1,38,604),(700,'2024-11-15 09:43:40.665267','2024-11-15 09:43:40.665272',0,0,38,605),(701,'2024-11-15 09:43:40.689947','2024-11-15 09:43:47.117606',0,1,38,379),(702,'2024-11-15 09:45:23.502286','2024-11-18 20:37:44.553069',0,0,39,606),(703,'2024-11-15 09:45:23.521581','2024-11-15 09:45:23.521586',0,0,39,607),(704,'2024-11-15 09:45:23.543743','2024-11-18 20:37:53.209180',0,0,39,608),(705,'2024-11-15 09:45:23.566723','2024-11-15 09:45:23.566727',0,0,39,609),(706,'2024-11-15 09:45:23.586470','2024-11-18 20:37:41.570834',0,0,39,610),(707,'2024-11-15 09:45:23.609626','2024-11-15 09:45:23.609630',0,0,39,611),(708,'2024-11-15 09:45:23.626626','2024-11-18 20:38:02.335417',0,0,39,612),(709,'2024-11-15 09:45:23.643912','2024-11-18 20:37:50.602835',0,0,39,613),(710,'2024-11-15 09:45:23.660055','2024-11-18 20:37:59.931110',0,0,39,614),(711,'2024-11-15 09:45:23.675397','2024-11-15 09:45:23.675401',0,0,39,615),(712,'2024-11-15 09:45:23.692052','2024-11-15 09:45:23.692076',0,0,39,616),(713,'2024-11-15 09:45:23.709044','2024-11-15 09:45:23.709047',0,0,39,617),(714,'2024-11-15 09:45:23.728925','2024-11-19 12:26:50.234932',0,0,39,618),(715,'2024-11-15 09:45:23.746242','2024-11-15 09:45:23.746245',0,0,39,619),(716,'2024-11-15 09:45:23.766104','2024-11-18 20:37:48.281805',0,0,39,620),(717,'2024-11-15 09:45:23.783314','2024-11-18 20:37:46.299122',0,0,39,621),(718,'2024-11-15 09:45:23.802398','2024-11-15 09:45:23.802401',0,0,39,622),(719,'2024-11-15 09:45:23.821893','2024-11-15 09:45:23.821896',0,0,39,623),(720,'2024-11-15 09:45:23.845798','2024-11-15 09:45:23.845802',0,0,39,445),(721,'2024-11-15 09:47:51.282989','2024-11-19 12:28:17.353416',0,0,39,379),(722,'2024-11-15 10:04:27.624252','2024-11-18 09:51:37.169558',0,0,25,624),(723,'2024-11-16 23:53:35.087879','2024-11-19 09:26:26.261958',0,0,24,625),(724,'2024-11-17 00:01:23.020368','2024-11-19 09:26:23.882276',0,0,24,626),(725,'2024-11-17 00:14:01.867885','2024-11-19 08:54:11.348942',0,0,24,627),(726,'2024-11-17 00:15:12.108084','2024-11-19 09:26:21.730700',0,0,24,628),(727,'2024-11-17 00:17:49.241979','2024-11-19 09:26:19.528209',0,0,24,629),(728,'2024-11-17 00:30:35.417875','2024-11-19 08:54:14.981821',0,0,24,630),(729,'2024-11-17 00:36:29.233696','2024-11-19 09:26:17.052843',0,0,24,631),(730,'2024-11-17 00:38:49.945500','2024-11-19 09:26:14.641489',0,0,24,632),(731,'2024-11-17 00:42:07.657269','2024-11-19 09:26:11.961708',0,0,24,633),(732,'2024-11-17 00:44:28.713941','2024-11-19 09:26:09.743436',0,0,24,634),(733,'2024-11-17 00:49:17.354208','2024-11-19 09:26:07.476216',0,0,24,635),(734,'2024-11-17 20:57:45.564870','2024-11-17 20:57:58.496187',0,1,25,629),(739,'2024-11-18 19:43:46.242310','2024-11-18 19:43:46.242317',0,0,25,636),(740,'2024-11-18 19:43:53.493207','2024-11-18 19:44:42.926274',0,1,38,636),(741,'2024-11-18 19:43:55.316619','2024-11-18 20:37:57.250216',0,0,39,636),(742,'2024-11-18 19:45:25.024219','2024-11-18 19:58:21.638942',0,0,27,636),(743,'2024-11-18 19:57:56.181025','2024-11-18 19:57:56.181032',0,0,27,637),(744,'2024-11-18 19:57:57.616860','2024-11-18 19:57:57.616867',0,0,39,637),(745,'2024-11-18 20:02:17.453383','2024-11-18 20:02:17.453391',0,0,38,637),(746,'2024-11-18 20:26:45.601412','2024-11-18 20:26:45.601417',0,0,25,637);
/*!40000 ALTER TABLE `repo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `workspace`
--

DROP TABLE IF EXISTS `workspace`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `workspace` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `updated_at` datetime(6) DEFAULT NULL,
  `is_created` tinyint(1) NOT NULL DEFAULT '0',
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `is_private` tinyint(1) NOT NULL DEFAULT '1',
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `readme_content` text COLLATE utf8mb4_unicode_ci,
  `repo_url` varchar(2083) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `thumbnail` varchar(2083) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `room_id` bigint DEFAULT NULL,
  `owner` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `workspace_info` text COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=638 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `workspace`
--

LOCK TABLES `workspace` WRITE;
/*!40000 ALTER TABLE `workspace` DISABLE KEYS */;
INSERT INTO `workspace` VALUES (379,'2024-11-12 14:33:10.870996','2024-11-19 12:19:42.462121',1,0,1,'A507-','\n\n\n','https://github.com/qjatjs123123/A507-','https://withme.s3.amazonaws.com/img/60f0b861-74b7-429e-b1b9-7bd13f9589de_ssafy.png',312912897481458032,'qjatjs123123','It appears to be a web project that can collaborate to create markdown files simultaneously and apply them to remote repositories. It also includes a drafting function using AI, and OAuth is used to manage members. It also includes the ability to share completed documents with others and search for them using ElasticSearch. The backend was implemented through the Spring Framework and provides a variety of functions. The front seems to have been implemented in NextJS, and SEO is applied to make it easier for users to access the service.'),(380,'2024-11-12 14:33:10.894444','2024-11-14 10:44:24.435662',1,0,1,'Algorithm','띠용 2','https://github.com/qjatjs123123/Algorithm','https://withme.s3.amazonaws.com/img/60f0b861-74b7-429e-b1b9-7bd13f9589de_ssafy.png',9154399350416716877,'qjatjs123123',NULL),(381,'2024-11-12 14:33:10.926714','2024-11-14 20:54:10.125570',1,0,1,'blockNote_Test','![스크린샷 2023-03-13 190913.png](<https://withme.s3.amazonaws.com/interImg/b83ee58b-ba0a-4ef5-8527-88a6dc046c29_스크린샷 2023-03-13 190913.png>)\n\n\n\n\n','https://github.com/qjatjs123123/blockNote_Test','https://withme.s3.amazonaws.com/img/81b7c094-7ec1-4e19-85f0-501aaecfb5b9_rn_image_picker_lib_temp_84631a70-9a55-4291-8579-d6ab5fe165d4.jpg',1110568875902874459,'qjatjs123123',NULL),(408,'2024-11-12 14:54:33.983712','2024-11-13 18:59:01.864767',1,0,1,'Algorithm','asdfasdf\n\n\n\n','https://github.com/gyeongmann/Algorithm','https://withme.s3.amazonaws.com/img/db45ac19-8a42-4424-9dc1-eceafee6ba7a_image_1668760106922_750.jpeg',8373699733162080236,'gyeongmann',NULL),(409,'2024-11-12 14:54:34.025672','2024-11-12 14:54:34.025683',0,0,1,'Algorithm_study','','https://github.com/gyeongmann/Algorithm_study',NULL,NULL,'gyeongmann',NULL),(410,'2024-11-12 14:54:34.076414','2024-11-12 14:54:34.076425',0,0,1,'BattlePeople','','https://github.com/gyeongmann/BattlePeople',NULL,NULL,'gyeongmann',NULL),(411,'2024-11-12 14:54:34.121344','2024-11-12 17:55:06.669599',1,0,1,'blockNote_Test','## 헤더\n\n본 저장소의 헤더 섹션에서는 사용자의 이해를 돕기 위해 파일 구조 및 주요 기능에 대한 설명을 제공합니다. 헤더는 코드의 구조와 내용을 명확하게 이할 수 있도록 돕는 중요한 부분입니다. 이 섹션에서는 헤더 파일들의 용도와 그 중요성에 대해 상세히 설명하고자 합니다.\n\n### 헤더 파일의 역할\n\n헤더 파일들은 주로 함수 선, 매크로 정의, 그리고 타입 정의 등을 포함하고 있어, 소프트웨어의 다양한 컴포넌트들이 서로 효율적으로 상호 작용할 수 있도록 합니다. 이는 프로그램의듈성을 향상시키고, 코드의 재사용을 가능하게 하며, 개발 과정에서의 유지보수를 용이하게 합니다.\n\n### 헤더의 중요성\n\n헤더 파일은 코드의 재사용성을 높이고,발자가 프로그램의 다양한 부분을 분리하여 각각을 독립적으로 관리할 수 있게 돕습니다. 또한, 프로그램 전체의 컴파일 시간을 줄이는 역할도 합니다. 각 소스 파일이더 파일을 포함시켜 필요한 선언과 정의를 사용할 수 있게 함으로써, 각 컴포넌트의 컴파일이 필요할 때만 수행될 수 있습니다.\n\n### 결론\n\n헤더는 소프트웨어 개발 핵심적인 부분으로, 효과적인 프로그래밍 및 소프트웨어 유지 관리를 위해 반드시 필요한 요소입니다. 본 저장소의 헤더 파일 구조와 관리 방법을 이해하고 적절 활용한다면, 더욱 견고하고 효율적인 소프트웨어 개발이 가능할 것입니다.\n\n# 헤더\n\n헤더는 사용자 인터페이스의 매우 중요한 부분으로, 웹 사이트나 애플리케이션의 최상단에 위치하여 사용자들이 사이트의 다른 부분으로 쉽게 이동할 있도록 도와줍니다. 이 섹션에서는 헤더의 주요 구성 요소와 기능에 대해 설명합니다.\n\n## 주요 구성 요소\n\n헤더는 일반적으로 다음과 같은 요소를 포함합니다:\n\n* **고**: 사이트의 브랜드 아이덴티티를 나타내는 로고 이미지.\n* **네비게이션 바**: 사용자가 사이트의 주요 섹션으로 쉽게 이동할 수 있도록 도와주는 메뉴.\n* **검색창**: 사용자가 사이트 내에서 원하는 정보를 빠르게 찾을 수 있도록 하는 검색 기능.\n* **회원 가입 / 로그인 링크**: 사용자가 사이트의 회원 기능을 이할 수 있도록 하는 링크.\n\n## 기능\n\n헤더의 주요 기능은 다음과 같습니다:\n\n* **사용자 경험 향상**: 직관적이고 접근성 높은 헤더 디자인은 사용자의 사이트용 경험을 크게 향상시킵니다.\n* **사이트 내비게이션**: 헤더에 포함된 네비게이션 바는 사용자가 원하는 섹션으로 쉽게 이동할 수 있도록 도와줍니다.\n* **브드 인지도 강화**: 로고와 같은 브랜딩 요소는 사이트를 방문하는 모든 사용자에게 브랜드를 인식시키는 중요한 역할을 합니다.\n* **즉각적인 검색 접근성**: 검 기능을 통해 사용자는 필요한 정보를 빠르게 찾을 수 있습니다.\n\n이러한 요소와 기능들은 헤더를 통해 사용자가 웹사이트나 애플리케이션을 효과적으로 사용하고, 원 정보를 쉽게 찾을 수 있도록 도와줍니다. 따라서 헤더는 사용자 경험을 결정짓는 중요한 요소 중 하나입니다.\n## 헤더\n\n이 문서는 해당 저장소의 핵심 기능과 사용 방법을 설명하기 위해 작성되었습니다. 본 섹션에서는 저장소의 헤더 파일들에 대한 구조와 이들이 어떻게 상호작하는지에 대해 설명할 것입니다.\n\n### 헤더 파일의 중요성\n\n헤더 파일은 C나 C++과 같은 프로그래밍 언어에서 주로 사용됩니다. 이 파일들은 함수 선언, 매크로 정의, 상수, 클래스언 등을 포함하여 다른 소스 파일들이 공통으로 사용할 수 있는 선언들을 제공합니다. 이로 인해 코드의 재사용성이 향상되고, 프로젝트의 모듈성이 증가합니다.\n\n### 저장소 구\n\n저장소의 헤더 부분은 다음과 같은 구조로 되어 있습니다:\n\n* **include/**: 이 디렉토리는 모든 헤더 파일들을 포함합니다. 각 헤더 파일은 특정 기능 또는 모듈의 인터페이를 정의합니다.\n* **src/**: 소스 파일들이 위치하는 디렉토리로, 헤더 파일에 선언된 함수와 클래스의 구현을 포함합니다.\n\n### 헤더 파일 사용 예\n\n헤더 파일을 사용하는 예는 다음과 같:\n\n```c\n// 파일: example.h\n\n#ifndef EXAMPLE_H\n#define EXAMPLE_H\n\nvoid printHelloWorld();\n\n#endif\n```\n\n```c\n// 파일: example.c\n\n#include \"example.h\"\n#include <stdio.h>\n\nvoid printHelloWorld() {\n    printf(\"Hello, World!\\n}\n```\n\n위 예제에서 `example.h`는 `printHelloWorld` 함수의 선언을 포함하고 있으며, `example.c` 파일은 이 함수의 정의를 포함합니다. 이 구조는 프로그램의 다른 부분에서 `printHelloWorld` 함수를 쉽게 재사용할 수 있게 해 줍니다.\n\n### 결론\n\n헤더 파일들은 프로그램의 구조를 명확하게 하며, 코드의 재사용과 유지 보수를 용이하게 합니다. 이 저장소 헤더 구조는 체계적이며, 각 파일은 그 목적에 맞게 잘 정의되어 있습니다. 이러한 구조는 개발자가 프로젝트에 빠르게 통합하고, 필요한 기능을 쉽게 찾아 사용할 수 있게 도와줍니다.\n\n\n','https://github.com/gyeongmann/blockNote_Test','https://withme.s3.amazonaws.com/img/a97b8532-dc04-460d-9cfc-9b6e3612a690_Frame 29.png',7663306247548353033,'gyeongmann',NULL),(412,'2024-11-12 14:54:34.153787','2024-11-12 14:54:34.153796',0,0,1,'codetree-TILs','','https://github.com/gyeongmann/codetree-TILs',NULL,NULL,'gyeongmann',NULL),(413,'2024-11-12 14:54:34.184271','2024-11-13 18:18:04.622622',1,0,1,'cppStudy','','https://github.com/gyeongmann/cppStudy','https://withme.s3.amazonaws.com/img/deef138b-e9ec-49ee-a8fd-cd9c679d0565_image_1668760106922_750.jpeg',7944140926727927683,'gyeongmann',NULL),(414,'2024-11-12 14:54:34.219487','2024-11-15 09:27:30.384218',1,0,1,'Fit-Card-profile','','https://github.com/gyeongmann/Fit-Card-profile','https://withme.s3.amazonaws.com/img/bf380242-08a0-496c-90b9-5193a3842ccf_splash.png',1420618643617631727,'gyeongmann',NULL),(415,'2024-11-12 14:54:34.258288','2024-11-12 14:54:34.258299',0,0,1,'gyeongmann','','https://github.com/gyeongmann/gyeongmann',NULL,NULL,'gyeongmann',NULL),(416,'2024-11-12 14:54:34.296243','2024-11-12 14:54:34.296254',0,0,1,'java-baseball-6','','https://github.com/gyeongmann/java-baseball-6',NULL,NULL,'gyeongmann',NULL),(417,'2024-11-12 14:54:34.348216','2024-11-12 14:54:34.348226',0,0,1,'java-christmas-6-gyeongmann','','https://github.com/gyeongmann/java-christmas-6-gyeongmann',NULL,NULL,'gyeongmann',NULL),(418,'2024-11-12 14:54:34.387115','2024-11-12 14:54:34.387128',0,0,1,'java-lotto-6','','https://github.com/gyeongmann/java-lotto-6',NULL,NULL,'gyeongmann',NULL),(419,'2024-11-12 14:54:34.430320','2024-11-12 14:54:34.430330',0,0,1,'java-racingcar-6','','https://github.com/gyeongmann/java-racingcar-6',NULL,NULL,'gyeongmann',NULL),(420,'2024-11-12 14:54:34.463918','2024-11-12 14:54:34.463927',0,0,1,'java_study','','https://github.com/gyeongmann/java_study',NULL,NULL,'gyeongmann',NULL),(421,'2024-11-12 14:54:34.492435','2024-11-12 14:54:34.492444',0,0,1,'JWT','','https://github.com/gyeongmann/JWT',NULL,NULL,'gyeongmann',NULL),(422,'2024-11-12 14:54:34.523445','2024-11-16 23:46:46.521418',1,0,1,'liveblocks','![Liveblocks](<https://raw.githubusercontent.com/liveblocks/liveblocks/main/.github/assets/header-wordmark-light.svg#gh-light-mode-only>)\n\n<br/>\n\n<br/>\n\n![image.png](https://withme.s3.amazonaws.com/interImg/fd788cfd-3741-46b1-90e4-c721a8186380_image.png)![image.png](https://withme.s3.amazonaws.com/interImg/ea480743-d8eb-447a-a152-47a93dfdd857_image.png)![image.png](https://withme.s3.amazonaws.com/interImg/7912e0c3-e70c-4e57-85e9-bc18bd7c6ebc_image.png)![image.png](https://withme.s3.amazonaws.com/interImg/18a2508d-a514-458b-bbb4-8b6b6a157420_image.png)\n\n**[Liveblocks](https://liveblocks.io) is the platform for adding collaborative editing, comments, and notifications into your application.**\n\n**[Get started now](https://liveblocks.io/signup)**\n\n![image.png](https://withme.s3.amazonaws.com/interImg/4e8002e3-2b94-463c-a5f7-11bf2a044e4f_image.png)\n\n### Products\n\nLiveblocks is a fully integrated solution built around core products, each enabling a different facet of collaborative experiences: [Comments](/docs/products/comments), [Notifications](/docs/products/notifications), [Text Editor](/docs/products/text-editor), and [Realtime APIs](/docs/products/realtime-apis). You can decide what products you want to use based on your requirements and collaborative experiences you’re looking to build.\n\n### Packages and SDKs\n\nPackages for specific libraries and frameworks to add Liveblocks-powered\n\ncollaborative experiences to your product. Integrations are designed to serve\n\nvarious collaboration use cases such as collaborative text editors, comments,\n\nnotifications, and more.\n\n- [`@liveblocks/client`](<https://liveblocks.io/docs/api-reference/liveblocks-client>)\n\n- [`@liveblocks/react`](<https://liveblocks.io/docs/api-reference/liveblocks-react>)\n\n- [`@liveblocks/react-ui`](<https://liveblocks.io/docs/api-reference/liveblocks-react-ui>)\n\n- [`@liveblocks/react-lexical`](<https://liveblocks.io/docs/api-reference/liveblocks-react-lexical>)\n\n- [`@liveblocks/node-lexical`](<https://liveblocks.io/docs/api-reference/liveblocks-node-lexical>)\n\n- [`@liveblocks/redux`](<https://liveblocks.io/docs/api-reference/liveblocks-redux>)\n\n- [`@liveblocks/zustand`](<https://liveblocks.io/docs/api-reference/liveblocks-zustand>)\n\n- [`@liveblocks/yjs`](<https://liveblocks.io/docs/api-reference/liveblocks-yjs>)\n\n- [`@liveblocks/node`](<https://liveblocks.io/docs/api-reference/liveblocks-node>)\n\n## Developers\n\n- [Documentation](<https://liveblocks.io/docs>) - [`/docs`](./docs)\n\n- [Guides](<https://liveblocks.io/docs/guides>) - [`/guides`](./guides)\n\n- [Tutorial](<https://liveblocks.io/docs/tutorial/react/getting-started>) [`/tutorial`](./tutorial)\n\n- [Examples](<https://liveblocks.io/examples>) - [`/examples`](./examples)\n\nYou can read our release notes [here](<https://github.com/liveblocks/liveblocks/releases>).\n\n## Community and support\n\n- [GitHub issues](<https://github.com/liveblocks/liveblocks/issues>) to file bugs and errors you encounter using Liveblocks.\n\n- [Discord](<https://liveblocks.io/discord>) to get involved with the Liveblocks community, ask questions and share tips.\n\n- [Email](<https://liveblocks.io/contact>) to contact us directly for support and sales enquiries.\n\n- [X](<https://x.com/liveblocks>) to receive updates, announcements, blog posts, and general Liveblocks tips.\n\n## License\n\nLicensed under the Apache License 2.0, Copyright © 2021-present [Liveblocks](<https://liveblocks.io>).\n\nSee [LICENSE](./LICENSE) for more information.\n','https://github.com/gyeongmann/liveblocks','https://withme.s3.amazonaws.com/img/f94fbfdb-11a7-4ef8-a7ce-8eef406ca8ca_liveblocks-status.png',2920898786315910048,'gyeongmann',NULL),(423,'2024-11-12 14:54:34.553033','2024-11-12 14:54:34.553047',0,0,1,'liveblocks-starter-kit','','https://github.com/gyeongmann/liveblocks-starter-kit',NULL,NULL,'gyeongmann',NULL),(424,'2024-11-12 14:54:34.591004','2024-11-12 14:54:34.591012',0,0,1,'nextjs-boilerplate','','https://github.com/gyeongmann/nextjs-boilerplate',NULL,NULL,'gyeongmann',NULL),(425,'2024-11-12 14:54:34.620973','2024-11-12 14:54:34.620981',0,0,1,'OOP','','https://github.com/gyeongmann/OOP',NULL,NULL,'gyeongmann',NULL),(426,'2024-11-12 14:54:34.650912','2024-11-12 14:54:34.650925',0,0,1,'Operating-Systems','','https://github.com/gyeongmann/Operating-Systems',NULL,NULL,'gyeongmann',NULL),(427,'2024-11-12 14:54:34.687858','2024-11-15 09:30:46.356141',1,0,1,'test','test\n\n\n\n\n\n\n','https://github.com/gyeongmann/test','https://withme.s3.amazonaws.com/img/41d11233-ba57-4e9c-999a-3109d3090c16_그림1.png',1350790638139719244,'gyeongmann',NULL),(428,'2024-11-12 14:54:34.724903','2024-11-13 19:56:39.339217',1,0,1,'test1','\n\n\n\n\n\n\n\n\n','https://github.com/gyeongmann/test1','https://withme.s3.amazonaws.com/img/41d11233-ba57-4e9c-999a-3109d3090c16_그림1.png',2765319109164317197,'gyeongmann',NULL),(429,'2024-11-12 14:54:34.776896','2024-11-12 14:54:34.776904',0,0,1,'the-guardians-frontend','','https://github.com/gyeongmann/the-guardians-frontend',NULL,NULL,'gyeongmann',NULL),(430,'2024-11-12 14:54:34.807141','2024-11-12 14:54:34.807148',0,0,1,'useCase','','https://github.com/gyeongmann/useCase',NULL,NULL,'gyeongmann',NULL),(431,'2024-11-12 14:54:34.838843','2024-11-12 14:54:34.838855',0,0,1,'OOP','','https://github.com/hyb26/OOP',NULL,NULL,'hyb26',NULL),(432,'2024-11-12 14:54:34.927838','2024-11-12 14:54:34.927846',0,0,1,'ssaccer-Project','','https://github.com/yuseok01/ssaccer-Project',NULL,NULL,'yuseok01',NULL),(433,'2024-11-12 14:54:36.783586','2024-11-13 10:03:59.911289',1,0,1,'algostudys17','\n\n\n\n','https://github.com/pv104/algostudys17','https://withme.s3.amazonaws.com/img/099c70d0-d70a-4fda-a81a-d0d55360b8b0_DALL·E 2024-08-30 14.20.21 - A cute and playful logo design for a second-hand auction trading platform, with no text. The logo creatively incorporates elements of auction and bidd.png',5436736145433671740,'pv104',NULL),(434,'2024-11-12 14:54:36.847619','2024-11-17 10:30:18.742621',1,0,1,'developer-roadmap','![BlockNote image](https://github.com/taegun1011/developer-roadmap/raw/master/public/images/brand.png)\n\n## [roadmap.sh](http://roadmap.sh)\n\nCommunity driven roadmaps, articles and resources for developers\n\n![BlockNote image](https://camo.githubusercontent.com/23fd2caeb1ea90ebbea15b3bf1a1d67007761b8d7ae6389b2d367793104bff20/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432541382d526f61646d6170732532302d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061)![BlockNote image](https://camo.githubusercontent.com/5af50b9c06da41cce290d1adb9202477cf74d3c9c420a3f381229495609846e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432541382d426573742532305072616374696365732d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061)![BlockNote image](https://camo.githubusercontent.com/78af0438fed16e5d1b662c06bbc8cbfbf13c00deff8ca38e06bb522dbcbf0420/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432541382d5175657374696f6e732d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061)![BlockNote image](https://camo.githubusercontent.com/61c31fd77503cc1bba61eae31a7564a54377827420f923147c5800bdcafee0d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432541382d596f75547562652532304368616e6e656c2d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061)![BlockNote image](https://camo.githubusercontent.com/2722992d519a722218f896d5f5231d49f337aaff4514e78bd59ac935334e916a/68747470733a2f2f692e696d6775722e636f6d2f77617856496d762e706e67)\n\nRoadmaps are now interactive, you can click the nodes to read more about the topics.\n\n### [View all Roadmaps](https://roadmap.sh/)  ·  [Best Practices](https://roadmap.sh/best-practices)  ·  [Questions](https://roadmap.sh/questions)\n\n![BlockNote image](https://camo.githubusercontent.com/2722992d519a722218f896d5f5231d49f337aaff4514e78bd59ac935334e916a/68747470733a2f2f692e696d6775722e636f6d2f77617856496d762e706e67)\n\nHere is the list of available roadmaps with more being actively worked upon.\n\nHave a look at the [get started](https://roadmap.sh/get-started) page that might help you pick up a path.\n\n*   [Frontend Roadmap](https://roadmap.sh/frontend) / [Frontend Beginner Roadmap](https://roadmap.sh/frontend?r=frontend-beginner)\n*   [Backend Roadmap](https://roadmap.sh/backend) / [Backend Beginner Roadmap](https://roadmap.sh/backend?r=backend-beginner)\n*   [DevOps Roadmap](https://roadmap.sh/devops) / [DevOps Beginner Roadmap](https://roadmap.sh/devops?r=devops-beginner)\n*   [Full Stack Roadmap](https://roadmap.sh/full-stack)\n*   [Git and GitHub](https://roadmap.sh/git-github)\n*   [API Design Roadmap](https://roadmap.sh/api-design)\n*   [Computer Science Roadmap](https://roadmap.sh/computer-science)\n*   [Data Structures and Algorithms Roadmap](https://roadmap.sh/datastructures-and-algorithms)\n*   [AI and Data Scientist Roadmap](https://roadmap.sh/ai-data-scientist)\n*   [AI Engineer Roadmap](https://roadmap.sh/ai-engineer)\n*   [AWS Roadmap](https://roadmap.sh/aws)\n*   [Linux Roadmap](https://roadmap.sh/linux)\n*   [Terraform Roadmap](https://roadmap.sh/terraform)\n*   [Data Analyst Roadmap](https://roadmap.sh/data-analyst)\n*   [MLOps Roadmap](https://roadmap.sh/mlops)\n*   [Product Manager Roadmap](https://roadmap.sh/product-manager)\n*   [QA Roadmap](https://roadmap.sh/qa)\n*   [Python Roadmap](https://roadmap.sh/python)\n*   [Software Architect Roadmap](https://roadmap.sh/software-architect)\n*   [Game Developer Roadmap](https://roadmap.sh/game-developer) / [Server Side Game Developer](https://roadmap.sh/server-side-game-developer)\n*   [Software Design and Architecture Roadmap](https://roadmap.sh/software-design-architecture)\n*   [JavaScript Roadmap](https://roadmap.sh/javascript)\n*   [TypeScript Roadmap](https://roadmap.sh/typescript)\n*   [C++ Roadmap](https://roadmap.sh/cpp)\n*   [React Roadmap](https://roadmap.sh/react)\n*   [React Native Roadmap](https://roadmap.sh/react-native)\n*   [Vue Roadmap](https://roadmap.sh/vue)\n*   [Angular Roadmap](https://roadmap.sh/angular)\n*   [Node.js Roadmap](https://roadmap.sh/nodejs)\n*   [GraphQL Roadmap](https://roadmap.sh/graphql)\n*   [Android Roadmap](https://roadmap.sh/android)\n*   [iOS Roadmap](https://roadmap.sh/ios)\n*   [Flutter Roadmap](https://roadmap.sh/flutter)\n*   [Go Roadmap](https://roadmap.sh/golang)\n*   [Rust Roadmap](https://roadmap.sh/rust)\n*   [Java Roadmap](https://roadmap.sh/java)\n*   [Spring Boot Roadmap](https://roadmap.sh/spring-boot)\n*   [Design System Roadmap](https://roadmap.sh/design-system)\n*   [PostgreSQL Roadmap](https://roadmap.sh/postgresql-dba)\n*   [SQL Roadmap](https://roadmap.sh/sql)\n*   [Redis Roadmap](https://roadmap.sh/redis)\n*   [Blockchain Roadmap](https://roadmap.sh/blockchain)\n*   [ASP.NET](http://ASP.NET)[ Core Roadmap](https://roadmap.sh/aspnet-core)\n*   [System Design Roadmap](https://roadmap.sh/system-design)\n*   [Kubernetes Roadmap](https://roadmap.sh/kubernetes)\n*   [Cyber Security Roadmap](https://roadmap.sh/cyber-security)\n*   [MongoDB Roadmap](https://roadmap.sh/mongodb)\n*   [UX Design Roadmap](https://roadmap.sh/ux-design)\n*   [Docker Roadmap](https://roadmap.sh/docker)\n*   [Prompt Engineering Roadmap](https://roadmap.sh/prompt-engineering)\n*   [Technical Writer Roadmap](https://roadmap.sh/technical-writer)\n*   [DevRel Engineer Roadmap](https://roadmap.sh/devrel)\n\nThere are also interactive best practices:\n\n*   [Backend Performance Best Practices](https://roadmap.sh/best-practices/backend-performance)\n*   [Frontend Performance Best Practices](https://roadmap.sh/best-practices/frontend-performance)\n*   [Code Review Best Practices](https://roadmap.sh/best-practices/code-review)\n*   [API Security Best Practices](https://roadmap.sh/best-practices/api-security)\n*   [AWS Best Practices](https://roadmap.sh/best-practices/aws)\n\n..and questions to help you test, rate and improve your knowledge\n\n*   [JavaScript Questions](https://roadmap.sh/questions/javascript)\n*   [Node.js Questions](https://roadmap.sh/questions/nodejs)\n*   [React Questions](https://roadmap.sh/questions/react)\n*   [Backend Questions](https://roadmap.sh/questions/backend)\n*   [Frontend Questions](https://roadmap.sh/questions/frontend)\n\nShare with the community\n\nPlease consider sharing a post about [roadmap.sh](http://roadmap.sh) and the value it provides. It really does help!\n\n![BlockNote image](https://camo.githubusercontent.com/e0d0c601a99a3a3be6e51b9919f6b975cda1d2c074a9d8e7100f0d7bf7e71a67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73686172652532306f6e2d7265646469742d7265643f6c6f676f3d726564646974)![BlockNote image](https://camo.githubusercontent.com/94c53d053e42d3d6158e6100f01ba5e5087d6ae805701e05bc6fd72829a9bbef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73686172652532306f6e2d6861636b65722532306e6577732d6f72616e67653f6c6f676f3d79636f6d62696e61746f72)![BlockNote image](https://camo.githubusercontent.com/e31c452be56d70612cbea5423050c9540e92edcf8d9432e15bdb93ff900b7e71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73686172652532306f6e2d747769747465722d3033413946343f6c6f676f3d74776974746572)![BlockNote image](https://camo.githubusercontent.com/4d6e86bff273a883ebe1f61a43ba29aa935265e39779f792673430c2282c53c0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73686172652532306f6e2d66616365626f6f6b2d3139373644323f6c6f676f3d66616365626f6f6b)![BlockNote image](https://camo.githubusercontent.com/df2e0d0985f7697e5887b591f5ac4ea5be9ec30cda2ed5aa8d6ac5daabec624a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73686172652532306f6e2d6c696e6b6564696e2d3339343941423f6c6f676f3d6c696e6b6564696e)\n\n## Development\n\nClone the repository, install the dependencies and start the application\n\n```javascript\ngit clone git@github.com:kamranahmedse/developer-roadmap.git\ncd developer-roadmap\nnpm install\nnpm run dev\n```\n\nNote: use the `depth` parameter to reduce the clone size and speed up the clone.\n\n```javascript\ngit clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git\n```\n\n## Contribution\n\nHave a look at [contribution docs](https://github.com/taegun1011/developer-roadmap/blob/master/contributing.md) for how to update any of the roadmaps\n\n*   Add content to roadmaps\n*   Add new roadmaps\n*   Suggest changes to existing roadmaps\n*   Discuss ideas in issues\n*   Spread the word\n','https://github.com/taegun1011/developer-roadmap','https://withme.s3.amazonaws.com/img/7dcda776-8ed7-4c69-90db-55363f1ca123_brand.png',7028919037877636879,'taegun1011',NULL),(435,'2024-11-12 14:54:36.885519','2024-11-19 01:12:36.023432',1,0,1,'git-practice','\n\n\n','https://github.com/taegun1011/git-practice','https://withme.s3.amazonaws.com/img/0a357e92-8a44-4c85-957d-95140f37fc7b_ssafy logo.png',2635306529406798351,'taegun1011','Certainly! However, without specific details about the directories and files within the repository, I can only provide a general guideline on how to analyze and summarize the purpose or topic of a project based on its structure. Here’s a general approach:\n\n1. **Identify Key Directories**: Look at the names of the top-level directories which often indicate the major components or functionalities of the project. For example, directories named `src`, `docs`, `tests`, might suggest a software project with a source code, documentation, and tests respectively.\n\n2. **Explore the `src` Directory**: If present, this directory typically contains the core codebase. Examine the structure within this directory to understand the programming languages used, the modular organization, and perhaps major functionalities through file names or directory names like `controllers`, `models`, `views` in a web project.\n\n3. **Check the `docs` Directory**: Documentation can provide high-level overviews of the repository\'s purpose, setup guides, and usage examples, which are critical to understanding the project’s intentions and audience.\n\n4. **Review Test Files**: Located either in a `tests` directory or adjacent to code files, these files often describe what functionalities the code is expected to perform, which can indirectly inform about the project\'s key features.\n\n5. **Look for Configuration or Build Files**: Files like `Dockerfile`, `docker-compose.yml`, `Makefile`, `.travis.yml`, suggest the environment and dependencies of the project, and give clues about the technology stack and deployment setup.\n\n6. **Readme and Other Root-Level Files**: Files like `README.md`, `LICENSE`, `CONTRIBUTING.md` can provide insights into the project’s purpose, how to set it up, the licensing, and how others can contribute.\n\n7. **Miscellaneous Directories and Files**: Other directories like `assets`, `config`, `data`, can imply additional functionalities, data management patterns, and customization capabilities.\n\nBy looking for these clues in the repository structure and summarizing the findings, you can develop a succinct outline of the project’s main functionality and purpose. Without visibility into specific we can\'t analyze further on the project\'s details. Such an approach would allow contextual understanding, user relevance, and technical architecture of any given project based solely on its repository structure.'),(436,'2024-11-12 14:54:36.910571','2024-11-12 14:54:36.910580',0,0,1,'inflearn-jpa-basic','','https://github.com/taegun1011/inflearn-jpa-basic',NULL,NULL,'taegun1011',NULL),(437,'2024-11-12 14:54:36.940930','2024-11-12 14:54:36.940941',0,0,1,'inflearn-springboot-jpa','','https://github.com/taegun1011/inflearn-springboot-jpa',NULL,NULL,'taegun1011',NULL),(438,'2024-11-12 14:54:36.971352','2024-11-19 01:14:48.657035',1,0,1,'NAWA','\'스마트 쓰레기통\' 스타트업 NAWA의 홈페이지입니다.\n\n<https://www.nawa.kr/>\n\n## 주요 기능\n\n이 Git 리포지토리는 다양한 기능을 제공하며, 사용자의 요구에 맞춰 다양한 작업을 수행할 수 있도록 설계되었습니다. 다음은 이 리포지토리에서 찾을 수 있는 주요 기능들입니다:\n\n1.  **프로젝트 관리** - 사용자는 이 리포지토리를 통해 프로젝트의 진행 상황을 관리하고, 각 단계의 세부 사항을 추적할 수 있습니다. 이 기능은 프로젝트의 효율성을 높이고, 목표 달성을 위한 체계적인 접근을 가능하게 합니다.\n2.  **데이터 분석 및 처리** - 데이터를 분석하고 처리하는 기능을 제공함으로써 사용자는 복잡한 데이터 세트를 쉽게 해석하고, 유용한 인사이트를 추출할 수 있습니다. 이 기능은 데이터 기반 의사결정을 강화하는 데 큰 도움이 됩니다.\n3.  **협업 도구** - 팀원들과의 원활한 협업을 위한 도구들이 포함되어 있어, 원격으로 작업하는 팀도 효과적으로 소통하고 협력할 수 있습니다. 이를 통해 프로젝트의 일관성을 유지하고, 각 팀원의 역할과 책임을 명확히 할 수 있습니다.\n4.  **보안 기능** - 보안은 모든 IT 프로젝트의 핵심 요소입니다. 이 리포지토리는 데이터 보호 및 접근 제어 기능을 갖추고 있어, 민감한 정보의 안전을 보장합니다.\n5.  **사용자 맞춤 설정** - 사용자는 자신의 필요에 맞게 리포지토리 설정을 조정할 수 있습니다. 이는 다양한 작업 환경에 적합하도록 유연성을 제공합니다.\n\n이러한 기능들은 리포지토리를 다양한 환경에서 효과적으로 사용할 수 있게 해주며, 사용자가 자신의 목표를 달성하는 데 필요한 도구를 제공합니다.\n\n### 아키텍쳐\n\n이 저장소의 아키텍쳐는 고도로 모듈화되어 있으며, 각 모듈은 특정 기능을 수행하도록 설계되었습니다. 이를 통해 유지 관리가 용이하고, 시스템의 확장성 및 보안성이 향상됩니다.\n\n주요 구성 요소\n\n1.  **서버 아키텍쳐** - 분산 서버 환경을 지원하여, 부하 분산 및 높은 가용성을 제공합니다. 서버 아키텍쳐는 클라우드 기반 인프라와 호환되도록 설계되었습니다.\n2.  **데이터베이스 설계** - 효율적인 데이터 관리와 빠른 검색을 위해 최적화된 데이터베이스 구조를 사용합니다. 데이터의 일관성과 무결성을 보장하기 위한 여러 메커니즘이 구현되어 있습니다.\n3.  **클라이언트-서버 통신** - RESTful API를 중심으로 구성되어 있어, 다양한 클라이언트 애플리케이션과 효율적으로 통신할 수 있습니다.\n4.  **보안 구조** - 최신 보안 프로토콜과 암호화 기술을 적용하여, 모든 데이터 전송과 저장 과정에서의 보안을 강화하였습니다.\n\n설계 원칙\n\n*   **확장성** - 시스템은 사용자 수와 데이터 양의 증가에 따라 유연하게 확장될 수 있도록 설계되었습니다.\n*   **모듈성** - 각 기능별로 독립된 모듈을 가지며, 이를 통해 필요한 부분만을 수정하거나 업그레이드할 수 있습니다.\n*   **재사용성** - 공통적으로 사용되는 구성 요소는 재사용 가능하도록 개발되었으며, 이는 전체적인 개발 시간을 단축시키고, 유지보수를 간편하게 합니다.\n\n본 아키텍쳐는 시스템의 효율성을 극대화하고, 사용자에게 안정적인 서비스를 제공하기 위한 설계 방침에 따라 구축되었습니다. 이러한 구조는 본 저장소의 기술적 토대를 이루며, 앞으로도 지속적인 개선과 최적화를 통해 더욱 발전될 것입니다.\n','https://github.com/taegun1011/NAWA','https://withme.s3.amazonaws.com/img/4d206746-1f1f-4bb2-bc58-d39043b31f56_logo_name.png',2154416168200681295,'taegun1011','Without specific details about the files and directories nested within the \"root\" folder, it\'s challenging to provide a precise summary of the project\'s purpose or topic. Typically, a repository\'s structure reflects its functionality and might include directories for source code (\"src\"), documentation (\"docs\"), tests (\"tests\"), and configurations (\"config\"). Commonly, the repository might also contain a README file at the root which usually describes the project’s purpose, how to set it up, and how to use it.\n\nTo make an educated guess based on typical practices:\n1. If the \"src\" or \"source\" folder exists, it likely contains the main application code.\n2. A \"docs\" or \"documentation\" directory would suggest that the project is well-documented, focusing on usability and accessibility for users or developers.\n3. The presence of a \"tests\" directory indicates that the project is maintaining testing practices, suggesting reliability and development maturity.\n4. A \"config\" or \"configuration\" directory might imply that the project is customizable and can be tailored for different environments or user needs.\n\nIf you can provide a listing of folders and key files or their general contents, I could provide a more specific analysis and summary of the project\'s purpose or topic.'),(439,'2024-11-12 14:54:37.006385','2024-11-12 14:54:37.006394',0,0,1,'problem-solving-cpp','','https://github.com/taegun1011/problem-solving-cpp',NULL,NULL,'taegun1011',NULL),(440,'2024-11-12 14:54:37.047196','2024-11-15 01:09:19.240343',0,0,1,'problem-solving-java','\n\n\n\n\n\n\n\n','https://github.com/taegun1011/problem-solving-java',NULL,NULL,'taegun1011',NULL),(441,'2024-11-12 14:54:37.078421','2024-11-13 10:02:47.106249',1,0,1,'Python','','https://github.com/taegun1011/Python','https://withme.s3.amazonaws.com/img/2b2a1715-bae2-4fae-90e3-b64764c71ef9_질문1.png',1936037688811501179,'taegun1011',NULL),(442,'2024-11-12 14:54:37.113868','2024-11-12 14:54:37.113879',0,0,1,'taegun1011','','https://github.com/taegun1011/taegun1011',NULL,NULL,'taegun1011',NULL),(443,'2024-11-12 14:54:37.147763','2024-11-14 09:09:53.124310',1,0,1,'tg_world','','https://github.com/taegun1011/tg_world','https://withme.s3.amazonaws.com/img/87446e6a-7a86-49a8-b603-f2b749e4d0b8_ssafy logo.png',5480612501570473037,'taegun1011',NULL),(445,'2024-11-12 14:54:37.205984','2024-11-12 14:54:37.205993',0,0,1,'algorithm-study','','https://github.com/yeon409/algorithm-study',NULL,NULL,'yeon409',NULL),(446,'2024-11-12 15:02:16.073788','2024-11-18 19:39:41.672723',1,0,1,'S11P31A507','\n# WithMe\n\n### 프로젝트 소개\n\n**WithMe**는 팀원들과 협업하여 프로젝트의 README.md 파일을 효과적으로 작성하고 관리할 수 있는 서비스입니다. 프로젝트 문서화의 중요한 부분인 README 작성을 위한 직관적이고 강력한 Editor와 함께 다양한 협업 기능을 제공합니다. 팀의 작업 효율을 높이고 문서화 과정에서의 혼란을 줄이기 위해 설계되었습니다. WithMe는 협업을 넘어, 타인의 프로젝트 문서를 탐색하고 영감을 받을 수 있는 커뮤니티 기반 환경을 제공합니다. 또한, AI를 활용한 초안 작성 기능과 강력한 검색 기능으로 효율성과 편리성을 극대화합니다.\n\n\n### **기능 소개**\n\n1. **Collaborative Editor**\n\nREADME 작성 시 실시간으로 팀원들과 협업할 수 있는 편집기. 작성 중인 블록의 결과를 Preview 또는 Markdown 형태로 확인 가능. 2. **AI 초안 작성** Git 디렉토리 구조를 기반으로 README의 목차 초안을 AI가 자동으로 생성하여 작성 시간을 절약하고 초안 작성의 부담을 줄임.\n\n3. **Explore 탭** 타인의 프로젝트 README를 탐색하며, 다양한 아이디어와 레퍼런스를 얻을 수 있는 공간. README 작성의 영감을 받을 수 있음.\n\n4. **Workspace 관리** 내 작업물을 체계적으로 관리하고 필요한 프로젝트를 빠르게 찾을 수 있는 작업 공간 제공.\n\n5. **ElasticSearch 기반 검색** README와 관련된 내용을 빠르고 정확하게 검색 가능. 프로젝트 명, 키워드 등으로 원하는 문서를 즉시 탐색.\n\n6. **SEO 최적화** Next.js의 SEO 구현을 통해 구글 검색에서 README 문서 노출을 활성화하여 더 많은 사람들에게 프로젝트를 공유 가능.\n\n','https://lab.ssafy.com/s11-final/S11P31A507','https://withme.s3.amazonaws.com/img/43ad55b4-6834-46aa-8e4d-6dae0caf8a39_withmesplash.png',6469621196811123575,'s11-final',NULL),(447,'2024-11-12 15:02:16.102265','2024-11-12 15:02:16.102273',0,0,1,'S11P21A405','','https://lab.ssafy.com/s11-fintech-finance-sub1/S11P21A405',NULL,NULL,'s11-fintech-finance-sub1',NULL),(448,'2024-11-12 15:02:16.127929','2024-11-12 15:02:16.127938',0,0,1,'s11-bootcamp2','','https://lab.ssafy.com/hkc8857/s11-bootcamp2',NULL,NULL,'hkc8857',NULL),(449,'2024-11-12 15:02:16.151906','2024-11-12 19:35:35.121982',1,0,1,'s11-bootcamp2','','https://lab.ssafy.com/ssafy_11th/s11-bootcamp2','https://withme.s3.amazonaws.com/img/0b1d2dad-1d66-4489-a9e8-68803fb358aa_로그인 다크모드.PNG',341426251681676398,'ssafy_11th',NULL),(450,'2024-11-12 15:02:16.178719','2024-11-12 15:02:16.178725',0,0,1,'S11P12A706','','https://lab.ssafy.com/s11-webmobile1-sub2/S11P12A706',NULL,NULL,'s11-webmobile1-sub2',NULL),(451,'2024-11-12 15:02:16.201541','2024-11-12 15:02:16.201556',0,0,1,'S11P11A706','','https://lab.ssafy.com/s11-webmobile1-sub1/S11P11A706',NULL,NULL,'s11-webmobile1-sub1',NULL),(452,'2024-11-12 15:02:16.223614','2024-11-12 15:02:16.223619',0,0,1,'S11P10A755','','https://lab.ssafy.com/s11-study/S11P10A755',NULL,NULL,'s11-study',NULL),(453,'2024-11-12 15:05:34.266170','2024-11-14 15:46:59.391721',1,0,1,'Algo','','https://github.com/Jaeyoung9999/Algo','https://withme.s3.amazonaws.com/img/198cd75a-c66f-4e0d-89bb-ba238ae4d923_다운로드.jfif',7698757967283402745,'Jaeyoung9999',NULL),(454,'2024-11-12 15:05:34.291690','2024-11-12 15:05:34.291697',0,0,1,'algorithm','','https://github.com/Jaeyoung9999/algorithm',NULL,NULL,'Jaeyoung9999',NULL),(455,'2024-11-12 15:05:34.312982','2024-11-17 14:06:59.410623',1,0,1,'Algo_B','','https://github.com/Jaeyoung9999/Algo_B','https://withme.s3.amazonaws.com/img/276ceef2-ebd2-43d1-863f-b62d9b255f3a_싸인.png',6458002944422135532,'Jaeyoung9999',NULL),(456,'2024-11-12 15:05:34.333910','2024-11-12 15:05:34.333916',0,0,1,'Back','','https://github.com/Jaeyoung9999/Back',NULL,NULL,'Jaeyoung9999',NULL),(457,'2024-11-12 15:05:34.354852','2024-11-19 09:51:33.488060',1,0,1,'BlockNote','\n\n\n\n\n\n\n','https://github.com/Jaeyoung9999/BlockNote','https://withme.s3.amazonaws.com/img/70c8356f-b3fb-4f14-af1f-01138816feaf_캡처.PNG',4124996887670769644,'Jaeyoung9999',NULL),(458,'2024-11-12 15:05:34.384660','2024-11-17 14:07:40.619574',1,0,1,'DB','','https://github.com/Jaeyoung9999/DB','https://withme.s3.amazonaws.com/img/70e014ed-73ed-4523-835e-83c75284cc78_round1.png',1937516473348214453,'Jaeyoung9999',NULL),(459,'2024-11-12 15:05:34.409142','2024-11-12 15:05:34.409148',0,0,1,'eggorithm-study','','https://github.com/Jaeyoung9999/eggorithm-study',NULL,NULL,'Jaeyoung9999',NULL),(460,'2024-11-12 15:05:34.431976','2024-11-12 15:05:34.431998',0,0,1,'Front','','https://github.com/Jaeyoung9999/Front',NULL,NULL,'Jaeyoung9999',NULL),(461,'2024-11-12 15:05:34.454667','2024-11-12 15:05:34.454678',0,0,1,'graduation','','https://github.com/Jaeyoung9999/graduation',NULL,NULL,'Jaeyoung9999',NULL),(462,'2024-11-12 15:05:34.477684','2024-11-12 15:05:34.477689',0,0,1,'Interview','','https://github.com/Jaeyoung9999/Interview',NULL,NULL,'Jaeyoung9999',NULL),(463,'2024-11-12 15:05:34.501571','2024-11-19 02:35:26.658051',1,0,1,'Jaeyoung9999','???????????\n','https://github.com/Jaeyoung9999/Jaeyoung9999','https://withme.s3.amazonaws.com/img/b64b5783-b8f2-41e8-961b-f97766d6c5f2_cat.jpg',2870150642069227854,'Jaeyoung9999',NULL),(464,'2024-11-12 15:05:34.526802','2024-11-12 15:05:34.526808',0,0,1,'Jaeyoung9999.github.io','','https://github.com/Jaeyoung9999/Jaeyoung9999.github.io',NULL,NULL,'Jaeyoung9999',NULL),(465,'2024-11-12 15:05:34.545545','2024-11-12 15:05:34.545551',0,0,1,'JAVA','','https://github.com/Jaeyoung9999/JAVA',NULL,NULL,'Jaeyoung9999',NULL),(466,'2024-11-12 15:05:34.566137','2024-11-19 02:32:44.583057',1,0,1,'live-codes','\n\n','https://github.com/Jaeyoung9999/live-codes','https://withme.s3.amazonaws.com/img/5bf214d3-0214-48c9-9f48-e6ea4bc86f80_MSI_MAG.jpg',4504139934925145136,'Jaeyoung9999',NULL),(467,'2024-11-12 15:05:34.594916','2024-11-12 15:05:34.594922',0,0,1,'self-study','','https://github.com/Jaeyoung9999/self-study',NULL,NULL,'Jaeyoung9999',NULL),(468,'2024-11-12 15:05:34.618025','2024-11-12 15:05:34.618030',0,0,1,'Spring','','https://github.com/Jaeyoung9999/Spring',NULL,NULL,'Jaeyoung9999',NULL),(469,'2024-11-12 15:05:34.638953','2024-11-12 15:05:34.638958',0,0,1,'TIL','','https://github.com/Jaeyoung9999/TIL',NULL,NULL,'Jaeyoung9999',NULL),(470,'2024-11-12 15:05:34.661145','2024-11-14 10:20:18.284387',1,0,1,'Unity','','https://github.com/Jaeyoung9999/Unity','https://withme.s3.amazonaws.com/img/9630356c-1f3b-4561-8e08-49a58b6d6751_image.jpg',7219658760455144410,'Jaeyoung9999',NULL),(471,'2024-11-12 15:05:34.683100','2024-11-14 15:46:14.721239',0,0,1,'WithMe','','https://github.com/Jaeyoung9999/WithMe','https://withme.s3.amazonaws.com/img/5f46b2d3-f238-42f5-af29-c55bdae439cd_다운로드.jfif',NULL,'Jaeyoung9999',NULL),(472,'2024-11-12 15:06:25.684037','2024-11-19 12:30:12.076321',1,0,1,'S11P21A505','## 길었던 1년을 마무리하며\n\n숨가쁘게 달리다 보니 어느덧 싸피의 끝이 다가오고 있네요. **우리가 함께 보냈던 2024년이 여러분을 좋은 개발자가, 나아가 좋은 사람이 되게 해줄 밑거름이 될 수 있다면 좋겠습니다.** 우리의 앞날이 어떻게 될지는 아무도 모르지만, **어떤 길에 발을 내딛든 그 곳에 행운과 안녕이 깃들기를 바랄게요.**\n\n### 모두 파이팅!!\n\n![image.png](https://withme.s3.amazonaws.com/interImg/8f4259ce-56b7-4e3c-8f23-16aa80add17d_image.png)\n','https://lab.ssafy.com/s11-fintech-finance-sub1/S11P21A505','https://withme.s3.amazonaws.com/img/f5d34f4a-28b4-4f21-b592-c9b58716db36_DALL·E 2024-08-30 14.20.21 - A cute and playful logo design for a second-hand auction trading platform, with no text. The logo creatively incorporates elements of auction and bidd.png',6496432196645466798,'s11-fintech-finance-sub1','Based on the directory structure provided in the repository, the project appears to be a multi-component application with emphasis on both backend (Java based) and AI functionalities, supporting auction, deal management, member services, and job handling capabilities within its domain.\n\n1. The `backend` directory indicates a Java-specific structure with modules divided into multiple domain areas such as `auction`, `deal`, `inquiry`, `job`, and `member`. Each area consists of typical components like `controller`, `dto`, `entity`, `repository`, and `service`, suggesting a microservices or layered architecture catering to different aspects of the application functionality like user interactions, data transfer objects, database interactions, and business logic implementation.\n\n2. Presence of `mongo` directories under `repository` and `entity` folders within the domain areas suggests the use of MongoDB, a NoSQL database, implying that the application handles large, possibly unstructured data sets, which is typical in domains like auctions and deals.\n\n3. The `global` directory with subdirectories such as `api`, `config`, and `utils` implies shared configurations and utilities that cater across different parts of the application, enhancing functionalities like API management, application configuration, and error handling.\n\n4. Under `api`, the presence of `request` and `response` directories further supports the involvement of structured data communication possibly in handling HTTP requests/responses across different parts of the application.\n\n5. The `kafka` directory under `config` suggests the use of Apache Kafka, which is used for building real-time data pipelines and streaming apps. This is likely used to handle real-time data or events, such as bids in an auction scenario.\n\n6. The `ai` directory indicates the use of artificial intelligence, possibly to enhance decision-making processes, recommendations, or automated responses within the system, such as predicting auction outcomes, optimizing deals, or managing user interactions efficiently.\n\n7. `docker_setting` directory with specific folders for `chatbot_docker` and `dabid_docker` implies the use of Docker containers for deploying services like chatbots and possibly for the main application (Dabid), ensuring scalability, simplicity in setup, and consistency across environments.\n\n8. The existence of `chatbot_docker` and `redis` directories suggests the application incorporates a chatbot feature, possibly for user interaction and customer support, utilizing Redis as an in-memory data structure store, used as a database, cache, and message broker.\n\n9. Test directories under `java` reflect thorough testing practices, likely unit and integration tests ensuring that individual components and integrations between them are functional and reliable.\n\n10. The project seems to be managed using GitLab (as suggested by `.gitlab` directory) which provides tools for issue tracking and merge request templates, ensuring smooth operations and collaboration among development team members.\n\nIn summary, the project is a scalable, microservices-based application primarily focused on auctioning, dealing, member management, and related functionalities, potentially enhanced by AI, and supported by robust real-time processing and interaction systems.'),(473,'2024-11-12 15:06:25.737218','2024-11-12 15:06:25.737224',0,0,1,'s11p12a608','','https://lab.ssafy.com/s11/a17/s11p12a608',NULL,NULL,'s11/a17',NULL),(474,'2024-11-12 15:06:25.759285','2024-11-12 19:45:22.242719',1,0,1,'S11P12A408','### getsBee\n\n\n\n','https://lab.ssafy.com/s11-webmobile2-sub2/S11P12A408','https://withme.s3.amazonaws.com/img/89d436d7-26fd-49d3-a5b6-7e1550706a42_D47CC4B9-4E89-47CD-B644-86A25CB14CE0.png',5971634829102396367,'s11-webmobile2-sub2',NULL),(475,'2024-11-12 15:06:25.781497','2024-11-12 19:49:30.940731',1,0,1,'S11P11A408','### getsBee\n\n* README 작성\n\n\n\n','https://lab.ssafy.com/s11-webmobile2-sub1/S11P11A408','https://withme.s3.amazonaws.com/img/220fc3d9-6843-4054-b7f6-870c170fdf12_owing.png',6773425122764108415,'s11-webmobile2-sub1',NULL),(476,'2024-11-12 15:06:25.803976','2024-11-12 15:06:25.803982',0,0,1,'S11P10A456','','https://lab.ssafy.com/s11-study/S11P10A456',NULL,NULL,'s11-study',NULL),(477,'2024-11-12 15:06:25.825427','2024-11-12 15:06:25.825432',0,0,1,'enjoytrip_final_s11-a17-team6','','https://lab.ssafy.com/s11/a17/enjoytrip_final_s11-a17-team6',NULL,NULL,'s11/a17',NULL),(478,'2024-11-12 15:06:25.847982','2024-11-12 15:06:25.847988',0,0,1,'enjoytrip_final_s11-a17-team06','','https://lab.ssafy.com/s11/a17/enjoytrip_final_s11-a17-team06',NULL,NULL,'s11/a17',NULL),(479,'2024-11-12 15:06:25.870193','2024-11-12 15:06:25.870198',0,0,1,'enjoytrip_database_s11-a17-team10','','https://lab.ssafy.com/xorjsghkd1011/enjoytrip_database_s11-a17-team10',NULL,NULL,'xorjsghkd1011',NULL),(480,'2024-11-12 15:06:25.894784','2024-11-12 15:06:25.894790',0,0,1,'enjoytrip_frontend_s11_team11','','https://lab.ssafy.com/s11/a17/enjoytrip_frontend_s11_team11',NULL,NULL,'s11/a17',NULL),(481,'2024-11-12 16:45:02.122321','2024-11-18 11:01:13.108345',1,0,1,'s11-bootcamp2','\n###\n\n\n','https://lab.ssafy.com/xorjsghkd1011/s11-bootcamp2','https://withme.s3.amazonaws.com/img/e0882a76-6e6c-4046-85a6-a893e2503570_gitlab.png',4206019134292410201,'xorjsghkd1011',NULL),(482,'2024-11-12 16:45:02.192073','2024-11-19 01:18:31.989580',1,0,1,'S11P12A207','### 주요 기능\n\n본 저장소는 다양한 기능을 제공하는 백엔드 및 프론트엔드 시스템으로 구성되어 있습니다. 주요 기능은 다음과 같습니다:\n\n1.  **실시간 채팅 기능**\n\n    *   `ChatController`와 `ChatRoomController`를 통해 사용자 간의 실시간 채팅 및 채팅방 관리를 지원합니다.\n    *   `KafkaConsumerService`를 이용한 메시지 처리로, 높은 처리량과 확장성을 제공합니다.\n    *   MongoDB를 사용하여 채팅 데이터를 저장하고 관리합니다 (`ChatMongoRepository`).\n\n2.  **사용자 관리**\n\n    *   사용자 등록, 로그인 및 인증 관련 기능을 처리하는 `UserController` 및 관련 DTOs (`request` 및 `response`)를 포함합니다.\n    *   사용자 데이터는 안전하게 관리되며, `UserRepository`를 통해 데이터베이스와의 상호작용이 이루어집니다.\n\n3.  **친구 관리 시스템**\n\n    *   사용자는 친구 요청을 보내고 받을 수 있으며, 친구 관계를 관리할 수 있습니다 (`FriendController`, `FriendService`).\n\n4.  **보안 및 인증 구성**\n\n    *   `WebSecurityConfig`를 통해 웹 보안 설정을 구성합니다.\n    *   WebSocket 연결에 대한 보안 설정은 `WebSocketConfig`에서 관리합니다.\n\n5.  **API 설계 및 관리**\n\n    *   RESTful API를 통해 데이터를 효율적으로 전송하고 관리합니다.\n    *   `ResponseCode` 및 `ResponseMessage` 클래스를 통해 일관된 응답 메시지 및 코드를 제공합니다.\n\n6.  **프론트엔드 인터페이스**\n\n    *   React 기반의 프론트엔드 구조에서는 `components`, `pages` 등을 통해 사용자 인터페이스를 구성합니다.\n    *   실시간 비디오 처리 및 얼굴 인식 기능을 위한 `facemesh`, `mediapipeCDN` 등의 자원을 활용합니다.\n\n이러한 기능들은 모두 사용자의 편의성과 서비스의 신뢰성 증진을 위해 설계되었습니다. 각 기능은 독립적으로도 우수한 성능을 발휘하지만, 통합된 시스템으로서 더 큰 시너지를 발휘합니다.\n\n### 실행 환경\n\n| TECH           | Version |\n| -------------- | ------- |\n| React          | 18.3.1  |\n| livekit-client | 2.4.0   |\n| spring boot    | 3.3.2   |\n| java           | 17      |\n| mySQL          | 8.0.33  |\n| jwt            | 0.11.2  |\n| junit          | 5.12.0  |\n| mongodb        | 3.3.0   |\n| kafka          | 3.8.0   |\n| oauth          | 2.0     |\n\n### 실행 방법\n\n### 🔐 Backend\n\n```javascript\n$ ./gradlew clean build;\n$ java -jar build/libs/*SNAPSHOT.jar\n```\n\n### 🌅 Front-end\n\n```javascript\n$ npm install\n$ npm start\n```\n\n## 🎥 프로젝트 개요\n\nOpenVidu와 SockJs를 활용해 실시간 화상 회의와 채팅을 기반으로 한 소개팅 서비스\n\n### 개발 기간\n\n2024-07-02 ~ 2024 -08-16\n\n### 🧑‍🤝‍🧑 Team members\n\n| Backend       | Frontend      |\n| ------------- | ------------- |\n| 이지은, 조성욱, 황태건 | 서승호, 장승연, 최희현 |\n\n## 💻 Tech Stack\n\n### 🔐 Backend\n\n![BlockNote image](https://img.shields.io/badge/java-007396?style=for-the-badge\\&logo=java\\&logoColor=white)![BlockNote image](https://img.shields.io/badge/mysql-4479A1?style=for-the-badge\\&logo=mysql\\&logoColor=white)![BlockNote image](https://img.shields.io/badge/mongoDB-47A248?style=for-the-badge\\&logo=MongoDB\\&logoColor=white)![BlockNote image](https://img.shields.io/badge/spring-6DB33F?style=for-the-badge\\&logo=spring\\&logoColor=white)![BlockNote image](https://img.shields.io/badge/amazonaws-232F3E?style=for-the-badge\\&logo=amazonaws\\&logoColor=white)\n\n### 🌅 Front-end\n\n![BlockNote image](https://img.shields.io/badge/javascript-F7DF1E?style=for-the-badge\\&logo=javascript\\&logoColor=black)![BlockNote image](https://img.shields.io/badge/react-61DAFB?style=for-the-badge\\&logo=react\\&logoColor=black)![BlockNote image](https://img.shields.io/badge/bootstrap-7952B3?style=for-the-badge\\&logo=bootstrap\\&logoColor=white)\n\n*   외모만 보는 소개팅, 지루하고 재미없는 소개팅은 그만!\n*   내면에 집중할 수 있도록 가면을 쓴 채 비대면 소개팅을 진행합니다.\n*   상대의 속마음을 알 수 있도록 상대방의 표정을 실시간으로 감지하여 감정을 분석합니다.\n\n\n## 느낀점\n\n*   서승호(프론트엔드)\n\n    *   AI를 활용해서 얼굴을 인식하고 가면을 씌우는 과정이 흥미로웠습니다.\n\n*   이지은(백엔드)\n\n    *   팀장으로써 유의미한 시간이었습니다.\n\n*   장승연(프론트엔드)\n\n    *   스스로 공부해가며 개발에 필요한 내용을 직접 찾아보고 배울 수 있는 유의미한 시간이였습니다.\n\n*   조성욱(백엔드)\n\n    *   더 완성도 높은 기능에 대해 고민하게 되었습니다.\n\n*   최희현(프론트엔드)\n\n    *   기획 단계의 목적을 분명하게 해야 개발자들이 기술 개발하기 용이하다는 걸 알게 되었습니다.\n\n*   황태건(백엔드)\n\n    *   인프라는 처음 해보는데 도움이 되는 경험이였습니다. 팀원들 덕분에 즐거웠습니다.\n','https://lab.ssafy.com/s11-webmobile1-sub2/S11P12A207','https://withme.s3.amazonaws.com/img/d805f985-2dcd-479c-b868-69fcd6d8afbb_logoimg.jpg',1268917255090388664,'s11-webmobile1-sub2','Based on the directory and file structure of the given repository, this project appears to be a web application that features real-time communication capabilities, potentially including video chatting and messaging functionalities. The backend is built with Java, utilizing Spring Boot (indicated by the presence of specific directories like \'controller\', \'service\', \'entity\', and \'repository\'). The backend also integrates Kafka for messaging services, alongside MongoDB and JPA for data handling, reflecting a complex system architecture focused on robust data management and asynchronous message handling.\n\nThe frontend structure suggests the use of modern JavaScript frameworks (likely React, Vue, or Angular given the structure) and demonstrates integration with OpenVidu, a platform for adding video call functionalities. The mention of directories like \'facemesh\' and \'mediapipeCDN\' in the frontend indicates that the application might also involve advanced features related to facial recognition or real-time face tracking, enhancing its video chat capabilities.\n\nOverall, this project seems to focus on providing a comprehensive communication platform, integrating advanced user interaction features such as chat rooms, video conferencing, and potentially augmented reality features for live video manipulations. The inclusion of various user-related functionalities (signaled by modules like user, chat, friend) further underscores the application\'s role as a social or professional networking service where real-time interaction is key.'),(483,'2024-11-12 16:45:02.215413','2024-11-12 16:45:02.215419',0,0,1,'S11P11A207','','https://lab.ssafy.com/s11-webmobile1-sub1/S11P11A207',NULL,NULL,'s11-webmobile1-sub1',NULL),(484,'2024-11-12 16:45:02.239551','2024-11-12 16:45:02.239556',0,0,1,'S11P10A257','','https://lab.ssafy.com/s11-study/S11P10A257',NULL,NULL,'s11-study',NULL),(485,'2024-11-12 16:45:02.264241','2024-11-12 16:45:02.264247',0,0,1,'enjoytrip_vue_s11_a17_team9','','https://lab.ssafy.com/xorjsghkd1011/enjoytrip_vue_s11_a17_team9',NULL,NULL,'xorjsghkd1011',NULL),(486,'2024-11-12 16:45:02.328793','2024-11-12 16:45:02.328810',0,0,1,'enjoytrip_framework_s11-a17-team11','','https://lab.ssafy.com/xorjsghkd1011/enjoytrip_framework_s11-a17-team11',NULL,NULL,'xorjsghkd1011',NULL),(487,'2024-11-12 16:45:02.375939','2024-11-18 18:57:58.840722',1,0,1,'enjoytrip_algorithm_s11_a17_team10','# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n*   List\n\n    *   Sublist\n\n<!---->\n\n*   [x] 멋지게 첫 인사 하기\n*   [ ] 끝내주는 `WithMe` 기능들 소개하기\n\n```markdown\nhello world\n```\n\n| Hello | World  | ! |\n| ----- | ------ | - |\n| Hello | WithMe | ! |\n','https://lab.ssafy.com/xorjsghkd1011/enjoytrip_algorithm_s11_a17_team10','https://withme.s3.amazonaws.com/img/3b71c28e-e1fa-4389-bd48-556844d1763c_image (3).png',2594472813848580000,'xorjsghkd1011','The project seems to be a web application developed using Java, specifically with frameworks and tools like Eclipse, Maven, and potentially Spring (suggested by the structure and dependencies management). It is structured to handle various functionalities through a Model-View-Controller (MVC) architecture.\n\nThe application contains various controllers such as `ApiController`, `BoardController`, `MemberController`, and `WorldcupController`, hinting at features related to general APIs, user management, discussion boards, and a specific feature or game related to a \"World Cup\" theme. Corresponding Data Transfer Objects (DTOs) and Data Access Object (DAO) implementations suggest database interactions covering similar thematic areas.\n\nThe presence of a `trip.mwb` file suggests the application might involve travel or location-based features, which could align with the World Cup theme, potentially providing information or services related to tourist attractions (`AttractionDto`, `WorldcupDto`) and lodging or activities in different districts (`GunguDto`).\n\nWeb resources (CSS, JS, images) and folders like `worldcup`, `member`, and `board` in the `webapp` directory indicate the user interface components are well-organized to cater to these specific modules.\n\nSQL files in the `res` directory like `Dump20230324.sql` and `table.sql` indicate database schema management and possibly some sample data related to the application\'s functionalities.\n\nOverall, this is a comprehensive web-based platform possibly intended for managing and displaying content related to a thematic event like a World Cup, which includes features for interacting with users through memberships, discussion boards, and providing information or services about attractions and activities in various regions.'),(488,'2024-11-12 19:34:32.514008','2024-11-12 19:34:32.514014',0,0,1,'S11P31A203','','https://lab.ssafy.com/s11-final/S11P31A203',NULL,NULL,'s11-final',NULL),(489,'2024-11-12 19:34:32.540093','2024-11-12 19:34:32.540098',0,0,1,'s11-bootcamp2','','https://lab.ssafy.com/hoshogi/s11-bootcamp2',NULL,NULL,'hoshogi',NULL),(490,'2024-11-12 19:34:32.562650','2024-11-12 19:34:32.562654',0,0,1,'S11P21A103','','https://lab.ssafy.com/s11-ai-image-sub1/S11P21A103',NULL,NULL,'s11-ai-image-sub1',NULL),(491,'2024-11-13 13:05:51.459358','2024-11-14 14:31:57.889441',1,0,1,'my-awesome-project','# WithMe\n\n\n## 주요 기능\n\n별 거 없습니다.\n','https://lab.ssafy.com/xorjsghkd1011/my-awesome-project','https://withme.s3.amazonaws.com/img/b9bf3dac-7d01-444f-a7e6-a0864807f0bd_handgun-3149414_640.webp',3426929110377410907,'xorjsghkd1011',NULL),(492,'2024-11-13 15:09:30.788594','2024-11-13 15:10:00.206409',1,0,1,'S11P31A307','','https://lab.ssafy.com/s11-final/S11P31A307','https://withme.s3.amazonaws.com/img/9be3c442-f7de-41eb-8bd1-abee0c49c7a4_30v.png',7113791308063392585,'s11-final',NULL),(493,'2024-11-13 15:09:30.818760','2024-11-13 15:09:30.818767',0,0,1,'s11-bootcamp2','','https://lab.ssafy.com/plrare.dev/s11-bootcamp2',NULL,NULL,'plrare.dev',NULL),(494,'2024-11-13 15:09:30.847253','2024-11-13 15:09:30.847260',0,0,1,'S11P21A302','','https://lab.ssafy.com/s11-ai-image-sub1/S11P21A302',NULL,NULL,'s11-ai-image-sub1',NULL),(495,'2024-11-13 15:09:30.938149','2024-11-13 15:09:30.938157',0,0,1,'S11P12A508','','https://lab.ssafy.com/s11-webmobile2-sub2/S11P12A508',NULL,NULL,'s11-webmobile2-sub2',NULL),(496,'2024-11-13 15:09:30.964706','2024-11-13 15:09:30.964714',0,0,1,'S11P11A508','','https://lab.ssafy.com/s11-webmobile2-sub1/S11P11A508',NULL,NULL,'s11-webmobile2-sub1',NULL),(497,'2024-11-13 15:09:30.992964','2024-11-13 15:09:30.992972',0,0,1,'S11P10A516','','https://lab.ssafy.com/s11-study/S11P10A516',NULL,NULL,'s11-study',NULL),(498,'2024-11-13 15:33:48.209613','2024-11-13 15:37:46.840704',1,0,1,'YICcapstone','### 헤더\n\n이 Git 저장소는 `YICstone` 프로젝트를 위한 소스 코드를 포함하고 있습니다. 주요 구성 요소는 다음과 같습니다:\n\n* **audiobook**: 오디오북 관련 기을 처리하는 모듈로, 컨트롤러, 서비스, 리포지토리, DTO, 예외 처리 클래스가 포함되어 있습니다.\n* **basket**: 사용자의 장바구니 기능을 관리하는 모듈로, 전자책과성 모델을 장바구니에 추가하고 관리하는 기능을 제공합니다.\n* **ebook**: 전자책 관련 기능을 담당하는 모듈로, 전자책 생성, 조회 등의 기능을 제공합니다.\n* \\*\\*feedback 사용자 피드백을 관리하는 모듈로, 피드백 등록과 조회 기능을 처리합니다.\n* **member**: 사용자 관리 모듈로, 회원 가입, 정보 조회, 정보 수정, 로그인 처리 등의 기능을 제공합니다- **purchase**: 구매 관리 모듈로, 전자책 및 음성 모델 구매와 관련된 기능을 제공합니다.\n* **search**: 검색 기능을 처리하는 모듈로, 전자책과 음성 모델 검색 기능 지원합니다.\n* **voicemodel**: 음성 모델 관련 기능을 담당하는 모듈로, 음성 모델 생성 및 관리 기능을 제공합니다.\n* **wish**: 사용자의 찜 목록 관리 기능을 처리하는 모듈입니다이 프로젝트는 다양한 사용자 요구를 충족시키기 위해 설계된 웹 애플리케이션 구조를 가지고 있으며, Java Spring Boot를 주요 기술 스택으로 사용하고 있습니다. 데이터는 H2베이스를 사용하여 관리됩니다. 또한, 보안을 위해 JWT(Json Web Tokens)를 이용한 인증 및 인가 처리가 포함되어 있습니다.\n\n전체적으로, 이 저장소는 대규모 웹 애플리케이션의 백드 및 프론트엔드 코드를 포함하고 있으며, 기능별로 잘 정리된 모듈 구조를 통해 프로젝트의 유지보수 및 확장성을 높이고 있습니다.\n\n\n\n','https://github.com/castlechoi/YICcapstone','https://withme.s3.amazonaws.com/img/910b713e-1099-4e83-8be4-6e12971e9f00_ij_logo.png',6528551980745246747,'castlechoi',NULL),(499,'2024-11-13 15:33:48.258651','2024-11-13 15:33:48.258656',0,0,1,'algo-study','','https://github.com/styughjvbn/algo-study',NULL,NULL,'styughjvbn',NULL),(500,'2024-11-13 15:33:48.280337','2024-11-13 15:33:48.280343',0,0,1,'YICcapstone','','https://github.com/TaeHoonIm/YICcapstone',NULL,NULL,'TaeHoonIm',NULL),(501,'2024-11-13 15:33:48.300275','2024-11-13 15:33:48.300280',0,0,1,'client-univ','','https://github.com/YWJ1228/client-univ',NULL,NULL,'YWJ1228',NULL),(502,'2024-11-13 15:33:48.322508','2024-11-13 15:33:48.322514',0,0,1,'CodeSync','','https://github.com/YWJ1228/CodeSync',NULL,NULL,'YWJ1228',NULL),(503,'2024-11-13 15:33:48.345037','2024-11-13 15:33:48.345043',0,0,1,'docker-selenium-lambda','','https://github.com/YWJ1228/docker-selenium-lambda',NULL,NULL,'YWJ1228',NULL),(504,'2024-11-13 15:33:48.389922','2024-11-13 15:33:48.389927',0,0,1,'IntelliJ-Platform-Plugin-Template','','https://github.com/YWJ1228/IntelliJ-Platform-Plugin-Template',NULL,NULL,'YWJ1228',NULL),(505,'2024-11-13 15:33:48.412431','2024-11-13 15:33:48.412436',0,0,1,'server-univ','','https://github.com/YWJ1228/server-univ',NULL,NULL,'YWJ1228',NULL),(506,'2024-11-13 15:33:48.437604','2024-11-13 15:33:48.437609',0,0,1,'SSAFY','','https://github.com/YWJ1228/SSAFY',NULL,NULL,'YWJ1228',NULL),(507,'2024-11-13 15:33:48.458967','2024-11-13 15:33:48.458972',0,0,1,'test','','https://github.com/YWJ1228/test',NULL,NULL,'YWJ1228',NULL),(508,'2024-11-13 15:33:48.488147','2024-11-13 15:33:48.488153',0,0,1,'YICcapstone','','https://github.com/YWJ1228/YICcapstone',NULL,NULL,'YWJ1228',NULL),(509,'2024-11-14 09:51:00.439954','2024-11-14 09:51:00.439960',0,0,1,'S11P21A206','','https://lab.ssafy.com/s11-fintech-finance-sub1/S11P21A206',NULL,NULL,'s11-fintech-finance-sub1',NULL),(510,'2024-11-14 09:51:00.503035','2024-11-14 09:51:00.503041',0,0,1,'S11P12A603','','https://lab.ssafy.com/s11-webmobile1-sub2/S11P12A603',NULL,NULL,'s11-webmobile1-sub2',NULL),(511,'2024-11-14 09:51:00.530529','2024-11-14 09:51:00.530536',0,0,1,'S11P11A603','','https://lab.ssafy.com/s11-webmobile1-sub1/S11P11A603',NULL,NULL,'s11-webmobile1-sub1',NULL),(512,'2024-11-14 09:51:00.553374','2024-11-14 09:51:00.553380',0,0,1,'S11P10A641','','https://lab.ssafy.com/s11-study/S11P10A641',NULL,NULL,'s11-study',NULL),(513,'2024-11-14 09:54:53.093299','2024-11-16 19:28:45.445994',1,0,1,'SHOTGUN','Unity3D를 활용한 장애물 달리기게임 - SHOTGUN\n\n======================\n\n프로젝트 소개\n\n--------------------\n\n3인 팀프로젝트로서 개발한 장애물 달리기 게임이다.\n\n각각의 팀원이 하나의 스테이지를 맡아 개발하였으며, 본인은 플레이어,1스테이지(숲)을,UI,BGM 등을 담당하여 개발하였다.\n\nSHOTGUN은 유니티3D 엔진을 활용한 장애물 달리기 게임이다.\n\n게임 AutoSaveGame-\"ALT F4\"와, 예능프로그램 \"출발 드림팀\"을 모티브로하여, 개발하였다.\n\n플레이어는 맵에 배치된 다양한 장애물을 통과하여 골인지점에 도달해야한다.\n\n게임 스토리\n\n-----------------\n\n![image](<https://user-images.githubusercontent.com/56360477/135045871-b4135e62-67b8-427a-8c0f-8af72074acb7.png>)\n\n게임의 주인공인 ‘Bandit’은 트레져헌터이다. 그는 어느날 숲속에 숨겨진 유적지에 엄청난 보물이 있다는 소식을 듣게 된다. 그는 보물을 찾기위해 거대한 숲으로 들어갔다. 숲속에는 누군가 설치한 온갖 함정들이 존재하였는데, 그는 이러한 함정들을 헤쳐나가며, 보물을 찾기 위해 노력한다.\n\n프로그램 구조\n\n------------------\n\n![image](<https://user-images.githubusercontent.com/56360477/135045982-f927759f-bc28-4bf8-939c-c39e66eac0af.png>)\n\n조작법\n\n---------\n\nW:위로 이동\n\nS:아래로 이동\n\nA:왼쪽으로 이동\n\nD:오른쪽으로 이동\n\nSPACEBAR:점프\n\nSHIFT:달리기\n\nESC:메뉴\n\n실행화면\n\n---------------\n\n![image](<https://user-images.githubusercontent.com/56360477/135046246-cae84118-1052-46b4-9954-efad41fb8465.png>)\n\n![image](<https://user-images.githubusercontent.com/56360477/135046262-05e5fae7-dfaf-4c08-9518-102d615f4692.png>)\n\n![image](<https://user-images.githubusercontent.com/56360477/135046275-c1d67f73-13b1-4ae3-a128-470932bd07a4.png>)\n\n![image](<https://user-images.githubusercontent.com/56360477/135046287-2ba0b7b0-4083-4a44-8b6c-6aa866adb1aa.png>)\n\n![image](<https://user-images.githubusercontent.com/56360477/135046296-741374cb-b366-495b-aad2-bb880fff692e.png>)\n\n![image](<https://user-images.githubusercontent.com/56360477/135046307-818ae03d-0a77-4985-bf5b-87e0c6627b26.png>)\n\n시연영상\n\n---------------\n\n<https://www.youtube.com/watch?v=OlFlbu8n1_M>\n\n\n\n\n','https://github.com/jinsu7500/SHOTGUN','https://withme.s3.amazonaws.com/img/e45fb82f-e96d-4baa-a18c-0f91038b6639_shotgun.jfif',352278822975783672,'jinsu7500',NULL),(514,'2024-11-14 09:54:53.189639','2024-11-17 22:15:17.874499',1,0,1,'BreakFriendShip','# notice_board1111\n\nJSP를 활용한 게시판\n\n## 개요\n\n게시판을 만듦으로써 대용량 데이터일때 처리해야하는 페이징 처리, 민감한 정보를 저장할 때 암호화 처리, 이메일 인증 API, BACK End, Front End 공부를 하기 위해서 본 프로젝트를 수행하였다.\n\n## 페이징 처리 - 게시판\n\n페이징 처리란 데이터 베이스에 저장된 데이터가 소량일 경우는 상관이 없지만, 대량일 경우 한꺼번에 불러와서 처리하는 것은 비효율적이다. 그 이유는 사용자가 직접 보는 화면에는 소량의 데이터만 필요하기 때문이다.\n\n![carbon](<https://user-images.githubusercontent.com/74814641/160281871-b7ebbc90-6668-428e-8577-57f77bac259a.png>)\n\n위 코드는 DB에서 게시판 데이터를 불러와 ArrayList에 저장한 뒤 리턴하는 코드의 일부이다. 1페이지일 때 실행되는 코드로 쿼리문은 bbs(게시판)테이블에서 데이터를 불러오되 bbsID가 getNext()(이 함수는 데이터가 저장될 때 그 다음 bbsID를 가져오는 함수)보다 작고 bbsAvailable(1이면 존재, 0이면 삭제)가 1이고 bbsID를 내림차순으로 정렬하고 10개만 가져오는 쿼리이다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282559-cd442204-c56c-4452-bc72-02dc8444d74a.png>)\n\n위에 이미지를 보게되면 1페이지 임으로 해쉬맵 변수 head_list에 key값으로 1, value로는 23이 저장된다. tail_list에도 마찬가지로 key값으로 1, value로는 10이 저장된다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282901-5b9c5fda-7c17-43ac-b894-7b43d498b95d.png>)\n\n위에 이미지를 보게되면 2페이지 임으로 해쉬맵 변수 head_list에 key값으로 2, value로는 9가 저장된다. tail_list에도 마찬가지로 key값으로 2, value로는 1이 저장된다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282791-09933af6-c284-40bb-a267-7bb00dedaaa1.png>)\n\n위에 이미지는 해쉬맵에 저장된 head_list, tail_list를 가지고 데이터를 가져오는 코드이다. 이렇게 하여 페이지를 자유롭게 이동하여도 PageNumber를 key값으로 하여 해쉬맵에서 bbsID를 가져와서 데이터를 가져온다. 이렇게 하여 게시판 페이징 처리를 구현하였다.\n\n## 페이징 처리 - 댓글\n\n댓글에 모든 데이터를 불러와서 처리하기 보다는 현재 화면에 필요한 정보의 데이터만 가져오도록 구현하였다. 그 방법은 스크롤바가 화면 맨 아래에 닿았을 때 AJAX를 활용하여 10개의 데이터만 가져오도록 구현하였다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160283538-ca22fc79-773b-4be5-bf12-34b0741ef450.png>)\n\nJQuery를 사용하였고 스크롤바가 화면 맨 아래에 있는지 확인하는 조건문이 있다. 그 조건을 만족한다면 AJAX를 활용하여 새로고침하지 않아도 댓글을 볼 수 있도록 하였다. replyListAction.jsp에서 전달받은 문자열을 가공처리하고 화면에 나타나는 함수이다.\n\n![ezgif com-gif-maker](<https://user-images.githubusercontent.com/74814641/160284125-e9f5497e-5f9d-45d9-b530-44547012d7bf.gif>)\n\n댓글 페이징 처리이다.\n\n## BCrpyt를 이용한 중요정보 암호화\n\n![image](<https://user-images.githubusercontent.com/74814641/160284270-c0883bcb-1573-4aff-84ce-0762d2fac544.png>)\n\n주민등록번호, 비밀번호, 이메일 인증에 필요한 해쉬값이 암호화 되어있는 것을 볼 수 있다.\n\n## Google Gmail API를 사용한 비밀번호 인증\n\n<https://user-images.githubusercontent.com/74814641/160284505-35d026f9-6978-4098-be32-a4ba6dc93552.mp4>\n\nURL 해쉬코드값과 DB에 저장된 해쉬코드값이랑 비교하여 인증을 한다.\n\n\n\n','https://github.com/qjatjs123123/BreakFriendShip','https://withme.s3.amazonaws.com/img/501c47f9-2f0b-40e6-8c8c-0612f06e59a1_breakfriendship.jfif',5590256978741015135,'qjatjs123123',NULL),(515,'2024-11-14 09:54:53.209481','2024-11-17 16:31:49.900839',1,0,1,'Csharp-Network-Project','','https://github.com/qjatjs123123/Csharp-Network-Project','https://withme.s3.amazonaws.com/img/8e97e936-b5fa-4086-bfb5-7cc3929d5de0_Vector.svg',5629964622555596171,'qjatjs123123',NULL),(516,'2024-11-14 09:54:53.230273','2024-11-16 19:32:28.780372',1,0,1,'Highway_rest-area_restaurant_KIOSK','# 고속도로 휴게소 식당 키오스크\n\n## 개요\n\n고속도로 휴게소에서 손님들이 사용하는 키오스크가 있어야 하고, 손님들이 주문한 내역을 주방에서 알 수 있게 해야 하고, 주문이 완료된 주문번호를 알려주어야 한다. 이러한 시스템을 구현한 프로그램이다.\n\n## 사용 기술\n\n1. 자바스크립트\n\n2. CSS\n\n3. JSP\n\n4. Web Socket\n\n5. Imgur API\n\n6. Maria DB\n\n7. AJAX\n\n## 저작권(라이센스)\n\nC-2021-020526\n\n## 키오스크 프로그램 동작 과정\n\n1. 회원가입을 한다.\n\n2. 로그인 후 관리자 모드에 접속한다.\n\n3. 관리자 모드에서 메뉴 이미지 선택, 이름, 가격을 입력한다.\n\n4. 메뉴판 모드에 접속한다.\n\n5. 메뉴판 페이지에서 주문한 음식 정보가 웹 소캣을 통해 주방 페이지에 전달된다.\n\n6. 주방 페이지에서 완료된 음식은 클릭하여 삭제한다.\n\n7. 주방 페이지에서 대기 번호를 송신 후 번호 페이지에서 대기 번호를 수신 한다.\n\n8. 기록 페이지에서 월/일/시간 별로 총 수입을 알 수 있다.\n\n## 페이지 이미지\n\n### 로그인 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134827217-69e5f5e2-4ee0-46bc-85d1-95f76ae9ef4c.png>)\n\n### 모드 선택 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/229352053-c0a1a3f9-814a-4a07-92fe-9bc457dbd9f3.png>)\n\n### 주방 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134827287-5c676ad5-c6c1-40f7-b0de-f8d14460ff6d.png>)\n\n### 메뉴판 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134827321-f9c1d0fc-34fc-4431-9468-e25dce66859e.png>)\n\n### 장바구니 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134827352-6ec0e236-ba89-4b22-a4a1-99cca7a11957.png>)\n\n### 번호 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/229352616-5a4890e8-e770-4ba4-a5ce-acb7300a850c.png>)\n\n### 관리자 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134827414-a71b8b75-526c-4534-9cb7-371f27c8c994.png>)\n\n## 기능 설명(영상)\n\n### 주요 기능\n\n1. 회원가입\n\n2. ID찾기\n\n3. PW찾기\n\n4. 메뉴 주문\n\n5. 주문한 메뉴 주방 페이지에 출력\n\n6. 관리자 모드에서 메뉴 관리 및 매출 관리\n\n### 회원가입 - ID 중복체크는 AJAX를 이용하여 구현, 비밀번호 형식체크 구현\n\n<https://user-images.githubusercontent.com/74814641/134828356-b673c53a-8ea1-4cf1-8735-ff275a76b8cd.mp4>\n\n### ID찾기\n\n<https://user-images.githubusercontent.com/74814641/134828491-5ff9cee0-eee1-415f-9e29-28ac2c6cfc4c.mp4>\n\n### PW찾기\n\n<https://user-images.githubusercontent.com/74814641/134828536-885bbfc5-9336-4c42-a222-a37572e1601a.mp4>\n\n### 관리자 모드 - IMGUR API를 통해 이미지를 DB에 저장\n\n<https://user-images.githubusercontent.com/74814641/134828773-1a6e20a6-bbb2-4df1-a1b9-48920209b3a4.mp4>\n\n### 메뉴 주문 및 주방 페이지 전달 - 웹 소캣을 통해 메뉴판 페이지와 주방 페이지 송수신\n\n<https://user-images.githubusercontent.com/74814641/134828956-5746ab0f-b224-4086-b80f-aa0b8dfd3b46.mp4>\n\n### 매출 관리 - 년/월/일 별로 매출\n\n<https://user-images.githubusercontent.com/74814641/134829217-caffc4cb-60d9-473b-9579-b50a6d23143c.mp4>\n\n시연영상\n\n<https://youtu.be/vh9ZiJ5MH9I>\n\n\n\n\n','https://github.com/qjatjs123123/Highway_rest-area_restaurant_KIOSK','https://withme.s3.amazonaws.com/img/ce347651-9686-47cb-bcb5-e5f8f3c31562_kiosk.png',2277844423671724265,'qjatjs123123',NULL),(517,'2024-11-14 09:54:53.250583','2024-11-16 18:54:31.484470',1,0,1,'javascript-baseball-6','\n\n\n','https://github.com/qjatjs123123/javascript-baseball-6','https://withme.s3.amazonaws.com/img/015b4bb2-52cc-49fa-b3e8-a3b218c80deb_ssafy.png',3249713500294723677,'qjatjs123123',NULL),(518,'2024-11-14 09:54:53.270064','2024-11-17 20:20:37.151011',1,0,1,'javascript-christmas-6-qjatjs123123','123213123123213\n\n\n\n','https://github.com/qjatjs123123/javascript-christmas-6-qjatjs123123','https://withme.s3.amazonaws.com/img/1a33aac5-ed6c-431c-a324-529ac2e8beda_4092564-about-mobile-ui-profile-ui-user-website_114033.svg',2317229823651462602,'qjatjs123123',NULL),(519,'2024-11-14 09:54:53.286842','2024-11-17 16:39:04.074638',1,0,1,'javascript-lotto-6','','https://github.com/qjatjs123123/javascript-lotto-6','https://withme.s3.amazonaws.com/img/ebf8d984-bbbf-444b-b707-e4b87aff664c_SSAFY Field Trip 활동 보고서(A507).pptx',2053518431802274897,'qjatjs123123',NULL),(520,'2024-11-14 09:54:53.306740','2024-11-14 09:54:53.306746',0,0,1,'javascript-racingcar-6','','https://github.com/qjatjs123123/javascript-racingcar-6',NULL,NULL,'qjatjs123123',NULL),(521,'2024-11-14 09:54:53.335124','2024-11-16 19:53:13.331209',1,0,1,'KIOSK_MOVIE','# 웹을 활용한 키오스크_영화예매\n\n## 데모 버전\n\n<https://spiffy-speculoos-45b08a.netlify.app/>\n\n## 개요\n\n요즘 들어 개인이 운영하고 있는 영화관이 늘어나고 있다. 하지만 대형 프렌차이즈 영화관들과는 다르게 영화예매를 수동적으로 하고 있는 곳이 많다.\n\n이러한 문제를 해결하기 위해 PC에 따로 설치하지 않아도 배포 및 유지 관리를 할 수 있도록 웹을 통해 구현하였다.\n\n또한 코로나19로 인해 사회적 거리두기를 반영해 좌석 예매를 할 수 있게 하였다.\n\n## 영화예매 프로그램 동작 과정\n\n1. 오른쪽 상단에 위치한 로그인을 클릭하여 관리자 모드 페이지로 접속한다.\n\n2. id = admin, pw = 1004를 입력하여 관리자 모드에 로그인한다.\n\n3. 관리자 페이지에서 날짜별로 상영할 영화이름, 영화 메인포스터, 영화 메인포스터2, 영화 예고편 등을 설정한다.\n\n4. 또한 날짜별로 상영할 영화의 시간등을 설정한다.\n\n5. 수정한 사항을 저장하기 위해 버튼을 누르면 메인 페이지에 반영이 된다.\n\n6. 하루가 지나면 관리자 모드로 다시 접속하여 새로 고침 버튼을 클릭하여 오늘 날짜의 수입을 초기화한다.\n\n## 웹 디자인\n\n-영화관에 온 것 같은 디자인-\n\n![메인화면](<https://user-images.githubusercontent.com/74814641/134811816-7c40f2a9-6af8-4f2b-a311-da0e30e842a8.JPG>)\n\n-영화관 이벤트 및 행사-\n\n![이벤트](<https://user-images.githubusercontent.com/74814641/134811917-a6dbf25e-d7ee-41a6-901e-6a9dd0afe3c4.JPG>)\n\n-가시성이 좋은 좌석 예매-\n\n![좌석표](<https://user-images.githubusercontent.com/74814641/134811988-1a765d4f-4028-4fb8-b1af-3d103e6aea2b.JPG>)\n\n-선택한 좌석표, 가격이 나오는 예매표-\n\n![가격표](<https://user-images.githubusercontent.com/74814641/134812090-ad23fb21-c05b-42fd-8222-b89ccd6c67be.JPG>)\n\n### 주요기능\n\n1. 예고편 시청\n\n2. 예매율 순위 기능\n\n3. 영화 예매기능\n\n4. 관리자 모드 기능\n\n### 1. 예고편 시청\n\n![movie](<https://user-images.githubusercontent.com/74814641/134803609-4738d3ed-b293-476f-9442-957fd6c9da5d.gif>)\n\n### 2. 예매율 순위 기능\n\n<https://user-images.githubusercontent.com/74814641/134807311-b5959748-3e25-4632-a608-72aefbd7ac4d.mp4>\n\n### 3. 영화 예매 기능\n\n<https://user-images.githubusercontent.com/74814641/134809266-9d6e29a6-12b1-4be9-9fb5-dc05fe64d36b.mp4>\n\n### 4. 관리자 모드 기능\n\n<https://user-images.githubusercontent.com/74814641/134810593-3d708e32-840c-40e5-930c-4a83854bd70a.mp4>\n\n\n\n','https://github.com/qjatjs123123/KIOSK_MOVIE','https://withme.s3.amazonaws.com/img/5c2b3c84-ab7e-451e-8b01-18b05a8a2dcb_movie.jfif',9086288449901513148,'qjatjs123123',NULL),(522,'2024-11-14 09:54:53.352923','2024-11-17 17:05:32.027093',0,0,1,'learn-typescript','','https://github.com/qjatjs123123/learn-typescript','https://withme.s3.amazonaws.com/img/6b24a5f0-b711-42a3-8286-fbe3953bac80_rn_image_picker_lib_temp_9b80bcb1-23f6-4948-b07e-01e901d0192b.jpg',NULL,'qjatjs123123',NULL),(523,'2024-11-14 09:54:53.370644','2024-11-14 09:54:53.370648',0,0,1,'Mobile_LostDungeon','','https://github.com/qjatjs123123/Mobile_LostDungeon',NULL,NULL,'qjatjs123123',NULL),(524,'2024-11-14 09:54:53.388357','2024-11-16 19:26:02.086785',1,0,1,'MyStory','# MyStory\n\n## 💡 패키지 구조\n\n<img width=\"650\" alt=\"image\" src=\"<https://github.com/qjatjs123123/Spring_notice_board/assets/74814641/a9a1ed60-1d16-4072-a167-78a4693b821c>\">\n\n## 💡 프로젝트 소개\n\n이 프로젝트는 React, Node를 학습하기 위한 프로젝트입니다.\n\nvelog의 기능을 카피하고 팔로우 기능, 히스토리 기능, UI를 추가하였습니다.\n\n## 💡 프로젝트 개발 일지(필독!!!)\n\n<https://velog.io/@qjatjs123123/series/React-Node-%EA%B2%8C%EC%8B%9C%ED%8C%90>\n\n## 💡 프로젝트 데모 URL\n\n<https://www.mystory.asia/>\n\n### 테스트 계정\n\n#### ID : test\n\n#### PW : test111!!\n\n<br>\n\n## 📋 주요 기능 목록\n\n<br>\n\n### 🚩 메인 화면\n\n로그인\n\n```\n\n- 로그인 기능\n\n```\n\n### 🚩 네비게이션\n\n네비게이션\n\n```\n\n- 자동 로그아웃 타이머\n\n- 로그인 연장\n\n- 로그아웃\n\n- 네비게이션\n\n- 자동 로그아웃\n\n```\n\n### 🚩 회원가입, 아이디찾기\n\n회원가입, 아이디찾기\n\n```\n\n- 회원가입\n\n- 아이디찾기\n\n```\n\n### 🚩 비밀번호 찾기\n\n비밀번호 찾기\n\n```\n\n- 비밀번호 찾기\n\n- 이메일 인증(Gmail API)\n\n```\n\n### 🚩 게시판\n\n게시판\n\n```\n\n- 조건별 찾기\n\n- datepicker (datepicker)\n\n- 정렬\n\n- 페이징 처리\n\n```\n\n### 🚩 게시판 쓰기\n\n게시판 쓰기\n\n```\n\n- TextEditor 사용 (React-quill)\n\n- 이미지 업로드 (Multer)\n\n```\n\n### 🚩 게시판 읽기\n\n게시판 쓰기\n\n```\n\n- 게시판 수정, 삭제\n\n- 댓글 수정, 삭제\n\n- 답글 수정, 삭제\n\n```\n\n### 🚩 해시태그\n\n해시태그\n\n```\n\n- 해시태그 별 검색\n\n```\n\n### 🚩 팔로우\n\n팔로우\n\n```\n\n- 팔로우 관리\n\n```\n\n### 🚩 히스토리\n\n팔로우\n\n```\n\n- 팔로우 최근 히스토리\n\n```\n\n## 💡 시연 영상 (이미지 클릭)\n\n[![Video Label](<http://youtu.be/TyQVO3QFEDo/0.jpg)](https://youtu.be/TyQVO3QFEDo?si=9lLZNdxKwd-Ec96k)>\n\n\n\n','https://github.com/qjatjs123123/MyStory','https://withme.s3.amazonaws.com/img/d19a63df-d53e-4f5a-b7b6-c29db3cdfa70_mystory.jfif',2596665844382057587,'qjatjs123123',NULL),(525,'2024-11-14 09:54:53.406680','2024-11-16 19:54:48.052308',1,0,1,'Next.js-ToDoList','# Hoogle Calender(호글 캘린더)\n\n## 💡 패키지 구조\n\n<img width=\"650\" alt=\"image\" src=\"<https://github.com/qjatjs123123/React-Node-BBS/assets/74814641/82e897da-6d5e-4377-b34c-87f42c9df835>\">\n\n## 💡 프로젝트 데모 URL(배포 -> 백엔드x)\n\n<https://radiant-semifreddo-4d46c7.netlify.app/>\n\n## 💡 프로젝트 소개\n\nNext.js를 학습하기 위한 프로젝트입니다.\n\nGoogle Calender를 모티브로 만든 ToDoList입니다.\n\n## 💡 프로젝트 개발 일지(필독!!!)\n\n<https://velog.io/@qjatjs123123/series/Next.js-HoogleCalender>\n\n<br>\n\n## 📋 주요 기능 목록\n\n<br>\n\n### 🚩 메인 화면\n\n로그인\n\n```\n\n- 로그인 기능 (Passport Session)\n\n- 로그아웃\n\n```\n\n### 🚩 회원가입, 아이디찾기\n\n회원가입, 아이디찾기\n\n```\n\n- 회원가입\n\n- 아이디찾기\n\n```\n\n### 🚩 비밀번호 찾기\n\n비밀번호 찾기\n\n```\n\n- 비밀번호 찾기\n\n- 이메일 인증(Gmail API)\n\n- 임시 비밀번호\n\n```\n\n### 🚩 ToDoList\n\n일정표\n\n```\n\n- 달력\n\n- 메모장\n\n- 일정 생성하기 (By Click For 사용자 친화적)\n\n- 일정 옮기기 (By Drag For 사용자 친화적)\n\n- 일정 사이즈 변경 (By Drag For 사용자 친화적)\n\n- 타임바 (08:00 ~ 24:00)\n\n```\n\n### 🚩 일정 세부사항\n\n일정 세부사항\n\n```\n\n- 일정 수정 (TextEditor By React Quill)\n\n- 일정 삭제\n\n```\n\n### 🚩 알람\n\n알람\n\n```\n\n- 자명종 소리\n\n- 일정 알람\n\n- 시간\n\n```\n\n## 💡 시연 영상 (이미지 클릭)\n\n[![Video Label](<http://img.youtube.com/vi/2Ud_xFHB1qQ/0.jpg)](https://youtu.be/2Ud_xFHB1qQ)>\n\n\n\n','https://github.com/qjatjs123123/Next.js-ToDoList','https://withme.s3.amazonaws.com/img/48e35a89-3ad8-4976-9292-3f1283c6348e_todolist.png',3340965856150205731,'qjatjs123123',NULL),(526,'2024-11-14 09:54:53.425009','2024-11-17 14:45:15.691729',1,0,1,'notice_board','# notice_board1111\n\nJSP를 활용한 게시판\n\n## 개요\n\n게시판을 만듦으로써 대용량 데이터일때 처리해야하는 페이징 처리, 민감한 정보를 저장할 때 암호화 처리, 이메일 인증 API, BACK End, Front End 공부를 하기 위해서 본 프로젝트를 수행하였다.\n\n## 페이징 처리 - 게시판\n\n페이징 처리란 데이터 베이스에 저장된 데이터가 소량일 경우는 상관이 없지만, 대량일 경우 한꺼번에 불러와서 처리하는 것은 비효율적이다. 그 이유는 사용자가 직접 보는 화면에는 소량의 데이터만 필요하기 때문이다.\n\n![carbon](<https://user-images.githubusercontent.com/74814641/160281871-b7ebbc90-6668-428e-8577-57f77bac259a.png>)\n\n위 코드는 DB에서 게시판 데이터를 불러와 ArrayList에 저장한 뒤 리턴하는 코드의 일부이다. 1페이지일 때 실행되는 코드로 쿼리문은 bbs(게시판)테이블에서 데이터를 불러오되 bbsID가 getNext()(이 함수는 데이터가 저장될 때 그 다음 bbsID를 가져오는 함수)보다 작고 bbsAvailable(1이면 존재, 0이면 삭제)가 1이고 bbsID를 내림차순으로 정렬하고 10개만 가져오는 쿼리이다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282559-cd442204-c56c-4452-bc72-02dc8444d74a.png>)\n\n위에 이미지를 보게되면 1페이지 임으로 해쉬맵 변수 head_list에 key값으로 1, value로는 23이 저장된다. tail_list에도 마찬가지로 key값으로 1, value로는 10이 저장된다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282901-5b9c5fda-7c17-43ac-b894-7b43d498b95d.png>)\n\n위에 이미지를 보게되면 2페이지 임으로 해쉬맵 변수 head_list에 key값으로 2, value로는 9가 저장된다. tail_list에도 마찬가지로 key값으로 2, value로는 1이 저장된다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160282791-09933af6-c284-40bb-a267-7bb00dedaaa1.png>)\n\n위에 이미지는 해쉬맵에 저장된 head_list, tail_list를 가지고 데이터를 가져오는 코드이다. 이렇게 하여 페이지를 자유롭게 이동하여도 PageNumber를 key값으로 하여 해쉬맵에서 bbsID를 가져와서 데이터를 가져온다. 이렇게 하여 게시판 페이징 처리를 구현하였다.\n\n## 페이징 처리 - 댓글\n\n댓글에 모든 데이터를 불러와서 처리하기 보다는 현재 화면에 필요한 정보의 데이터만 가져오도록 구현하였다. 그 방법은 스크롤바가 화면 맨 아래에 닿았을 때 AJAX를 활용하여 10개의 데이터만 가져오도록 구현하였다.\n\n![image](<https://user-images.githubusercontent.com/74814641/160283538-ca22fc79-773b-4be5-bf12-34b0741ef450.png>)\n\nJQuery를 사용하였고 스크롤바가 화면 맨 아래에 있는지 확인하는 조건문이 있다. 그 조건을 만족한다면 AJAX를 활용하여 새로고침하지 않아도 댓글을 볼 수 있도록 하였다. replyListAction.jsp에서 전달받은 문자열을 가공처리하고 화면에 나타나는 함수이다.\n\n![ezgif com-gif-maker](<https://user-images.githubusercontent.com/74814641/160284125-e9f5497e-5f9d-45d9-b530-44547012d7bf.gif>)\n\n댓글 페이징 처리이다.\n\n## BCrpyt를 이용한 중요정보 암호화\n\n![image](<https://user-images.githubusercontent.com/74814641/160284270-c0883bcb-1573-4aff-84ce-0762d2fac544.png>)\n\n주민등록번호, 비밀번호, 이메일 인증에 필요한 해쉬값이 암호화 되어있는 것을 볼 수 있다.\n\n## Google Gmail API를 사용한 비밀번호 인증\n\n<https://user-images.githubusercontent.com/74814641/160284505-35d026f9-6978-4098-be32-a4ba6dc93552.mp4>\n\nURL 해쉬코드값과 DB에 저장된 해쉬코드값이랑 비교하여 인증을 한다.\n\n\n\n','https://github.com/qjatjs123123/notice_board','https://withme.s3.amazonaws.com/img/68a6e793-3400-4416-84cd-dd91e49c5088_board.png',4039680341661991548,'qjatjs123123',NULL),(527,'2024-11-14 09:54:53.444915','2024-11-16 19:56:13.556835',1,0,1,'POS','# 웹을 활용한 포스기\n\n## 개요\n\n대부분 프렌차이즈 음식점들은 포스기를 설치하여 운영하고 있다. 하지만 개인이 운영하고 있는 음식점 중 일부 좋지 않는 경제로 포스기 설치 조차 못하고 있는 음식점도 있다.\n\n이러한 문제점을 해결하고자 웹앱을 통해 배포 및 유지 보수를 할 수 있도록 구현하였다.\n\n## 사용 기술\n\n1. 자바스크립트 - 웹 브라우저 프로그래밍을 하기 위하여 사용\n\n2. CSS - 웹 브라우저의 스타일을 위하여 사용\n\n3. JSP - DB연동 및 동적 프로그래밍을 위해 사용\n\n4. Imgur API - DB에 이미지를 저장하기 위해서 사용\n\n5. Maria DB - 회원가입 정보, 메뉴 정보, 매출 정보를 저장하기 위해 사용\n\n6. AJAX - 비동기적인 웹 개발을 위해 사용\n\n## 저작권(라이센스)\n\nC-2021-035554\n\n## 포스기 프로그램 동작 과정\n\n1. 회원가입을 한다.\n\n2. 로그인 후 관리자 모드에 접속한다.\n\n3. 관리자 모드에서 테이블 개수, 메뉴 이미지 선택, 이름, 가격을 입력한다.\n\n4. 카운터 모드에 접속한다.\n\n5. 주문받은 테이블을 클릭하여 메뉴판 페이지에 접속한다.\n\n6. 메뉴판 페이지에서 주문받은 음식을 주문한다.\n\n7. 주방 페이지에서 주문받은 음식이 실시간으로 표시된다.\n\n8. 관리자는 관리자 모드에서 매출 정보를 년/월/일 별로 확인 한다.\n\n## 페이지 이미지\n\n### 로그인 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134851813-b3d81f58-20b7-46fc-a85d-bdbf14e65901.png>)\n\n### 모드 선택 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134852263-b2feb47f-9531-42ae-af89-df5eb3c17306.png>)\n\n### 주방 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134851982-cb5469d4-8e89-4e37-8e7d-fa3dc22e088a.png>)\n\n### 테이블 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134852057-ae673ce5-c9bf-4c4d-ba6c-cb0f7692f7e2.png>)\n\n### 메뉴판 페이지\n\n![image](<https://user-images.githubusercontent.com/74814641/134852098-8b761aba-c2d0-4974-9bac-f18fd53f0ee1.png>)\n\n### 관리자 모드\n\n![image](<https://user-images.githubusercontent.com/74814641/134852203-f42fde9d-3fc7-4d34-aa83-dec0169283bd.png>)\n\n## 기능 설명(영상)\n\n### 주요 기능\n\n1. 회원가입\n\n2. ID찾기\n\n3. PW찾기\n\n4. 메뉴 주문\n\n5. 주문한 메뉴 주방 페이지에 출력\n\n6. 관리자 모드에서 메뉴 관리 및 매출 관리\n\n### 회원가입 - ID 중복체크는 AJAX를 이용하여 구현, 비밀번호 형식체크 구현\n\n<https://user-images.githubusercontent.com/74814641/134852994-59197d86-b108-49dc-97a9-36f6a9cd063c.mp4>\n\n### ID찾기\n\n<https://user-images.githubusercontent.com/74814641/134853186-27d9b725-093d-4385-b3ad-da9fb094c3d6.mp4>\n\n### PW찾기\n\n<https://user-images.githubusercontent.com/74814641/134853370-08e880f1-339d-4112-be81-fd995bb43bc5.mp4>\n\n### 관리자 모드 및 메뉴 주문 - IMGUR API를 통해 이미지를 DB에 저장\n\n<https://user-images.githubusercontent.com/74814641/134853896-6a3816b4-80f6-445d-b43a-a9b9e0af3e69.mp4>\n\n### 메뉴 주문 및 주방 페이지 출력\n\n<https://user-images.githubusercontent.com/74814641/134854879-1af6acc2-bd6a-4844-b899-c49ff1f1fc46.mp4>\n\n### 매출 관리\n\n<https://user-images.githubusercontent.com/74814641/134855675-d5f6e701-9473-4e16-a11b-844a9df4f51d.mp4>\n\n\n\n','https://github.com/qjatjs123123/POS','https://withme.s3.amazonaws.com/img/9218aa15-47e4-4fd9-806c-dd93682c362e_pos.png',6930263900608479818,'qjatjs123123',NULL),(528,'2024-11-14 09:54:53.463678','2024-11-14 09:54:53.463684',0,0,1,'qjatjs123123','','https://github.com/qjatjs123123/qjatjs123123',NULL,NULL,'qjatjs123123',NULL),(529,'2024-11-14 09:54:53.480275','2024-11-14 09:54:53.480280',0,0,1,'React-Management-Tutorial','','https://github.com/qjatjs123123/React-Management-Tutorial',NULL,NULL,'qjatjs123123',NULL),(530,'2024-11-14 09:54:53.498127','2024-11-16 19:51:43.953001',1,0,1,'Remaster_Unity3D_RunningGame','# Remaster_Unity3D_RunningGame\n\n## 게임 소개\n\n----------\n\n1인 프로젝트로서, 기존 개발했던 장애물 달리기 게임인 \'Unity3D_RunningGame(SHOTGUN)\'의 게임의 그래픽요소, 트랩 등을 개선하였다. 개발 플랫폼은 PC Window이며 개발환경은 \"Unity3d 2020.3.8f1\"버전을 사용하였다. 예능 프로그램 \'출발, 드림팀\'과 \'ALT F4\'게임을 모티브로 하여 플레이어가 맵에 배치된 여러 장애물들을 통과하여 골인지점에 도착하는 게임이다.\n\n## 스토리\n\n----------\n\n게임의 주인공인 \'Bandit\'은 트레저헌터이다. 그는 어느날 숲속에 숨겨진 유적지에 엄청난 보물이 있다는 소식을 듣게 된다. 그는 보물을 찾기 위해 거대한 숲으로 들어갔다.\n\n숲속에는 누군가 설치한 온갖 함정들이 존재하였는데, 그는 이러한 함정들을 헤쳐나가며, 보물을 찾기 위해 노력한다.\n\n## 조작 방법\n\n----------\n\nW:위, S:아래, A:왼쪽, D:오른쪽, SPACEBAR:점프, SHIFT:달리기, ESC:메뉴바\n\n## 프로젝트 추진 일정\n\n----------\n\n![추진일정](<https://user-images.githubusercontent.com/74814641/151950918-aec479ea-88c5-424d-b7ee-0deb8b0dd595.JPG>)\n\n프로젝트 개발기간은 총 14일이다.\n\n## 기존 Unity3D_RunningGame과의 변경사항\n\n### 1. 트랩추가\n\n#### 1_1 .암산을 요구하는 장애물\n\n![트랩0](<https://user-images.githubusercontent.com/74814641/151953977-203eb8d8-01a1-4996-b0f4-f538cae70d26.gif>)\n\n트랩에 있는 식과 맞지 않는 문으로 가게 될 경우 죽게 된다.\n\n----------\n\n#### 1_2. 캐릭터 거리에 따라 움직이는 창 트랩\n\n![트랩1](<https://user-images.githubusercontent.com/74814641/151955201-cb29f2b6-1455-4112-ac4a-a96c32a9bb6e.gif>)\n\n캐릭터에 거리에 맞게 트랩이 움직인다. 트랩에서 발사된 창에 맞게 될 경우 죽게 된다.\n\n----------\n\n#### 1_3. 톱 트랩\n\n![트랩2](<https://user-images.githubusercontent.com/74814641/151955914-c034e9f9-10f0-40ce-8590-04ccf4ab2e8b.gif>)\n\n왕복 운동하는 톱 트랩에 맞게 될 경우 캐릭터는 죽게 된다.\n\n----------\n\n#### 1_4. 식인 고래\n\n![트랩3](<https://user-images.githubusercontent.com/74814641/151956632-b26847ad-2ebc-45c8-936e-a3531776605b.gif>)\n\n캐릭터가 특정 위치에 통과하면 식인 고래가 나타난다. 캐릭터가 식인 고래에 맞게 되면 죽게된다.\n\n----------\n\n#### 1_5. 움직이는 대포\n\n![트랩4](<https://user-images.githubusercontent.com/74814641/151957440-ff1da502-2ad1-4735-9a26-3cd63de26931.gif>)\n\n일정거리 왕복 운동하는 대포에서 대포알이 발사 된다. 대포알에 맞게 되면 캐릭터는 죽게 된다.\n\n----------\n\n#### 1_6. 창 트랩\n\n![트랩5](<https://user-images.githubusercontent.com/74814641/151960737-72b50dba-a6d3-408f-b64b-45a9d097aac4.gif>)\n\n창 트랩에 맞게 되면 죽게 된다.\n\n----------\n\n### 2. 트랩 디자인 변경\n\n#### 2_1 통돌이 트랩 디자인\n\n![통돌이](<https://user-images.githubusercontent.com/74814641/151961995-3bac12af-66f6-46cf-a300-744990d69acb.gif)기존> -> 변경![트랩6](<https://user-images.githubusercontent.com/74814641/151962445-bfee6ffc-ac00-475b-9dde-ac271410f5e1.gif>)\n\n----------\n\n### 3. 맵 디자인 변경\n\n#### 3_1. 타이틀 화면\n\n![타이틀](<https://user-images.githubusercontent.com/74814641/151963711-60a5b75b-5d45-4bf3-8535-dbd97fc5c7d0.png>)\n\n#### 3_2. 리스폰 지역\n\n![리스폰 지역](<https://user-images.githubusercontent.com/74814641/151964282-3e7fa90a-dfab-4899-b322-a7a6a007e9fd.png>)\n\n#### 3_3. 다리 지역\n\n![다리](<https://user-images.githubusercontent.com/74814641/151964505-5f4f5216-bb34-4753-9bb9-29a0b3cde6e3.png>)\n\n#### 3_4. 평지 지역\n\n![평지](<https://user-images.githubusercontent.com/74814641/151964625-ae455d9b-b0bf-42f0-aab5-297a66c3177b.png>)\n\n#### 3_5. 성 지역\n\n![성](<https://user-images.githubusercontent.com/74814641/151964818-9f0b7d5a-000d-4d58-a22e-2572fb90963d.png>)\n\n#### 3_6. 유적지 지역\n\n![유적지](<https://user-images.githubusercontent.com/74814641/151965010-fce55580-c1ee-4e96-ae76-6fa43934f8b8.png>)\n\n----------\n\n## 시연영상\n\n<https://youtu.be/swMfbWtZ31Y>\n\n\n\n','https://github.com/qjatjs123123/Remaster_Unity3D_RunningGame','https://withme.s3.amazonaws.com/img/347501c3-8c75-4119-a530-92617589bf47_shotgun2.png',4642325496641961997,'qjatjs123123',NULL),(531,'2024-11-14 09:54:53.519462','2024-11-17 15:27:37.417047',1,0,1,'Reoptest','','https://github.com/qjatjs123123/Reoptest','https://withme.s3.amazonaws.com/img/04d5b599-e370-4419-9304-6babf3366abc_kiosk.png',402025576000959325,'qjatjs123123',NULL),(532,'2024-11-14 09:54:53.537990','2024-11-14 09:54:53.537995',0,0,1,'RetroExample_for_Studying','','https://github.com/qjatjs123123/RetroExample_for_Studying',NULL,NULL,'qjatjs123123',NULL),(533,'2024-11-14 09:54:53.555323','2024-11-16 18:55:05.676426',1,0,1,'sdaasdf','![스크린샷 2023-03-05 195130.png](<https://withme.s3.amazonaws.com/interImg/2a6dd9cb-6fc8-4558-b8be-6f255c7c8aa0_스크린샷 2023-03-05 195130.png>)\n\n213123\n\n\n\n\n','https://github.com/qjatjs123123/sdaasdf','https://withme.s3.amazonaws.com/img/4eecc160-c6d7-4754-bc4f-26d01124bfbd_ssafy.png',543229179828913779,'qjatjs123123',NULL),(534,'2024-11-14 09:54:53.572616','2024-11-17 18:21:36.642033',1,0,1,'shopping-mall','213213123213 glglglglgl\n\n\n\n','https://github.com/qjatjs123123/shopping-mall','https://withme.s3.amazonaws.com/img/6e6f3a13-2c1d-487a-85ab-07bd0e4a30ae_movie.jfif',1308278253665730561,'qjatjs123123',NULL),(535,'2024-11-14 09:54:53.591190','2024-11-14 09:54:53.591196',0,0,1,'Spring_notice_board','','https://github.com/qjatjs123123/Spring_notice_board',NULL,NULL,'qjatjs123123',NULL),(536,'2024-11-14 09:54:53.609211','2024-11-16 19:22:15.770467',1,0,1,'TripMate','# TripMate\n\n## 💡 프로젝트 구성원\n\n홍범선 => 프론트 및 백엔드 담당\n\n<br />\n\n이민정 => 백엔드 담당\n\n## 💡 프로젝트 소개\n\n이 프로젝트는 여행지 추천 서비스입니다.\n\n## 💡 프로젝트 기획\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/c7840fe8-e618-439e-8519-8e1d0f39eb74>)\n\n## 💡 ERD\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/9caeb820-0413-428e-a46e-e99ca36501ab>)\n\n## 💡 API설계\n\n![image](<https://github.com/qjatjs123123/TripMate/assets/74814641/32bc8565-dce4-4fe0-b3a0-18c35422478a>)\n\n## 📋 주요 기능 목록\n\n## 🚩 메인 화면\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/42421bfd-0d49-4de9-b89d-ec7c689ca786>)\n\n```\n\n- Slick.js 라이브러리를 사용하여 이미지 슬라이더 기능 추가\n\n- 최신 여행지\n\n- 조회수 가장 많은 글 10개 보여주는 기능\n\n- 모바일 및 테블릿 PC에서도 반응형\n\n```\n\n## 🚩 회원가입\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/5c435e64-b217-4e1f-ac21-ded674320408>)\n\n```\n\n- JWT 로그인 처리\n\n- 모바일, 테블릿 PC에서도 반응형으로 작동\n\n```\n\n## 🚩 여행지 찾기 및 장바구니\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/768ed21d-be98-4022-a87b-d83084a29e26>)\n\n```\n\n- 사용자 중심 UI 설계\n\n- 무한스크롤로 여행지 출력\n\n- 장바구니 기능 구현\n\n- 반응형 웹 구현\n\n```\n\n## 🚩여행 계획\n\n![image](<https://github.com/qjatjs123123/TripMate/assets/74814641/fa1ec4d8-5536-402a-8995-5588b6cb2f98>)\n\n```\n\n- draggable 라이브러리 사용으로 UX 향상\n\n- 여행지 마커 순서 표시\n\n- 여행지 계획 메모\n\n```\n\n## 🚩 핫플 공유\n\n![image](<https://github.com/qjatjs123123/TripMate/assets/74814641/5a9da344-6e99-40d5-a930-3d8cbfe4748d>)\n\n```\n\n- 이미지 업로드 기능\n\n- 반응형\n\n```\n\n## 🚩 마이페이지\n\n![image](<https://github.com/Paper10/WhereIsMyHome/assets/74814641/7b6094d2-d6d3-4d4f-92f7-e7a8dd26ffba>)\n\n```\n\n- 사용자 계정 수정\n\n```\n\n## 💡 시연 영상 (이미지 클릭)\n\n[![Video Label](<https://img.youtube.com/vi/kf4evPpzqDw/0.jpg)](https://youtu.be/kf4evPpzqDw)>\n\n\n\n','https://github.com/qjatjs123123/TripMate','https://withme.s3.amazonaws.com/img/4743e975-4998-45dd-ab52-4b2d332a25e0_tripmate.png',6352305244652944001,'qjatjs123123',NULL),(537,'2024-11-14 09:54:53.627614','2024-11-17 16:54:32.369665',0,0,1,'Unity3D_RunningGame','','https://github.com/qjatjs123123/Unity3D_RunningGame','https://withme.s3.amazonaws.com/img/97a939c4-dad5-4cc9-b001-78320147946a_loginLogo.png',NULL,'qjatjs123123',NULL),(538,'2024-11-14 09:54:53.644242','2024-11-14 09:54:53.644246',0,0,1,'Web-Design-Study','','https://github.com/qjatjs123123/Web-Design-Study',NULL,NULL,'qjatjs123123',NULL),(539,'2024-11-14 09:54:53.661431','2024-11-17 17:09:23.298032',0,0,1,'woowa_study','','https://github.com/qjatjs123123/woowa_study','https://withme.s3.amazonaws.com/img/eb91fc6b-7234-465c-8a64-01dbec8b9966_WithLogo.png',NULL,'qjatjs123123',NULL),(540,'2024-11-14 10:22:18.561200','2024-11-14 10:22:18.561206',0,0,1,'S11P21A706','','https://lab.ssafy.com/s11-metaverse-game-sub1/S11P21A706',NULL,NULL,'s11-metaverse-game-sub1',NULL),(541,'2024-11-14 10:22:18.609641','2024-11-14 10:22:18.609647',0,0,1,'S11P12A309','','https://lab.ssafy.com/s11-webmobile2-sub2/S11P12A309',NULL,NULL,'s11-webmobile2-sub2',NULL),(542,'2024-11-14 10:22:18.627204','2024-11-14 10:22:18.627211',0,0,1,'S11P11A309','','https://lab.ssafy.com/s11-webmobile2-sub1/S11P11A309',NULL,NULL,'s11-webmobile2-sub1',NULL),(543,'2024-11-14 10:22:18.645014','2024-11-14 10:22:18.645020',0,0,1,'S11P10A338','','https://lab.ssafy.com/s11-study/S11P10A338',NULL,NULL,'s11-study',NULL),(544,'2024-11-14 18:33:23.190275','2024-11-14 18:33:23.190285',0,0,1,'Algorithm','','https://github.com/hannabananah/Algorithm',NULL,NULL,'hannabananah',NULL),(545,'2024-11-14 18:33:23.212531','2024-11-14 18:33:23.212536',0,0,1,'algorithm_js','','https://github.com/hannabananah/algorithm_js',NULL,NULL,'hannabananah',NULL),(546,'2024-11-14 18:33:23.235293','2024-11-14 18:33:23.235299',0,0,1,'animated-counter-react','','https://github.com/hannabananah/animated-counter-react',NULL,NULL,'hannabananah',NULL),(547,'2024-11-14 18:33:23.251735','2024-11-14 18:33:23.251741',0,0,1,'any','','https://github.com/hannabananah/any',NULL,NULL,'hannabananah',NULL),(548,'2024-11-14 18:33:23.270672','2024-11-14 18:33:23.270704',0,0,1,'baekjoon','','https://github.com/hannabananah/baekjoon',NULL,NULL,'hannabananah',NULL),(549,'2024-11-14 18:33:23.289992','2024-11-14 18:33:23.289997',0,0,1,'blog-app--2-','','https://github.com/hannabananah/blog-app--2-',NULL,NULL,'hannabananah',NULL),(550,'2024-11-14 18:33:23.311234','2024-11-14 18:33:23.311240',0,0,1,'blog-app-server','','https://github.com/hannabananah/blog-app-server',NULL,NULL,'hannabananah',NULL),(551,'2024-11-14 18:33:23.330701','2024-11-14 18:33:23.330706',0,0,1,'chat-gpt','','https://github.com/hannabananah/chat-gpt',NULL,NULL,'hannabananah',NULL),(552,'2024-11-14 18:33:23.353108','2024-11-14 18:33:23.353114',0,0,1,'diary','','https://github.com/hannabananah/diary',NULL,NULL,'hannabananah',NULL),(553,'2024-11-14 18:33:23.377693','2024-11-14 18:33:23.377702',0,0,1,'EditToolProject','','https://github.com/hannabananah/EditToolProject',NULL,NULL,'hannabananah',NULL),(554,'2024-11-14 18:33:23.396947','2024-11-14 18:33:23.396953',0,0,1,'elice','','https://github.com/hannabananah/elice',NULL,NULL,'hannabananah',NULL),(555,'2024-11-14 18:33:23.416126','2024-11-14 18:33:23.416132',0,0,1,'elice-ts-project','','https://github.com/hannabananah/elice-ts-project',NULL,NULL,'hannabananah',NULL),(556,'2024-11-14 18:33:23.435699','2024-11-14 18:33:23.435706',0,0,1,'forna-frontend','','https://github.com/hannabananah/forna-frontend',NULL,NULL,'hannabananah',NULL),(557,'2024-11-14 18:33:23.451422','2024-11-14 18:33:23.451428',0,0,1,'forna-frontend-kfortune','','https://github.com/hannabananah/forna-frontend-kfortune',NULL,NULL,'hannabananah',NULL),(558,'2024-11-14 18:33:23.474433','2024-11-14 18:33:23.474442',0,0,1,'git_adv','','https://github.com/hannabananah/git_adv',NULL,NULL,'hannabananah',NULL),(559,'2024-11-14 18:33:23.493102','2024-11-14 18:33:23.493110',0,0,1,'gpt-program','','https://github.com/hannabananah/gpt-program',NULL,NULL,'hannabananah',NULL),(560,'2024-11-14 18:33:23.516776','2024-11-14 18:33:23.516784',0,0,1,'hannabananah','','https://github.com/hannabananah/hannabananah',NULL,NULL,'hannabananah',NULL),(561,'2024-11-14 18:33:23.536932','2024-11-14 18:33:23.536939',0,0,1,'hannabananah.github.io','','https://github.com/hannabananah/hannabananah.github.io',NULL,NULL,'hannabananah',NULL),(562,'2024-11-14 18:33:23.557903','2024-11-14 18:33:23.557912',0,0,1,'js-basic','','https://github.com/hannabananah/js-basic',NULL,NULL,'hannabananah',NULL),(563,'2024-11-14 18:33:23.580589','2024-11-14 18:33:23.580612',0,0,1,'learn-storybook','','https://github.com/hannabananah/learn-storybook',NULL,NULL,'hannabananah',NULL),(564,'2024-11-14 18:33:23.607697','2024-11-14 18:33:23.607707',0,0,1,'markdown','','https://github.com/hannabananah/markdown',NULL,NULL,'hannabananah',NULL),(565,'2024-11-14 18:33:23.632566','2024-11-14 18:33:23.632574',0,0,1,'MEONG-MUNG','','https://github.com/hannabananah/MEONG-MUNG',NULL,NULL,'hannabananah',NULL),(566,'2024-11-14 18:33:23.654367','2024-11-14 18:33:23.654375',0,0,1,'mountain-project','','https://github.com/hannabananah/mountain-project',NULL,NULL,'hannabananah',NULL),(567,'2024-11-14 18:33:23.685378','2024-11-14 18:33:23.685385',0,0,1,'movie_app','','https://github.com/hannabananah/movie_app',NULL,NULL,'hannabananah',NULL),(568,'2024-11-14 18:33:23.705529','2024-11-14 18:33:23.705535',0,0,1,'MyPro-Fit','','https://github.com/hannabananah/MyPro-Fit',NULL,NULL,'hannabananah',NULL),(569,'2024-11-14 18:33:23.722938','2024-11-14 18:33:23.722944',0,0,1,'nest-jwt-auth','','https://github.com/hannabananah/nest-jwt-auth',NULL,NULL,'hannabananah',NULL),(570,'2024-11-14 18:33:23.743631','2024-11-14 18:33:23.743636',0,0,1,'next-trip','','https://github.com/hannabananah/next-trip',NULL,NULL,'hannabananah',NULL),(571,'2024-11-14 18:33:23.765146','2024-11-14 18:33:23.765152',0,0,1,'node.js-React-boiler-plate','','https://github.com/hannabananah/node.js-React-boiler-plate',NULL,NULL,'hannabananah',NULL),(572,'2024-11-14 18:33:23.783870','2024-11-14 18:33:23.783876',0,0,1,'normalize.css','','https://github.com/hannabananah/normalize.css',NULL,NULL,'hannabananah',NULL),(573,'2024-11-14 18:33:23.800507','2024-11-14 18:33:23.800512',0,0,1,'nwitter','','https://github.com/hannabananah/nwitter',NULL,NULL,'hannabananah',NULL),(574,'2024-11-15 09:20:14.360403','2024-11-15 09:20:14.360412',0,0,1,'S11P21S006','','https://lab.ssafy.com/s11-s-project/S11P21S006',NULL,NULL,'s11-s-project',NULL),(575,'2024-11-15 09:20:14.456257','2024-11-15 09:20:14.456264',0,0,1,'S11P10A426','','https://lab.ssafy.com/s11-study/S11P10A426',NULL,NULL,'s11-study',NULL),(576,'2024-11-15 09:43:21.985826','2024-11-18 18:24:52.386646',1,0,1,'S11P21A106','','https://lab.ssafy.com/s11-fintech-finance-sub1/S11P21A106','https://withme.s3.amazonaws.com/img/697a5841-9d85-4efa-b970-595b44ad239f_abuba.png',5810106737109845509,'s11-fintech-finance-sub1','The project structure suggests a comprehensive web application with both backend and frontend components. The backend is developed with Java, utilizing a Gradle build system, indicating its scale and need for robust dependency management. Key features can be inferred from directory names like \"account\", \"alarm\", \"auth\" (authentication), \"diary\", \"roadmap\", and \"user\", suggesting complex functionalities related to user management, alerts, authentication protocols, journaling or diary entries, and navigation or planning features, possibly within a collaborative or organizational setting.\n\nThe frontend includes directories for assets, components, and API interactions, which are typical in modern web applications focussing on a responsive user interface design and seamless interaction with the backend services. The public directory houses branding materials and icons, indicating a customized and potentially brand-centric user interface.\n\nDocumentation and developer directories are present, highlighting a collaborative development environment with attention to architectural planning, service documentation, and individual contributions. The use of directories named after team members suggests personalized or designated areas for individual work or modules within the project.\n\nOverall, this project appears to be a multi-faceted application involving detailed user interactions, data management, and potentially, role-based functionalities within a broad organizational framework or a multi-user platform focusing on planning, collaboration, and personalization.'),(577,'2024-11-15 09:43:22.005487','2024-11-15 09:43:22.005493',0,0,1,'s11-bootcamp2','','https://lab.ssafy.com/akhack1231/s11-bootcamp2',NULL,NULL,'akhack1231',NULL),(578,'2024-11-15 09:43:22.043746','2024-11-15 09:43:22.043754',0,0,1,'S11P12A302','','https://lab.ssafy.com/s11-webmobile1-sub2/S11P12A302',NULL,NULL,'s11-webmobile1-sub2',NULL),(579,'2024-11-15 09:43:22.067009','2024-11-15 09:43:22.067016',0,0,1,'S11P11A302','','https://lab.ssafy.com/s11-webmobile1-sub1/S11P11A302',NULL,NULL,'s11-webmobile1-sub1',NULL),(580,'2024-11-15 09:43:22.092995','2024-11-15 09:43:22.093003',0,0,1,'S11P10A336','','https://lab.ssafy.com/s11-study/S11P10A336',NULL,NULL,'s11-study',NULL),(581,'2024-11-15 09:43:22.115832','2024-11-18 18:23:59.942948',1,0,1,'s1114_final_home_kimdohoon_leedongkyu','','https://lab.ssafy.com/akhack1231/s1114_final_home_kimdohoon_leedongkyu','https://withme.s3.amazonaws.com/img/a1181c51-a509-48bf-8f26-5b717cce5ccc_logo.png',6536079539725091246,'akhack1231','Based on the provided repository structure, the project seems to be a Java-based software developed using the Eclipse IDE, indicated by the numerous Eclipse-specific directories such as `.metadata` containing Eclipse plugins configurations (e.g., `org.eclipse.jdt.core` for Java development tools and `org.eclipse.wst.jsdt.core` for JavaScript development tools). The presence of a Maven wrapper directory (`.mvn/wrapper`) suggests that the project employs Maven for dependency management and build automation.\n\nThe project\'s general layout including directories like `src/main/java`, indicates that this is a standard Java application, possibly involving web and JavaScript components as evidenced by plugins related to web technologies (e.g., `org.eclipse.jst.j2ee.web` for Java EE Web development and `org.eclipse.wst.jsdt.ui` for JavaScript development).\n\nMoreover, the project might contain custom configurations or involve complex setups due to the presence of specific configuration directories (`com/config`). The use of various Eclipse plugins points to an integrated development environment tailored for comprehensive software development with support for refactoring, debug, and possibly deployment.\n\nUltimately, the project titled `S1114_FINAL_HOME_Kimdohoon_Leedongkyu` is likely a final project or assignment possibly submitted by students named Kim Dohoon and Lee Dongkyu, encompassing web and JavaScript elements as well as core Java components, managed and built with Maven, and developed using Eclipse.'),(582,'2024-11-15 09:43:22.135471','2024-11-15 09:43:22.135478',0,0,1,'s1114_vue_home_parkjeoungyoung_leeseungwook','','https://lab.ssafy.com/s11/a14/s1114_vue_home_parkjeoungyoung_leeseungwook',NULL,NULL,'s11/a14',NULL),(583,'2024-11-15 09:43:22.155854','2024-11-15 09:43:22.155862',0,0,1,'s1114_vue_trip_ahnjaehyun_leeyewon','','https://lab.ssafy.com/s11/a14/s1114_vue_trip_ahnjaehyun_leeyewon',NULL,NULL,'s11/a14',NULL),(584,'2024-11-15 09:43:22.175370','2024-11-15 09:43:22.175377',0,0,1,'s1114_vue_home_kimsanghyun_leedongkyu_leekangsan','','https://lab.ssafy.com/soh7174/s1114_vue_home_kimsanghyun_leedongkyu_leekangsan',NULL,NULL,'soh7174',NULL),(585,'2024-11-15 09:43:22.200930','2024-11-15 09:43:22.200936',0,0,1,'s1114_vue_home_kimsanghyun_leekangsan','','https://lab.ssafy.com/soh7174/s1114_vue_home_kimsanghyun_leekangsan',NULL,NULL,'soh7174',NULL),(586,'2024-11-15 09:43:22.220177','2024-11-15 09:43:22.220183',0,0,1,'s1114_vue_trip_kimsehun_yoonjunghwan','','https://lab.ssafy.com/s11/a14/s1114_vue_trip_kimsehun_yoonjunghwan',NULL,NULL,'s11/a14',NULL),(587,'2024-11-15 09:43:22.241794','2024-11-15 09:43:22.241800',0,0,1,'s1114_spring_home_leedongkyu_choiminhyuk','','https://lab.ssafy.com/mychoi1199/s1114_spring_home_leedongkyu_choiminhyuk',NULL,NULL,'mychoi1199',NULL),(588,'2024-11-15 09:43:22.260400','2024-11-15 09:43:22.260405',0,0,1,'s1114_db_home_leedongkyu_choiminhyuk','','https://lab.ssafy.com/mychoi1199/s1114_db_home_leedongkyu_choiminhyuk',NULL,NULL,'mychoi1199',NULL),(589,'2024-11-15 09:43:22.279416','2024-11-15 09:43:22.279421',0,0,1,'s1114_algo_home_leedongkyu_choiminhyuk','','https://lab.ssafy.com/mychoi1199/s1114_algo_home_leedongkyu_choiminhyuk',NULL,NULL,'mychoi1199',NULL),(590,'2024-11-15 09:43:22.295509','2024-11-17 00:31:56.137688',1,0,1,'s1114_back_home_kimjuhee_leedongkyu','','https://lab.ssafy.com/akhack1231/s1114_back_home_kimjuhee_leedongkyu','https://withme.s3.amazonaws.com/img/53374e0b-a851-4026-b078-8fd5f82c68c1_apt1.jpg',4687166105079532528,'akhack1231',NULL),(591,'2024-11-15 09:43:22.313772','2024-11-15 09:43:22.313777',0,0,1,'s1114_front_home_kimjuhee_leedongyu','','https://lab.ssafy.com/kandy1998/s1114_front_home_kimjuhee_leedongyu',NULL,NULL,'kandy1998',NULL),(592,'2024-11-15 09:43:22.332775','2024-11-15 09:43:22.332780',0,0,1,'s1114_front_home_kimjuhee_leedongkyu','','https://lab.ssafy.com/akhack1231/s1114_front_home_kimjuhee_leedongkyu',NULL,NULL,'akhack1231',NULL),(593,'2024-11-15 09:43:22.352461','2024-11-15 09:43:22.352465',0,0,1,'s1114_java_home_kimsanghyun_leedongkyu','','https://lab.ssafy.com/isayaksh/s1114_java_home_kimsanghyun_leedongkyu',NULL,NULL,'isayaksh',NULL),(594,'2024-11-15 09:43:40.433524','2024-11-18 20:25:31.687087',1,0,1,'ABUBA','### 👶 ABUBA - 육아 다이어리형 금융 서비스\n\n![image.png](https://withme.s3.amazonaws.com/interImg/6cd0ebb7-bae1-49f1-a840-d22ebe3b3fcf_image.png)\n\n## 💡 ABUBA는 어떤 서비스인가요?\n\n<hr>\n\n아이의 성장을 더 특별하게 기록하고 싶나요? 그렇다면 **ABUBA**를 소개합니다!\n\n**ABUBA**는 육아와 금융을 결합한 새로운 서비스입니다. 부모님이 아이의 일상을 육아 일기로 기록하는 동시에, 아이의 미래를 위한 저축을 관리할 수 있습니다. 아이의 첫 미소, 첫 걸음, 첫 마디, 그 모든 소중한 순간을 간직하면서 미래를 위한 준비도 함께 할 수 있어요.\n\n부모님은 아이의 사진과 음성 기록을 남길 수 있고, AI가 감정 분석을 통해 일기를 더욱 생동감 있게 정리해 줍니다. 뿐만 아니라, 아이의 계좌와 연동되어 저축 상황을 한눈에 확인하고, 목표 금액에 도달하면 특별한 기념일처럼 육아 기록을 모아 선물할 수도 있어요.\n\n**ABUBA**와 함께라면, 아이의 성장과 함께하는 매일이 특별한 추억이 됩니다!\n\n## 📆 프로젝트 기간\n\n<hr>\n\n2024.08.19(월) ~ 2024.10.11(금)\n\n## 🏃 팀원 소개\n\n### Backend\n\n최재혁 | 이동규 | 김재윤\n\n### Frontend\n\n정승훈 | 유태람\n\n### Infra\n\n김영표\n\n## 🛠️ 메인 기능\n\n<hr>\n\n- ### 육아 일기 & 성장 기록\n\n- 아이의 소중한 순간들을 사진과 음성으로 기록할 수 있어요. 예를 들어, 아이가 처음으로 걷는 순간이나 첫 번째 생일을 일기로 남기고, 감정 달력으로 그 날의 기분을 시각화할 수 있어요\n\n- AI 감정 분석 기능을 통해 일기 작성자의 감정 상태를 분석하고 이모지로 표현하여, 육아 기록을 더 다양하게 간직할 수 있어요\n\n- 일기 기록을 바탕으로 성장 기록 차트가 자동으로 업데이트되어, 아이의 키, 몸무게 등 발달 상황을 한눈에 확인할 수 있어요\n\n<br/>\n\n- ### 금융 서비스와 연동\n\n- 아이의 미래를 위한 저축을 간편하게 관리하세요. 부모님이 연동된 계좌로 아이의 저축 상황을 관리하고, 목표 저축 금액을 설정할 수 있어요\n\n- 일기 메모에 맞춰 입출금 내역을 자동으로 연결해 육아와 저축을 한 번에 관리하는 스마트한 방법을 제공합니다\n\n<br/>\n\n- ### 맞춤형 육아 로드맵\n\n- 아이의 나이에 맞춰 개인화된 정보를 제공합니다. 각 성장 단계에 맞는 발달 정보, 정부 지원 혜택, 의료 정보 등을 쉽게 확인할 수 있어요\n\n- 아이의 성장에 맞춘 정보를 기반으로 필요한 육아 정보를 언제든지 받아볼 수 있어, 부모님의 육아 고민을 덜어줍니다\n\n<br/>\n\n- ### 가족 간 공유와 소통\n\n- 가족 구성원들이 함께 작성한 일기를 공유하고, 서로의 기록을 확인하며 아이의 성장을 함께 축하할 수 있어요\n\n- 특정 가족 구성원이 기록한 일기가 게시되면, 실시간 알림을 통해 다른 가족들도 그 순간을 바로 확인할 수 있습니다\n\n- 작성된 일기는 다른 가족 구성원들도 볼 수 있어, 모두가 함께 아이의 성장을 축하하는 데 기여할 수 있어요\n\n<br/>\n\n## 📜 주요 기술\n\n<hr>\n\n## 🖥️ Client\n\n![Next.js](<https://img.shields.io/badge/Next.js-000000?style=for-the-badge&logo=Next.js&logoColor=white>)\n\n![TypeScript](<https://img.shields.io/badge/TypeScript-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white>)\n\n![Styled Components](<https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&logo=styled-components&logoColor=white>)\n\n![Zustand](<https://img.shields.io/badge/Zustand-5B4638?style=for-the-badge&logoColor=white>)\n\n![Git](<https://img.shields.io/badge/Git-F05032?style=for-the-badge&logo=Git&logoColor=white>) ![GitLab](<https://img.shields.io/badge/GitLab-FC6D26?style=for-the-badge&logo=GitLab&logoColor=white>)\n\n![Visual Studio Code](<https://img.shields.io/badge/Visual%20Studio%20Code-007ACC?style=for-the-badge&logo=Visual-Studio-Code&logoColor=white>)\n\n![PWA](<https://img.shields.io/badge/PWA-5A0FC8?style=for-the-badge&logo=pwa&logoColor=white>)\n\n## 🖧 Server\n\n![Java](<https://img.shields.io/badge/Java-007396?style=for-the-badge&logo=java&logoColor=white>)\n\n![Spring Boot](<https://img.shields.io/badge/Spring%20Boot-6DB33F?style=for-the-badge&logo=spring-boot&logoColor=white>) ![Spring Security](<https://img.shields.io/badge/Spring%20Security-6DB33F?style=for-the-badge&logo=spring-security&logoColor=white>)\n\n![JWT](<https://img.shields.io/badge/JWT-000000?style=for-the-badge&logo=JSON%20web%20tokens&logoColor=white>) ![OAuth2](<https://img.shields.io/badge/OAuth2-2496ED?style=for-the-badge&logo=OAuth&logoColor=white>)\n\n![Redis](<https://img.shields.io/badge/Redis-DC382D?style=for-the-badge&logo=redis&logoColor=white>) ![MySQL](<https://img.shields.io/badge/MySQL-4479A1?style=for-the-badge&logo=mysql&logoColor=white>)\n\n![GCP SDK](<https://img.shields.io/badge/GCP%20SDK-4285F4?style=for-the-badge&logo=google-cloud&logoColor=white>) ![GCP](<https://img.shields.io/badge/GCP-4285F4?style=for-the-badge&logo=google-cloud&logoColor=white>)\n\n![Gradle](<https://img.shields.io/badge/Gradle-02303A?style=for-the-badge&logo=gradle&logoColor=white>)\n\n![Server-Sent Events](<https://img.shields.io/badge/Server--Sent%20Events-008CDD?style=for-the-badge&logo=javascript&logoColor=white>)\n\n![OpenFeign](<https://img.shields.io/badge/OpenFeign-E10098?style=for-the-badge&logo=spring&logoColor=white>)\n\n## 🏗️ Infrastructure\n\n![Nginx](<https://img.shields.io/badge/Nginx-009639?style=for-the-badge&logo=nginx&logoColor=white>)\n\n![Docker](<https://img.shields.io/badge/Docker-2496ED?style=for-the-badge&logo=docker&logoColor=white>)\n\n![Jenkins](<https://img.shields.io/badge/Jenkins-D24939?style=for-the-badge&logo=jenkins&logoColor=white>)\n\n![AWS EC2](<https://img.shields.io/badge/AWS%20EC2-FF9900?style=for-the-badge&logo=amazon-aws&logoColor=white>) ![AWS S3](<https://img.shields.io/badge/AWS%20S3-569A31?style=for-the-badge&logo=amazon-s3&logoColor=white>)\n\n## 📠 협업 툴\n\n![GitLab](<https://img.shields.io/badge/GitLab-FCA121?style=for-the-badge&logo=gitlab&logoColor=white>)\n\n![Jira](<https://img.shields.io/badge/Jira-0052CC?style=for-the-badge&logo=jira&logoColor=white>)\n\n![Notion](<https://img.shields.io/badge/Notion-000000?style=for-the-badge&logo=notion&logoColor=white>)\n\n![Mattermost](<https://img.shields.io/badge/Mattermost-0058CC?style=for-the-badge&logo=mattermost&logoColor=white>)\n\n![Discord](<https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&logo=discord&logoColor=white>)\n\n![Webex](<https://img.shields.io/badge/Webex-00A0D1?style=for-the-badge&logo=webex&logoColor=white>)\n\n\n\n','https://github.com/DKL1231/ABUBA','https://withme.s3.amazonaws.com/img/5ed2ec85-fc90-40e8-9420-f783d706c8f3_icon.png',2170377684233534099,'DKL1231','The given repository appears to be for a multifaceted financial and personal management platform, likely targeted towards families. It includes a backend developed using Java with Spring Boot, indicating strong API support for handling multiple services like accounts, alarms, authentication, diaries, and more, which are integral for both internal functionalities and interaction with external financial systems (indicated by the various DTOs for financial transactions). Additionally, the project involves security features, possibly to ensure data privacy and secure transactions, which is critical for financial applications.\n\nThe frontend, developed with React, suggests a user-focused interface, with components for calendars, diaries, accounts synchronization, and financial management. This keeps families organized in terms of finance and everyday scheduling. The presence of multiple types of user interfaces (like forms for signup, diary, alarm, and roadmap management) suggests an intuitive interaction model for end-users spanning various aspects of management – financial, personal, and perhaps child-specific development tracking.\n\nRoadmap functionalities indicate long-term planning features, likely for tracking and planning financial and personal milestones. The comprehensive inclusion of alarm and notification systems points towards a system that’s proactive in user engagement, possibly for reminders or important financial dates.\n\nThe backend’s openFeign and service-directory configurations indicate integration with external services, likely financial institutions or other data providers, for real-time data exchange. Security configurations and custom DTOs for requests and responses across different modules suggest robust handling of data flowing in and out of the platform, which is crucial for maintaining integrity and privacy in financial applications.\n\nIn summary, this project is a sophisticated, security-sensitive family-centric platform for managing finances, personal activities, and developmental milestones, integrating extensive backend services with a comprehensive and interactive frontend user experience.'),(595,'2024-11-15 09:43:40.454991','2024-11-18 15:57:52.927694',1,0,1,'aes','# 프로젝트 소개\n\nAES(Advanced Encryption Standard) 암호화 알고리즘을 Python을 이용하여 단계별로 구현하고 실행할 수 있는 프로그램입니다.\n\n# 기획 배경\n\nAES알고리즘에 대한 이해와 개인적인 구현 능력 강화를 위해 작성했습니다.\n\n# 실행 화면\n\n1.  라운드별 실행 결과 확인\n\n![image.png](https://withme.s3.amazonaws.com/interImg/ed8f45c7-e7f0-4a94-a8ab-33ae15a3a6a9_image.png)\n\n2. 실행 화면\n\n![image.png](https://withme.s3.amazonaws.com/interImg/671bfb5a-08c8-4c74-95fb-b6c3c283efd2_image.png)\n','https://github.com/DKL1231/aes','https://withme.s3.amazonaws.com/img/c9308c3e-4af8-43ac-8f67-d0b5079a371b_q5Kzw3R.jpg',7272628693790639819,'DKL1231','Apologies, but it appears the directory structure or contents of the project were not provided in your message. To analyze and summarize the project\'s purpose or topic, please include a brief description or list of directories, files, or any significant details about the code or documents in the repository. Alternatively, you could describe the contents and I could help infer the functionality and purpose from there.'),(596,'2024-11-15 09:43:40.477546','2024-11-18 16:01:02.687578',1,0,1,'AlgoFarm','\n\n\n','https://github.com/DKL1231/AlgoFarm','https://withme.s3.amazonaws.com/img/f81833c1-f74b-427b-881b-9e4e5348c533_algofarm.png',439970884189075895,'DKL1231','Without specific details about the directory names, files, and their contents within the \"root\" directory you\'ve referred to, I cannot provide a precise summary of the project\'s purpose or functionality. However, I can offer a general approach on how to analyze a repository structure for understanding its purpose:\n\n1. **Identify Key Directories and Files**: Look at the names of the top-level directories and files which often hint at the functionality (e.g., \'src\' for source code, \'docs\' for documentation, \'tests\' for testing scripts).\n\n2. **Examine the README File**: This file typically provides an overview of the project, including its purpose, how to set it up, and use it.\n\n3. **Check Documentation**: Directories like \'docs\' or \'documentation\' can give you an insight into the deeper functionalities and the purpose of the project.\n\n4. **Review Code and Comments**: Look into directories containing code (often named \'src\', \'lib\', \'app\') and review the code and comments for details about what the project does.\n\n5. **Setup and Configurations**: Files like \'setup.py\' or \'config\' can help understand what environments or dependencies are necessary, which can also hint at purpose.\n\n6. **Dependencies**: Review \'requirements.txt\' or similar files to see what libraries or frameworks the project depends on; this can also provide context about the project’s functionality.\n\n7. **Test Files**: The test directory may contain scripts that showcase how the functions/methods are supposed to work, providing insights into use cases.\n\nIf you can give more specific details about the file and directory names within the \"root\" directory, I can provide a more focused summary of the project’s purpose and functionality.'),(597,'2024-11-15 09:43:40.496721','2024-11-15 09:43:40.496756',0,0,1,'chrome-app','','https://github.com/DKL1231/chrome-app',NULL,NULL,'DKL1231',NULL),(598,'2024-11-15 09:43:40.516457','2024-11-15 09:43:40.516462',0,0,1,'codetree-TILs','','https://github.com/DKL1231/codetree-TILs',NULL,NULL,'DKL1231',NULL),(599,'2024-11-15 09:43:40.534927','2024-11-18 18:35:36.561524',1,0,1,'CodingTest','# 소개\n\n[BaekjoonHub](https://github.com/BaekjoonHub/BaekjoonHub) 에 의해 자동으로 생성되고 업로드되는 레포지토리입니다.\n\nPS에 관한 문제와 풀이가 업로드됩니다.\n\n개인 공부 및 기록용으로 생성하였습니다.\n\n# 업로드 예시\n\n![image.png](https://withme.s3.amazonaws.com/interImg/67cccaf0-7414-47cc-8484-210360c0c3fe_image.png)\n\n# 업로드 구조\n\n![image.png](https://withme.s3.amazonaws.com/interImg/a7f3a513-7499-4f43-90ee-2675beef9db8_image.png)\n\nPS사이트(SWEA, Baekjoon, Programmers, etc...)>난이도>문제 순으로 폴더구조가 생성되어 업로드됩니다.\n','https://github.com/DKL1231/CodingTest','https://withme.s3.amazonaws.com/img/702fdf22-a696-493a-9a43-79e9ed8487af_123.png',2056033654878586822,'DKL1231','This project implements a collaborative Markdown editing service with a Spring-based backend and a Next.js frontend. The service provides several key features designed to enhance the user experience and streamline Markdown editing for developers: 1. Real-time Collaboration on Markdown: Users can simultaneously write and edit Markdown documents with their teammates for a specific repository, promoting efficient collaboration. 2. User-friendly Markdown Writing via Blocks: Even without prior knowledge of Markdown syntax, users can easily create Markdown documents using an intuitive block-based editor. 3. AI-Assisted Markdown Generation: By leveraging project information from remote repositories, users can utilize ChatGPT to automatically generate Markdown content, significantly reducing manual workload. 4. Direct Push to Remote Repositories: The service allows users to push the completed Markdown documents directly to their remote repositories, integrating seamlessly with existing version control workflows. This project bridges the gap between collaborative Markdown editing and repository management while incorporating modern AI tools to enhance productivity. By combining a user-friendly interface with secure backend mechanisms, it effectively caters to developers\' needs for efficient documentation and collaboration.'),(600,'2024-11-15 09:43:40.557594','2024-11-15 09:43:40.557598',0,0,1,'DKL1231','','https://github.com/DKL1231/DKL1231',NULL,NULL,'DKL1231',NULL),(601,'2024-11-15 09:43:40.575908','2024-11-15 09:43:40.575912',0,0,1,'EGScapeKR','','https://github.com/DKL1231/EGScapeKR',NULL,NULL,'DKL1231',NULL),(602,'2024-11-15 09:43:40.592896','2024-11-15 09:43:40.592901',0,0,1,'ErogeScoreDiscordBot','','https://github.com/DKL1231/ErogeScoreDiscordBot',NULL,NULL,'DKL1231',NULL),(603,'2024-11-15 09:43:40.609445','2024-11-15 09:43:40.609449',0,0,1,'kokoa-clone','','https://github.com/DKL1231/kokoa-clone',NULL,NULL,'DKL1231',NULL),(604,'2024-11-15 09:43:40.630808','2024-11-17 11:32:47.234487',1,0,1,'sbw_predict','# 프로젝트 소개\n\n서울 지하철 사용 인구수를 수집, 정제하여 이용량을 예측하는 모델입니다.\n\n# 기획 배경\n\n지하철은 현대사회에 있어 가장 많이 사용되는 대중교통 중 하나로, 일일 이용자를 예측한다면 다양한 사고 예측이나 정책 수립에 활용할 수 있을 것이다.\n\n# 사용 모델\n\nLSTM\n\n![image.png](https://withme.s3.amazonaws.com/interImg/0f88b555-96ec-43e4-8127-4f3c6aa19ae7_image.png)\n\n# 예측 결과\n\n![image.png](https://withme.s3.amazonaws.com/interImg/26ddd049-91a6-42df-ab9c-f1262eac2292_image.png)\n\nmAP가 0.8684931506849315로, 약 87%의 예측값을 보였다.\n','https://github.com/DKL1231/sbw_predict','https://withme.s3.amazonaws.com/img/78594607-929d-448a-9d8b-0d4d2ba16d2d_893942_585862_3146.jpg',3396041350619903102,'DKL1231',NULL),(605,'2024-11-15 09:43:40.650733','2024-11-15 09:43:40.650737',0,0,1,'translator-with-ocr','','https://github.com/DKL1231/translator-with-ocr',NULL,NULL,'DKL1231',NULL),(606,'2024-11-15 09:45:23.482663','2024-11-16 20:47:43.598758',1,0,1,'audio-to-summary','# Audio-to-summary\n\n해당 프로젝트는 기존 음성 요약의 성능을 높이는 방법에 대해서 연구한 프로젝트 입니다.\n\n# 기획 배경\n\n기존 음성 요약은 `음성파일` -> `STT` -> `Text` -> `언어모델` -> `요약` 의 흐름으로 진행됩니다.\n\n이는 발화자가 여러 명인 경우 각각의 내용을 충분히 반영하지 못합니다.\n\n이 문제점을 해결하기 위해 **화자분리 **기술을 통해 각 발화자의 발화 내용을 구분하여 대본 형태로 바꾼 뒤에 요약을 진행합니다.\n\n\n','https://github.com/wonchul98/audio-to-summary','https://withme.s3.amazonaws.com/img/c8386179-970a-4d1c-9a69-cca763f8fdc6_speaker-icon-logo-600nw-759702361.webp',6413628638735873863,'wonchul98',NULL),(607,'2024-11-15 09:45:23.504730','2024-11-15 09:45:23.504736',0,0,1,'baekjoon_cpp','','https://github.com/wonchul98/baekjoon_cpp',NULL,NULL,'wonchul98',NULL),(608,'2024-11-15 09:45:23.524536','2024-11-16 21:01:22.963719',1,0,1,'baekjoon_JAVA','','https://github.com/wonchul98/baekjoon_JAVA','https://withme.s3.amazonaws.com/img/6599fd6b-203e-4755-b8fd-84ab8a4831de_boj-og.png',653311128491965873,'wonchul98',NULL),(609,'2024-11-15 09:45:23.553797','2024-11-15 09:45:23.553801',0,0,1,'BCN-Mission1','','https://github.com/wonchul98/BCN-Mission1',NULL,NULL,'wonchul98',NULL),(610,'2024-11-15 09:45:23.569263','2024-11-16 20:59:15.252559',1,0,1,'ComputerGraphicsHW','# 컴퓨터 그래픽스\n\n인하대학교 정보통신공학과 컴퓨터 그래픽스 과제입니다.\n\n진짜 급할 경우에 참고하시고 아니면 직접 하시는 것을 추천드립니다.\n\n# 기획 배경\n\n노트북이랑 데스크 탑에서 하려고 git에 올려두었습니다.\n\n# 주요기능\n\n컴퓨터 그래픽스 과제를 올리는 용도입니다.\n\n# 참고\n\n저의 해당 과목 학점은 B+입니다.\n\n참고 하시지 않는 것을 추천드립니다.\n','https://github.com/wonchul98/ComputerGraphicsHW','https://withme.s3.amazonaws.com/img/7abf0cde-23b9-4dcc-9aa2-353306c36a58_bookcover_img332.jpg',787524333769213054,'wonchul98',NULL),(611,'2024-11-15 09:45:23.590507','2024-11-15 09:45:23.590511',0,0,1,'ComputerGraphicsProject2','','https://github.com/wonchul98/ComputerGraphicsProject2',NULL,NULL,'wonchul98',NULL),(612,'2024-11-15 09:45:23.612165','2024-11-17 20:35:47.894948',1,0,1,'djangogram','# 프로젝트 소개\n\n정보보호론 과제 저장용 레포지토리입니다.\n\n# 기획 배경\n\n정보보호론 과제 저장용\n\n# 주요 기능\n\n*   [ ] 과제1\n*   [ ] 과제2\n*   [ ] 과제3\n\n','https://github.com/wonchul98/djangogram','https://withme.s3.amazonaws.com/img/0d2c980e-4699-4819-b6ad-5d0524f7635b_asd.jfif',9094098068867038975,'wonchul98',NULL),(613,'2024-11-15 09:45:23.630819','2024-11-17 00:21:43.372996',1,0,1,'Hanpj','# 한이음 프로젝트\n\n머신러닝 기반 피싱사이트 탐지 프로젝트입니다.\n\n# 기획 배경\n\n기존 피싱사이트 탐지기는 블랙리스트 / 화이트리시트 기반입니다.\n\n새로운 사이트가 피싱사이트인지 탐지하지 못합니다. 이러한 문제를 해결하기 위해서 프로젝트를 기회하였습니다.\n\n# 주요기능\n\nurl에서 특징점을 추출합니다.\n\n(도메인 축소 기능 사용 여부, url 길이...)\n\n','https://github.com/wonchul98/Hanpj','https://withme.s3.amazonaws.com/img/8bd952cc-d5c0-4666-8039-402172472dd8_fish-seafood-icon-free-vector.jpg',7399366073265272670,'wonchul98',NULL),(614,'2024-11-15 09:45:23.646201','2024-11-17 01:14:52.055293',1,0,1,'info-security','# 프로젝트 소개\n\n정보보호론 과제 저장용 레포지토리입니다.\n\n# 기획 배경\n\n정보보호론 과제 저장용\n\n# 주요 기능\n\n*   [ ] 과제1\n*   [ ] 과제2\n*   [ ] 과제3\n\n','https://github.com/wonchul98/info-security','https://withme.s3.amazonaws.com/img/eeae9744-e033-4fe5-b717-5032d5468d9e_aasd.png',6882262413400229655,'wonchul98',NULL),(615,'2024-11-15 09:45:23.662726','2024-11-15 09:45:23.662730',0,0,1,'int-i-study','','https://github.com/wonchul98/int-i-study',NULL,NULL,'wonchul98',NULL),(616,'2024-11-15 09:45:23.677683','2024-11-15 09:45:23.677687',0,0,1,'java-lotto-6','','https://github.com/wonchul98/java-lotto-6',NULL,NULL,'wonchul98',NULL),(617,'2024-11-15 09:45:23.694166','2024-11-15 09:45:23.694178',0,0,1,'jpaStudyRepo','','https://github.com/wonchul98/jpaStudyRepo',NULL,NULL,'wonchul98',NULL),(618,'2024-11-15 09:45:23.711556','2024-11-15 10:21:11.050555',1,0,1,'medisign','# 서비스 소개\n\nMedisign은 요양보호사의 알약 투약을 돕는 서비스입니다.\n\n# 기획배경\n\n고령화 시대. 요양 보호사들의 인력은 점점 줄어들고 있습니다.\n\n1명의 요양 보호사당 담당하는 노인이 수는 점점 늘어납니다.\n\n이에 따라 알약 오남용 수도 꾸준하게 증가합니다.\n\n전문 지식 없이 노인들의 투약을 돕는 서비스를 기획하였습니다.\n\n# 주요 기능\n\n### 1.병용 금기 알약 탐지 기능\n\n### 2.알약 식별 기능\n\n\n## Basic Commands\n\n### **User** 모델\n\n*   **List & Create** : `/users/User_list`\n\n    *   **Methods**: GET, POST\n\n*   **Retrieve, Update & Delete** : `/users/User_list/user_id`\n\n    *   **Methods**: GET, PUT, DELETE\n\n### **Medicine** 모델\n\n*   **List & Create** : `/medicines/medicine_list/`\n\n    *   **Methods**: GET, POST\n\n*   **Retrieve, Update & Delete** : `/medicines/medicine_list/medicine_id`\n\n    *   **Methods**: GET, PUT, DELETE\n\n*   **상호작용** : `/medicines/cont/medicine_id`\n\n    *   **Methods**: GET\n    *   **Note**: 약의 표준코드 기준 병용 금기 약품 리스트 제공\n\n### **Prescription** 모델\n\n*   **List & Create** : `/medicines/prescription_list/`\n\n    *   **Methods**: GET, POST\n\n*   **Retrieve, Update & Delete** : `/medicines/prescription_list/prescription_id`\n\n    *   **Methods**: GET, PUT, DELETE\n    *   **Note**: `dosage_times` 필드는 `dosage_time`의 id 값의 list 형태로 제공. 예시: 09:00, 12:00, 18:00 → [19,25,37]\n\n### **Pharmacy** 모델\n\n*   **Nearby Pharmacies** : `/pharmacies/nearby?lat=위도&lon=경도&distance_km=반경(km)`\n\n    *   **Methods**: GET\n\n*   **Add Regular Pharmacy** : `/users/User_list/user_id`\n\n    *   **Methods**: PUT\n\n*   **List Regular Pharmacy** : `/pharmacies/reg/user_id`\n\n    *   **Methods**: GET\n\n*   **Show Nearby on Map** : `/pharmacies/show_near/?user_id=user_id&lat=lat&lon=lon`\n\n    *   **Note**: 입력받은 좌표 기반으로 주변 약국 지도 정보 제공, user_id 기반의 즐겨찾기된 약국 지도상 표시\n\n*   **Show Selected on Map** : `/pharmacies/show_select/?pharmacy_id=pharmacy_id`\n\n    *   **Note**: 입력받은 pharmacy_id의 위치 지도상 표시\n\n### **Disease** 모델\n\n*   **List & Create** : `/diseases/disease_list`\n\n    *   **Methods**: GET, POST\n\n*   **Retrieve, Update & Delete** : `/diseases/disease_list/disease_id`\n\n    *   **Methods**: GET, PUT, DELETE\n\n### **Widget** 모델\n\n*   **List & Create** : `/widgets/widget_list`\n\n    *   **Methods**: GET, POST\n\n*   **Retrieve, Update & Delete** : `/widgets/widget_list/id`\n\n    *   **Methods**: GET, PUT, DELETE\n\n### **Admin**\n\n*   **Access** : `/admin`\n\n## References\n\n모델 별 상세 사용법은 각 `app_name/tests/test_api.py` 파일을 참고하십시오.\n','https://github.com/wonchul98/medisign','https://withme.s3.amazonaws.com/img/e30731f4-21ba-43ce-a9ae-0773b99c40e3_알약.png',7944754895828794291,'wonchul98',NULL),(619,'2024-11-15 09:45:23.731696','2024-11-15 09:45:23.731699',0,0,1,'mysite','','https://github.com/wonchul98/mysite',NULL,NULL,'wonchul98',NULL),(620,'2024-11-15 09:45:23.751036','2024-11-17 00:30:54.825987',1,0,1,'Programmers','# 프로그래머스 문제풀이\n\n프로그래머스 문제 풀이용 레포지토리 입니다.\n\n# 기획 배경\n\n프로그래머스 문제 풀이용 레포지토리\n\n# 주요기능\n\n열심히 문제풀고 기록하기 위함\n\n','https://github.com/wonchul98/Programmers','https://withme.s3.amazonaws.com/img/b60ddfdd-1ee2-4c6e-aaa6-4851d821b5a5_img-meta-programmers-411e94bf29153dc31004168e6cd500279b1a531a23689303755e51971dee4526.png',2771711129002819265,'wonchul98',NULL),(621,'2024-11-15 09:45:23.768693','2024-11-17 14:58:28.226365',1,0,1,'samsung_B_prac','# b형 문제 풀이\n\nb형 문제 풀이 정리 입니다.\n\n# 기획 배경\n\nb형 공부 하려고 만들었습니다.\n\n# 주요기능\n\nb형 기출문제 입니다.\n\n','https://github.com/wonchul98/samsung_B_prac','https://withme.s3.amazonaws.com/img/46f09c4d-e95d-461c-9346-da75bab7bb68_3541184.png',4186164139225296997,'wonchul98',NULL),(622,'2024-11-15 09:45:23.785570','2024-11-15 09:45:23.785572',0,0,1,'SWEA','','https://github.com/wonchul98/SWEA',NULL,NULL,'wonchul98',NULL),(623,'2024-11-15 09:45:23.804805','2024-11-15 09:45:23.804808',0,0,1,'wonchul98','','https://github.com/wonchul98/wonchul98',NULL,NULL,'wonchul98',NULL),(624,'2024-11-15 10:04:27.607934','2024-11-15 10:06:56.959914',1,0,1,'withme-test','\n| 레이블1 | 레이블2 | 레이블3            |\n| ---- | ---- | --------------- |\n| 내용1  | 내용2  | 내용3 근데 줄바꿈을 곁들인 |\n\n\n\n','https://github.com/taegun1011/withme-test','https://withme.s3.amazonaws.com/img/e4ea0e4d-478d-41ba-b596-f14929df2474_WM1.jpg',5791664743868613617,'taegun1011',NULL),(625,'2024-11-16 23:53:35.012541','2024-11-16 23:59:33.258018',1,0,1,'potless','# ⚠️POTLESS(포트리스)⚠️\n\n![potless.png](https://withme.s3.amazonaws.com/interImg/f73c1e03-c922-4b53-98e8-78042b34c8c4_potless.png)\n\n# 💡서비스 소개\n\n### 도로 위 포트홀, 이제는 포트리스로 간편하게 해결하세요!\n\n기존의 포트홀 신고 방식은 복잡하고 시간이 많이 소요되며, 시민들과 공무원 모두에게 큰 부담이 되었습니다. 포트리스는 이러한 문제를 해결하기 위해 만들어진 자동 포트홀 신고 및 관리 서비스 입니다.\n\n# 🔎기획배경\n\n*   도로 위 포트홀은 운전자와 보행자의 안전에 큰 위협이 됩니다. 최근 포트홀로 일어나는 사건사고가 많은 반면 포트홀 신고 및 관리 시스템은 미흡하다는 문제점을 안고 있습니다.\n*   ”포트리스”는 AI기술과 데이터 분석을 통해 포트홀 신고부터 관리까지 한 곳에서 효율적으로 관리하고 신속하게 처리하고자 기획했습니다.\n\n# 📋주요 기능\n\n*   도로 주행 중 영상 촬영을 통해 자동으로 포트홀을 감지하고 신고합니다.\n*   감지된 포트홀의 위험도를 자동으로 판단합니다.\n*   시간별, 지역별 포트홀 통계치를 확인할 수 있습니다.\n*   포트홀 수리 관련 서류 작성을 자동화 하였습니다.\n*   수리 작업 관련 보고서를 애플리케이션을 통해 작성할 수 있습니다.\n\n# 🔍상세 기능\n\n| 구분 | 기능            | 설명                                                                                    |\n| -- | ------------- | ------------------------------------------------------------------------------------- |\n| 1  | 객체 탐지         | YOLO 객체 탐지 모델을 활용하여 On-Device AI 및 Server AI를 구축, 2차 검증 로직을 통한 포트홀 감지                 |\n| 2  | 중복검사          | H3를 활용하여 GPS값에 따라 같은 포트홀을 서로 다른 포트홀로 인식하지 않도록 중복 신고 자동 처리 및 신고 횟수에 따른 수리 긴급성 수치 자동 변경 |\n| 3  | 위험도 검사        | 도로 폭 및 바퀴 진행 위치를 활용하여 포트홀 위험도를 자동으로 판별함                                               |\n| 4  | 최적 이동 경로 제공   | 출발점과 도착점이 동일할 때, 수리할 포트홀에 대하여 차량의 크기를 고려, 2차선 이내의 도로에서 U턴을 하지 않는 경로를 제공함              |\n| 5  | 포트홀 알림        | 스마트 폰 및 갤럭시 워치 등의 기기에서 \'포트리스\' 앱을 통해 카카오 네비게이션 실행 시, 인접 포트홀에 대한 음성 및 화면 알림을 제공함        |\n| 6  | 포트홀 수리 문서 자동화 | 포트홀이 신고 되는 순간부터 수리 과정까지 필요한 모든 문서에 대한 자동화를 제공함.                                       |\n| 7  | 통계치 제공        | 도로 파손 발생 현황을 구/동 별로 특정 시간에 따라 확인할 수 있으며, 통계 정보를 시각화하여 제시함.                            |\n\n# 👬추가 정보\n\n*   11기 실습코치 정휘원(@wjdgnldnjs97)\n*   11기 실습코치 이승민(@mehot98_2)\n\n# 🖥️아키텍처\n\n![architecture.png](https://withme.s3.amazonaws.com/interImg/61624455-19eb-4d6b-a70d-fbb8620f213a_architecture.png)\n\n# 프로젝트 활용\n\n[WIKI](https://lab.ssafy.com/ssafy_opensource/10-potless/-/wikis/home)를 참고해주세요!\n\n# 🔁 설치\n\n[포팅메뉴얼](/WIKI/%ED%8F%AC%ED%8C%85%EB%A7%A4%EB%89%B4%EC%96%BC.pdf)을 참고해주세요!\n\n# ℹ️ 기여\n\n1.  해당 프로젝트를 Fork하세요(<https://lab.ssafy.com/ssafy_opensource/10-potless/-/forks/new>)\n\n*   `Project URL`은 개인 GitLab ID로 설정해주세요!\n*   `Project Slug`는 변경하지 않습니다.\n\n1.  새로운 브랜치를 생성하세요\n\n*   `develop` 브랜치에서 분기해주세요\n*   브랜치 네이밍은 `기수_팀코드_학번`입니다.\n\ngitcheckout -b dev\\\ngit pull origin dev\\\ngit checkout -b 11th_B301_1011111\n\n1.  변경사항을 `commit`하세요\n\ngit commit -m \'feat : Add some fooBar\'\n\n1.  브랜치에 Push하세요\n\ngit push origin 11th_B301_1011111\n\n1.  새로운 Merge Request를 요청하세요\n\n*   Source branch: `개인 ID/프로젝트`에서 새로 생성한 브랜치 (`11th_B301_1011111`)\n*   Target branch: `ssafy_opensource/프로젝트명`의 `develop` 브랜치\n*   Description에 수정된 파일의 위치, 변경 사항, 의견을 작성해 등록합니다.\n\n## 라이선스\n\nDistributed under the SGPL license. See [License](https://lab.ssafy.com/ssafy_opensource/10-potless/-/blob/master/LICENSE) for more information.\n','https://github.com/gyeongmann/potless','https://withme.s3.amazonaws.com/img/4386521a-5f0d-4726-81f6-69bafa9bb3be_potless.png',2258938267627834826,'gyeongmann',NULL),(626,'2024-11-17 00:01:22.996057','2024-11-17 00:11:15.795085',1,0,1,'rlottie','# rlottie\n\n![BlockNote image](https://camo.githubusercontent.com/9453e1782bb56a07788396ebfdfaaad016330556108796a75267a11a2fa5f966/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6e33786f6e786b316f6f6f3673376e723f7376673d747275652670617373696e67546578743d77696e646f77732532302d25323070617373696e67)![BlockNote image](https://camo.githubusercontent.com/b91cd6307fb68bfb8c742f255ddcb5da6c994f386fdac931e23f53b7d14ff13a/68747470733a2f2f6261646765732e6769747465722e696d2f724c6f747469652d6465762f636f6d6d756e6974792e737667)\n\n<br />\n\n![BlockNote image](https://github.com/Samsung/rlottie/raw/master/.Gifs/logo.png)\n\nrlottie is a platform independent standalone c++ library for rendering vector based animations and art in realtime.\n\nLottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with [bodymovin](https://github.com/bodymovin/bodymovin), Sketch with [Lottie Sketch Export](https://github.com/buba447/Lottie-Sketch-Export), and from [Haiku](https://www.haiku.ai/).\n\nFor the first time, designers can create and ship beautiful animations without an engineer painstakingly recreating it by hand. Since the animation is backed by JSON they are extremely small in size but can be large in complexity!\n\nHere are small samples of the power of Lottie.\n\n| ![1.gif](<https://withme.s3.amazonaws.com/interImg/0f4eaf24-c149-4c15-ac06-88eacf5d3b8d_1.gif>) | ![2.gif](<https://withme.s3.amazonaws.com/interImg/f3b2b274-15b3-4990-9fa2-832d3ab75c00_2.gif>) |\n| ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- |\n\n![Examples1.gif](https://withme.s3.amazonaws.com/interImg/70c76f84-8c06-4393-b603-6b06d12a40df_Examples1.gif)\n\n## Contents\n\n*   [Building Lottie](https://github.com/gyeongmann/rlottie/edit/master/README.md#building-lottie)\n\n    *   [Meson Build](https://github.com/gyeongmann/rlottie/edit/master/README.md#meson-build)\n    *   [Cmake Build](https://github.com/gyeongmann/rlottie/edit/master/README.md#cmake-build)\n    *   [Test](https://github.com/gyeongmann/rlottie/edit/master/README.md#test)\n\n*   [Demo](https://github.com/gyeongmann/rlottie/edit/master/README.md#demo)\n\n*   [Previewing Lottie JSON Files](https://github.com/gyeongmann/rlottie/edit/master/README.md#previewing-lottie-json-files)\n\n*   [Quick Start](https://github.com/gyeongmann/rlottie/edit/master/README.md#quick-start)\n\n*   [Dynamic Property](https://github.com/gyeongmann/rlottie/edit/master/README.md#dynamic-property)\n\n*   [Supported After Effects Features](https://github.com/gyeongmann/rlottie/edit/master/README.md#supported-after-effects-features)\n\n*   [Issues or Feature Requests?](https://github.com/gyeongmann/rlottie/edit/master/README.md#issues-or-feature-requests)\n\n## Building Lottie\n\nrlottie supports [meson](https://mesonbuild.com/) and [cmake](https://cmake.org/) build system. rlottie is written in `C++14`. and has a public header dependency of `C++11`\n\n### Meson Build\n\ninstall [meson](http://mesonbuild.com/Getting-meson.html) and [ninja](https://ninja-build.org/) if not already installed.\n\nRun meson to configure rlottie\n\n```javascript\nmeson build\n```\n\nRun ninja to build rlottie\n\n```javascript\nninja -C build\n```\n\n### Cmake Build\n\nInstall [cmake](https://cmake.org/download/) if not already installed\n\nCreate a build directory for out of source `build`\n\n```javascript\nmkdir build\n```\n\nRun cmake command inside `build` directory to configure rlottie.\n\n```javascript\ncd build\ncmake ..\n\n# install in a different path. eg ~/test/usr/lib\ncmake -DCMAKE_INSTALL_PREFIX=~/test ..\n\n# static build\ncmake -DBUILD_SHARED_LIBS=OFF ..\n```\n\nRun make to build rlottie\n\n```javascript\nmake -j 2\n```\n\nTo install rlottie library\n\n```javascript\nmake install\n```\n\n### Test\n\nConfigure to build test\n\n```javascript\nmeson configure -Dtest=true\n```\n\nBuild test suit\n\n```javascript\nninja\n```\n\nRun test suit\n\n```javascript\nninja test\n```\n\n[Back to contents](https://github.com/gyeongmann/rlottie/edit/master/README.md#contents)\n\n## Demo\n\nIf you want to see rlottie library in action without building it please visit [rlottie online viewer](http://rlottie.com/)\n\nWhile building rlottie library it generates a simple lottie to GIF converter which can be used to convert lottie json file to GIF file.\n\nRun Demo\n\n```javascript\nlottie2gif [lottie file name]\n```\n\n#\n\n## Previewing Lottie JSON Files\n\nPlease visit [rlottie online viewer](http://rlottie.com/)\n\n[rlottie online viewer](http://rlottie.com/) uses rlottie wasm library to render the resource locally in your browser. To test your JSON resource drag and drop it to the browser window.\n\n#\n\n## Quick Start\n\nLottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with [bodymovin](https://github.com/bodymovin/bodymovin), Sketch with [Lottie Sketch Export](https://github.com/buba447/Lottie-Sketch-Export), and from [Haiku](https://www.haiku.ai/).\n\nYou can quickly load a Lottie animation with:\n\n```javascript\nauto animation = rlottie::Animation::loadFromFile(\"absolute_path/test.json\");\n```\n\nYou can load a lottie animation from raw data with:\n\n```javascript\nauto animation = rlottie::Animation::loadFromData(std::string(rawData), std::string(cacheKey));\n```\n\nProperties like `frameRate` , `totalFrame` , `duration` can be queried with:\n\n```javascript\n# get the frame rate of the resource.\ndouble frameRate = animation->frameRate();\n\n#get total frame that exists in the resource\nsize_t totalFrame = animation->totalFrame();\n\n#get total animation duration in sec for the resource\ndouble duration = animation->duration();\n```\n\nRender a particular frame in a surface buffer `immediately` with:\n\n```javascript\nrlottie::Surface surface(buffer, width , height , stride);\nanimation->renderSync(frameNo, surface);\n```\n\nRender a particular frame in a surface buffer `asyncronousely` with:\n\n```javascript\nrlottie::Surface surface(buffer, width , height , stride);\n# give a render request\nstd::future<rlottie::Surface> handle = animation->render(frameNo, surface);\n...\n#when the render data is needed\nrlottie::Surface surface = handle.get();\n```\n\n[Back to contents](https://github.com/gyeongmann/rlottie/edit/master/README.md#contents)\n\n## Dynamic Property\n\nYou can update properties dynamically at runtime. This can be used for a variety of purposes such as:\n\n*   Theming (day and night or arbitrary themes).\n*   Responding to events such as an error or a success.\n*   Animating a single part of an animation in response to an event.\n*   Responding to view sizes or other values not known at design time.\n\n### Understanding After Effects\n\nTo understand how to change animation properties in Lottie, you should first understand how animation properties are stored in Lottie. Animation properties are stored in a data tree that mimics the information hierarchy of After Effects. In After Effects a Composition is a collection of Layers that each have their own timelines. Layer objects have string names, and their contents can be an image, shape layers, fills, strokes, or just about anything that is drawable. Each object in After Effects has a name. Lottie can find these objects and properties by their name using a KeyPath.\n\n### Usage\n\nTo update a property at runtime, you need 3 things:\n\n1.  KeyPath\n2.  rLottie::Property\n3.  setValue()\n\n### KeyPath\n\nA KeyPath is used to target a specific content or a set of contents that will be updated. A KeyPath is specified by a list of strings that correspond to the hierarchy of After Effects contents in the original animation. KeyPaths can include the specific name of the contents or wildcards:\n\n*   Wildcard *\n\n    *   Wildcards match any single content name in its position in the keypath.\n\n*   Globstar **\n\n    *   Globstars match zero or more layers.\n\n### Properties\n\n`rLottie::Property` is an enumeration of properties that can be set. They correspond to the animatable value in After Effects and the available properties are listed below.\n\n```javascript\nenum class Property {\n    FillColor,     /*!< Color property of Fill object , value type is rlottie::Color */\n    FillOpacity,   /*!< Opacity property of Fill object , value type is float [ 0 .. 100] */\n    StrokeColor,   /*!< Color property of Stroke object , value type is rlottie::Color */\n    StrokeOpacity, /*!< Opacity property of Stroke object , value type is float [ 0 .. 100] */\n    StrokeWidth,   /*!< stroke with property of Stroke object , value type is float */\n    ...\n};\n```\n\n### setValue()\n\n`setValue()` requires a keypath of string and value. The value can be `Color`, `Size` and `Point` structure or a function that returns them. `Color`, `Size`, and `Point` vary depending on the type of `rLottie::Property`. This value or function(callback) is called and applied to every frame. This value can be set differently for each frame by using the `FrameInfo` argument passed to the function.\n\n### Usage\n\n```javascript\nanimation->setValue<rlottie::Property::FillColor>(\"**\",rlottie::Color(0, 1, 0));\n```\n\n```javascript\nanimation->setValue<rlottie::Property::FillColor>(\"Layer1.Box 1.Fill1\",\n    [](const rlottie::FrameInfo& info) {\n         if (info.curFrame() < 15 )\n             return rlottie::Color(0, 1, 0);\n         else {\n             return rlottie::Color(1, 0, 0);\n         }\n     });\n```\n\n[Back to contents](https://github.com/gyeongmann/rlottie/edit/master/README.md#contents)\n\n#\n\n#\n\n## Supported After Effects Features\n\n| **Shapes**                       | **Supported** |\n| -------------------------------- | ------------- |\n| Shape                            | 👍            |\n| Ellipse                          | 👍            |\n| Rectangle                        | 👍            |\n| Rounded Rectangle                | 👍            |\n| Polystar                         | 👍            |\n| Group                            | 👍            |\n| Trim Path (individually)         | 👍            |\n| Trim Path (simultaneously)       | 👍            |\n| **Renderable**                   | **Supported** |\n| Fill                             | 👍            |\n| Stroke                           | 👍            |\n| Radial Gradient                  | 👍            |\n| Linear Gradient                  | 👍            |\n| Gradient Stroke                  | 👍            |\n| **Transforms**                   | **Supported** |\n| Position                         | 👍            |\n| Position (separated X/Y)         | 👍            |\n| Scale                            | 👍            |\n| Skew                             | ⛔️            |\n| Rotation                         | 👍            |\n| Anchor Point                     | 👍            |\n| Opacity                          | 👍            |\n| Parenting                        | 👍            |\n| Auto Orient                      | 👍            |\n| **Interpolation**                | **Supported** |\n| Linear Interpolation             | 👍            |\n| Bezier Interpolation             | 👍            |\n| Hold Interpolation               | 👍            |\n| Spatial Bezier Interpolation     | 👍            |\n| Rove Across Time                 | 👍            |\n| **Masks**                        | **Supported** |\n| Mask Path                        | 👍            |\n| Mask Opacity                     | 👍            |\n| Add                              | 👍            |\n| Subtract                         | 👍            |\n| Intersect                        | 👍            |\n| Lighten                          | ⛔️            |\n| Darken                           | ⛔️            |\n| Difference                       | ⛔️            |\n| Expansion                        | ⛔️            |\n| Feather                          | ⛔️            |\n| **Mattes**                       | **Supported** |\n| Alpha Matte                      | 👍            |\n| Alpha Inverted Matte             | 👍            |\n| Luma Matte                       | 👍            |\n| Luma Inverted Matte              | 👍            |\n| **Merge Paths**                  | **Supported** |\n| Merge                            | ⛔️            |\n| Add                              | ⛔️            |\n| Subtract                         | ⛔️            |\n| Intersect                        | ⛔️            |\n| Exclude Intersection             | ⛔️            |\n| **Layer Effects**                | **Supported** |\n| Fill                             | ⛔️            |\n| Stroke                           | ⛔️            |\n| Tint                             | ⛔️            |\n| Tritone                          | ⛔️            |\n| Levels Individual Controls       | ⛔️            |\n| **Text**                         | **Supported** |\n| Glyphs                           | ⛔️            |\n| Fonts                            | ⛔️            |\n| Transform                        | ⛔️            |\n| Fill                             | ⛔️            |\n| Stroke                           | ⛔️            |\n| Tracking                         | ⛔️            |\n| Anchor point grouping            | ⛔️            |\n| Text Path                        | ⛔️            |\n| Per-character 3D                 | ⛔️            |\n| Range selector (Units)           | ⛔️            |\n| Range selector (Based on)        | ⛔️            |\n| Range selector (Amount)          | ⛔️            |\n| Range selector (Shape)           | ⛔️            |\n| Range selector (Ease High)       | ⛔️            |\n| Range selector (Ease Low)        | ⛔️            |\n| Range selector (Randomize order) | ⛔️            |\n| expression selector              | ⛔️            |\n| **Other**                        | **Supported** |\n| Expressions                      | ⛔️            |\n| Images                           | 👍            |\n| Precomps                         | 👍            |\n| Time Stretch                     | 👍            |\n| Time remap                       | 👍            |\n| Markers                          | 👍            |\n\n#\n\n[Back to contents](https://github.com/gyeongmann/rlottie/edit/master/README.md#contents)\n\n## Issues or Feature Requests?\n\nFile github issues for anything that is broken. Be sure to check the [list of supported features](https://github.com/gyeongmann/rlottie/edit/master/README.md#supported-after-effects-features) before submitting. If an animation is not working, please attach the After Effects file to your issue. Debugging without the original can be very difficult. For immidiate assistant or support please reach us in [Gitter](https://gitter.im/rLottie-dev/community#)\n','https://github.com/gyeongmann/rlottie','https://withme.s3.amazonaws.com/img/2cef93ef-89b0-40fa-9aae-44fdbf99970a_logo.png',1354686804430993817,'gyeongmann',NULL),(627,'2024-11-17 00:14:01.837586','2024-11-18 20:03:35.986023',1,0,1,'netcorebg','','https://github.com/gyeongmann/netcorebg','https://withme.s3.amazonaws.com/img/31042f83-0f46-4cc1-b49a-31dbc5fa247e_images.jfif',5410230900675424907,'gyeongmann',NULL),(628,'2024-11-17 00:15:12.084364','2024-11-17 00:15:46.111163',1,0,1,'one','![BlockNote image](https://camo.githubusercontent.com/415e12244c6d0e38f91bf49a3fc7cb9736129d31d1e3a8dfaa7a703301dd4439/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f53616d73756e672f4f4e45)![BlockNote image](https://camo.githubusercontent.com/8fcb98160889b7202d802c1bc33a1e346624ab4e6ec49691cd362b1087ab81e9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e6e66772f62616467652f3f76657273696f6e3d6c6174657374)![BlockNote image](https://camo.githubusercontent.com/b41c11e92feba9039941d0b719fe0216c455abdcee51df61f4c727c2b31068e7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f772f53616d73756e672f4f4e453f636f6c6f723d6c69676874253230677265656e)![BlockNote image](https://camo.githubusercontent.com/519ea93913d2c36b927a62879fe14aa4293e10bb3c36ec7d7ff34ad1cd77e1e8/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f53616d73756e672f4f4e453f636f6c6f723d6f72616e6765)\n\n# **ONE** (On-device Neural Engine)\n\n![BlockNote image](https://github.com/Samsung/ONE/raw/master/docs/images/logo_original_samsungblue_cropped.png)\n\nA high-performance, on-device neural network inference framework.\n\n## Goal\n\nThis project **ONE** aims at providing a high-performance, on-device neural network (NN) inference framework that performs inference of a given NN model on processors, such as CPU, GPU, DSP or NPU.\n\nWe develop a runtime that runs on a Linux kernel-based OS platform such as Ubuntu, Tizen, or Android, and a compiler toolchain to support NN models created using various NN training frameworks such as Tensorflow or PyTorch in a unified form at runtime.\n\n## Overview\n\n*   [Background](https://github.com/Samsung/ONE/blob/master/docs/overview/background.md)\n*   [Roadmap](https://github.com/Samsung/ONE/blob/master/docs/overview/roadmap.md)\n\n## Getting started\n\n*   For the contribution, please refer to our [contribution guide](https://github.com/Samsung/ONE/blob/master/docs/howto/how-to-contribute.md).\n*   You can also find various how-to documents [here](https://github.com/Samsung/ONE/blob/master/docs/howto).\n\n## Feature Request\n\nYou can suggest development of **ONE**\'s features that are not yet available.\n\nThe functions requested so far can be checked in the [popular feature request](https://github.com/Samsung/ONE/issues?q=label%3AFEATURE_REQUEST+) list.\n\n*   If the feature you want is on the list, 👍 to the body of the issue. The feature with the most 👍 is placed at the top of the list. When adding new features, we will prioritize them with this reference. Of course, it is good to add an additional comment which describes your request in detail.\n*   For features not listed, [create a new issue](https://github.com/Samsung/ONE/issues/new). Sooner or later, the maintainer will tag the `FEATURE_REQUEST` label and appear on the list.\n\nWe expect one of the most frequent feature requests would be the operator kernel implementation. It is good to make a request, but it is better if you contribute by yourself. See the following guide, [How to add a new operation](https://github.com/Samsung/ONE/blob/master/docs/howto/how-to-add-a-new-operation.md), for help.\n\nWe are looking forward to your participation. Thank you in advance!\n\n## How to Contact\n\n*   Please post questions, issues, or suggestions into [Issues](https://github.com/Samsung/ONE/issues). This is the best way to communicate with the developer.\n*   You can also have an open discussion with community members through [gitter.im](http://gitter.im) channel.\n\n\n\n','https://github.com/gyeongmann/one','https://withme.s3.amazonaws.com/img/55d3f72a-0b8a-4a6e-b922-c6e83657b3f9_logo_original_samsungblue_cropped.png',3908618520902979173,'gyeongmann',NULL),(629,'2024-11-17 00:17:49.219670','2024-11-19 09:13:35.273326',1,0,1,'Fit-Card','# Fit-Card\n\n![image.png](https://withme.s3.amazonaws.com/interImg/f74a53a6-c417-44d6-ac1a-0cc11c6a87da_image.png)\n\n## 🖥️ 프로젝트 소개\n\n**Fit-card**는 평소에 지나치기 쉬운 카드 혜택들을 현재 위치를 기준으로 시각화하여 보다 혜택을 잘 챙길 수 있게 하기 위해 기획된 프로젝트입니다.\n\nMyData에서 불러온 사용자의 카드 보유 현황, 결제 내역 등을 분석하여 사용자의 소비 패턴을 분석하고, 해당 패턴을 기반으로 유효한 카드 추천을 제공합니다.\n\n## 🕰️ 개발 기간\n\n*   **시작일**: 2024.08.26\n*   **종료일**: 2024.10.11\n\n## ⚙️ 개발 환경 및 기술 스택\n\n### 프론트엔드 (FE)\n\n*   **React**, **React Native**, **React Navigation**\n*   **TypeScript**, **JavaScript**\n*   **Redux**, **Axios**, **Firebase**\n*   **Expo**\n\n### 백엔드 (BE)\n\n*   **Java**, **Springboot**, **Jpa**, **Gradle**\n*   **DB** **: Mysql, Redis, Firebase**\n\n### 인프라 (Infra)\n\n*   **Docker**, **Jenkins**, **Amazon Lightsail**, **Nginx**\n\n### 툴 (Tools)\n\n*   **Figma**, **Git**, **Github**, **Notion**, **Slack**\n\n### 🌟 서비스 소개 - 차별점\n\n| ![지도혜택계산resize](<https://github.com/user-attachments/assets/f5a717f4-52a7-4c70-a438-edbbff390a2d>) | ![알람resize](<https://github.com/user-attachments/assets/58325f49-1d0b-4736-b8e6-7754eb7a6041>) | ![추천카드resize](<https://github.com/user-attachments/assets/1733bc06-6fa5-49b9-8e71-7b4e3ae39154>) |\n| -------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------ |\n| 사용자 위치 기반 지도 검색                                                                                    | 사용자 보유 카드 기반 푸시 알림                                                                             | 매달 소비 내역 기반 카드 추천                                                                                |\n| 결제 예정 금액 별 할인 금액 조회                                                                                | 카드사 이벤트 혜택 조회                                                                                  | 사용자 연령대 인기 카드 추천                                                                                 |\n\n## 🔍 주요 기능\n\n| **마이데이터 구축**                                                                                 | **위치 기반 가맹점 혜택 카드 목록 조회**                                                                    | **카드 추천**                                                                                    |\n| -------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |\n| ![image1](<https://github.com/user-attachments/assets/ac67cb1f-53af-4412-9f2b-374d25560cd8>) | ![image2](<https://github.com/user-attachments/assets/b512900c-a95e-4fee-a2a3-36eaf46644fd>) | ![image5](<https://github.com/user-attachments/assets/030baaa7-1e34-4f9c-aab2-f555045c2e2b>) |\n| 실제 금융 서비스와 유사하게 동작할 수 있도록 구조 생성                                                              | 클라이언트 화면의 좌상단 위도 경도값과 우하단 위도 경도 값을 바탕으로 범위 내 가맹점 조회                                          | 지난달 이용 내역으로 최대 혜택 카드 추천                                                                      |\n| 사용자의 카드 정보, 이용 내역, 이벤트 혜택 제공                                                                 | 사용자가 소유한 카드와 일치하는 카드가 존재하는 가맹점의 정보                                                           | 스케줄링을 통해 매월 초 자동 반영                                                                          |\n\n| **데이터 크롤링 + 스케줄러**                                                                           | **카드 이벤트 PUSH 알림**                                                                           |\n| -------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |\n| ![image6](<https://github.com/user-attachments/assets/a16c9ec4-1597-48a5-ae72-551f78663b57>) | ![image7](<https://github.com/user-attachments/assets/e1b65b8c-ff88-4c0c-96f0-39ab513337af>) |\n| 카드 이벤트, 가맹점 정보, 카드 혜택, 카드 정보 데이터를 크롤링                                                        | 유저 보유 카드와 이벤트를 비교하여 알림                                                                       |\n| 스케줄러로 주기적인 정보 업데이트 구현                                                                        | 해당 이벤트 카드 소유 유저에게 PUSH 알림 발송                                                                 |\n\n## 🎥 시연 화면\n\n| **1. 로그인 페이지**                                                                                  | **2. 메인 화면**                                                                                    | **3. 이벤트 알림**                                                                                     |\n| ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\n| ![로그인resize](<https://github.com/user-attachments/assets/151671bb-cee9-4f4f-94a5-15a58e866d7f>) | ![메인홈resize](<https://github.com/user-attachments/assets/9ea80631-355c-4b46-ac4a-0e98d6000b0d>) | ![이벤트알림resize](<https://github.com/user-attachments/assets/016fdf36-81b2-430d-8e06-2556a0ff8af2>) |\n\n| **4. 지도 - 카테고리 검색**                                                                            | **5. 지도 - 가맹점 검색**                                                                                  | **6. 지도 - 혜택 계산**                                                                                  |\n| ---------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |\n| ![지도resize](<https://github.com/user-attachments/assets/09ede66e-9f63-45b3-a66a-76eaa8fdb2dd>) | ![지도가맹점검색resize](<https://github.com/user-attachments/assets/604945cd-1537-47a0-82e2-118a9939c0ab>) | ![지도혜택계산resize](<https://github.com/user-attachments/assets/f5a717f4-52a7-4c70-a438-edbbff390a2d>) |\n\n| **7. 추천 카드**                                                                                     | **8. 혜택 가맹점 검색**                                                                                    | **9. 혜택 카드 검색**                                                                                    |\n| ------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |\n| ![추천카드resize](<https://github.com/user-attachments/assets/1733bc06-6fa5-49b9-8e71-7b4e3ae39154>) | ![혜택가맹점검색resize](<https://github.com/user-attachments/assets/ce8bd637-4c6f-4189-b2ec-d8bbb5bb0bed>) | ![혜택카드검색resize](<https://github.com/user-attachments/assets/329b0e28-019f-44fa-ad64-6337f1238bdb>) |\n\n### 활용 사례\n\n*   **팀 프로젝트 협업**: 팀원들과 README를 함께 작성하며 실시간 피드백을 교환하고 완성도를 높일 수 있습니다.\n*   **기술 문서 작성**: AI 초안 작성 기능을 통해 반복적인 작업을 줄이고 창의적인 문서 작성에 집중할 수 있습니다.\n*   **개발 커뮤니티 참여**: Explore 탭에서 다른 사람의 작업물을 확인하며 배우고, 자신의 작업물을 공유하여 피드백을 받을 수 있습니다.\n\nWithMe는 README 문서화를 단순한 작업이 아닌, 팀과 함께 성장하고 소통할 수 있는 경험으로 바꿔줍니다. WithMe와 함께 팀워크를 극대화하고, 더욱 완성도 높은 프로젝트를 만들어보세요!\n\n## 🧑‍🤝‍🧑 팀 소개\n\n*   **FE**\n\n    *   **김현지**: 지도 검색, 혜택 검색 - [hyeonzi423](<http://github.com/hyeonzi423>)\n    *   **현경찬**: 로그인, 회원가입, 메인, 카드 추천 - [gyeongmann](<http://github.com/gyeongmann>)\n    *   **윤정환**: 알림함, 마이페이지 - [201820722](<http://github.com/201820722>)\n\n*   **BE**\n\n    *   **임가영**: 카드 기능, 카드 추천 기능 - [Limgayoung](<http://github.com/Limgayoung>)\n    *   **박성재**: 가맹점, 지도 조회 - [qkrtjdwo5662](<http://github.com/qkrtjdwo5662>)\n    *   **변찬현**: 로그인, 회원가입, 알림 - [chanhyun22](<http://github.com/chanhyun22>)\n\n## 🧱 아키텍쳐\n\n![image8](<https://github.com/user-attachments/assets/a8a9f57c-d756-4d63-9818-89160ab8dd77>)\n','https://github.com/gyeongmann/Fit-Card','https://withme.s3.amazonaws.com/img/9e86aa01-d1ab-41da-901f-b961306d8bff_splash.png',4746673506577264962,'gyeongmann','Without seeing the specific files and directories in the \"root\" directory you mentioned, I can only offer a general approach to analyzing a repository structure. Typically, the purpose or topic of a project in a software repository can be inferred from a few key files and directories:\n\n1. **README.md or README**: This file usually provides an introduction and overview of the project. It often explains the purpose of the software, how to set it up, and how to use it.\n\n2. **src** or **source** directories: These contain the main application code. Exploring these directories can give insights into the core functionality of the project.\n\n3. **docs** or **documentation**: These directories or files hold detailed information about the software\'s architecture, user guides, and other detailed documentation, helping to understand the intended use and scope of the project.\n\n4. **tests** or **testing**: This directory typically contains code that tests the main application code for bugs and ensures it performs as expected. This can also give clues about the project\'s functionalities.\n\n5. **lib** or **vendor**: These include libraries or third-party modules the project depends on, which might suggest what kind of tasks the project performs if the libraries are well-known.\n\n6. **examples** or **samples**: Example applications or demos included within a project are great sources of information regarding what the software can do.\n\n7. **config** or **configuration**: Configuration files can indicate how customizable the software is and what aspects of its behavior can be controlled by the user.\n\nBy looking at these directories and files, even if they are not named exactly as described here, one can infer the overarching purpose and functionality of a software project. The names and organization can provide critical insights into what the project is about, what kind of tasks it can perform, and how it is structured.'),(630,'2024-11-17 00:30:35.394880','2024-11-18 20:03:05.682213',1,0,1,'cotopaxi','','https://github.com/gyeongmann/cotopaxi','https://withme.s3.amazonaws.com/img/353c0ebe-abc4-44de-95fe-d4c0149a441f_images (1).png',8918609600749979789,'gyeongmann',NULL),(631,'2024-11-17 00:36:29.211155','2024-11-17 00:37:11.895617',1,0,1,'TizenRT','# TizenRT\n\n![BlockNote image](https://camo.githubusercontent.com/15649370ea9b177a00b1764da4380866b7064f233fbc90e0dd35c378be0c1ef9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e63652d417061636865253230322e302d627269676874677265656e2e7376673f7374796c653d666c6174)\n\nTizenRT is lightweight RTOS-based platform to support low-end IoT devices.\\\nPlease find project details at [Wiki](https://github.com/Samsung/TizenRT/wiki) especially **[documentations page](https://github.com/Samsung/TizenRT/wiki/Documentations)**.\n\n## Contents\n\n*   [Environment Setup](https://github.com/gyeongmann/TizenRT#environment-setup)\n*   [How to Build](https://github.com/gyeongmann/TizenRT#how-to-build)\n*   [Supported Board / Emulator](https://github.com/gyeongmann/TizenRT#supported-board--emulator)\n\n## Environment Setup\n\nTizenRT provides the easiest way to build with the use of [Docker](https://www.docker.com/). There is no need to install the required libraries and toolchains since the provided Docker container already includes everything required for TizenRT development. However, if your development systems are not eligible for running the Docker container, all libraries and toolchains should be manually installed. Please refer to [Manual Setup Build Environment](https://github.com/gyeongmann/TizenRT/blob/master/docs/HowToSetEnv.md).\n\nFor more information of libraries in the TizenRT Docker Image, see <https://hub.docker.com/r/tizenrt/tizenrt/>.\n\n### 1. Install Docker\n\nTo install OS specific Docker engines, see <https://docs.docker.com/install/>. For example, if you are using Ubuntu, you need to install the Docker engine located at <https://docs.docker.com/install/linux/docker-ce/ubuntu/>. If you already have a Docker engine, please skip this step.\n\n### 2. Get TizenRT source code\n\nIf you are building TizenRT on a Windows environment, you need to first configure CRLF as shown below:\n\n```javascript\ngit config --global core.autocrlf input\n```\n\nNow, clone TizenRT source code as shown below:\n\n```javascript\ngit clone https://github.com/Samsung/TizenRT.git\ncd TizenRT\nTIZENRT_BASEDIR=\"$PWD\"\n```\n\n**Note** To contribute in this community, you need to create a fork, and clone your forked private repository instead of the main repository. Github guides this by [working-with-forks](https://help.github.com/articles/working-with-forks).\n\n## How to build\n\nThere are two ways to build TizenRT.\n\n*   [Using an interactive tool](https://github.com/gyeongmann/TizenRT#Using-an-interactive-tool)\n*   [Using specific build options](https://github.com/gyeongmann/TizenRT#usign-specific-build-options)\n\n### Use an interactive tool\n\nTizenRT provides an interactive tool (*dbuild.sh*) where you are prompted to select a option among multiple choices. According to your selection, it consecutively provides next-step options. When you become familiar to the TizenRT build system, you may use the *dbuild.sh* script with a specific build option.\n\n**Note** As the build script is running based on Docker, it requires *sudo* for root permission. To run Docker without *sudo*, refer to <https://docs.docker.com/install/linux/linux-postinstall/>.\n\nTo get started, use the *dbuild.sh* script with the *menu* option as follows:\n\n```javascript\ncd os\n./dbuild.sh menu\n```\n\nThis command shows you the complete list of supported boards first as shown below:\n\n```javascript\n======================================================\n  \"Select Board\"\n======================================================\n  \"1. artik053\"\n  \"2. cy4390x\"\n      ...\n  \"x. EXIT\"\n======================================================\n```\n\nAfter the board selection, you are prompted to select configuration of the given board:\n\n```javascript\n======================================================\n  \"Select Configuration of artik053\"\n======================================================\n  \"1. hello\"\n  \"2. tc\"\n      ...\n  \"x. EXIT\"\n======================================================\n```\n\nFinally, you are prompted to select a build option as shown below:\n\n```javascript\n======================================================\n  \"Select build Option\"\n======================================================\n  \"1. Build with Current Configuration\"\n  \"2. Re-configure\"\n  \"3. Modify Current Configuration\"\n  \"4. Clean Build\"\n  \"5. Clean Build and Re-Configure\"\n  \"6. Build SmartFS Image\"\n  \"d. Download\"\n  \"t. Build Test\"\n  \"x. Exit\"\n======================================================\n```\n\nOnce the board and configuration selection is finished,\\\nyou are prompted to select a build option repeatedly until you remove configuration by the *Re-configure* or *Build Dist-Clean* option.\n\n### Use specific build options\n\n1. Configuration\n\n```javascript\ncd os\n./tools/configure.sh <board>/<configuration_set>\n```\n\nThis command retrieves the specific pre-configured file named defconfig and Make.defs according to <board>/<configuration_set>.\\\nOnce the configuration is done, you can skip this step next time unless you want to change your configuration.\\\nYou can see collection of all configuration files at *$TIZENRT_BASEDIR/build/configs*.\\\nTo check all pre-defined configurations, type as follows:\n\n```javascript\n./tools/configure.sh --help\n```\n\n1.1 Additional Configuration (optional)\n\nAfter basic configuration by [1. Configuration](https://github.com/gyeongmann/TizenRT#1-configuration), you can additionally modify your configuration with *menuconfig*.\n\n```javascript\n./dbuild.sh menuconfig\n```\n\n**Note** In Docker environment, `make menuconfig` command from other README files should be replaced with this command. `make menuconfig` applies only in [Manual Setup Build Environment](https://github.com/gyeongmann/TizenRT/blob/master/docs/HowToSetEnv.md).\n\n2. Compilation\n\nThere are two aspects to compilation, namely Build and Clean, which are described as follows:\n\nBuild\n\nTo compile, simply type the following:\n\n```javascript\n./dbuild.sh\n```\n\nAfter compilation, built binaries will be located in *$TIZENRT_BASEDIR/build/output/bin*.\n\nClean\n\nThere are two types of clean commands, *clean* and *distclean*.\n\n```javascript\n./dbuild.sh clean\n```\n\nThis command removes built files including objects, libraries, .depend, Make.dep, etc.\\\nAfter modifying configuration with *menuconfig*, this command is required.\n\n```javascript\n./dbuild.sh distclean\n```\n\nThis command includes the *clean* option and additionally removes configured files including .config, Make.defs and linked folders / files.\\\nBefore changing basic configuration with `./configure.sh` command, this command is required to delete pre-set configurations.\n\n3. Programming\n\n```javascript\n./dbuild.sh download [OPTION]\n```\n\nTizenRT supports *download* command to program a binary into a board.\\\nYou might be required to set up USB driver. For more information, please refer to [Supported board / Emulator](https://github.com/gyeongmann/TizenRT#supported-board--emulator).\n\n`OPTION` designates which flash partitions are flashed.\\\nFor example, `ALL` means programming all of binaries. This also depends on each board.\n\nAdvanced\n\nYou can give multiple build options to the *dbuild.sh* script as mentioned below:\n\n```javascript\n./dbuild.sh distclean configure artik053 hello build download all\n```\n\nThis executes sequentially multiple commands including\n\n1.  Execute distclean\n2.  Configure with artik053/hello\n3.  Build\n4.  Program all of binaries\n\n## Supported Board / Emulator\n\nTizenRT supports multiple boards as well as QEMU.\\\nThe linked page for each board includes board-specific environments, programming method, and board information.\n\nARTIK053 [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/artik053/README.md)\n\nARTIK053S [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/artik053s/README.md)\n\nARTIK055S [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/artik055s/README.md)\n\nCY4390X [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/cy4390x/README.md)\n\nESP32-DevKitC [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/esp32_DevKitC/README.md)\n\nESP-WROVER-KIT [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/esp_wrover_kit/README.md)\n\niMX RT 1020 EVK [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/imxrt1020-evk/README.md)\n\niMX RT 1050 EVK [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/imxrt1050-evk/README.md)\n\nSIDK_S5JT200 [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/sidk_s5jt200/README.md)\n\nSTM32F407-DISC1 [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/stm32f407-disc1/README.md)\n\nSTM32F429I-DISCO [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/stm32f429i-disco/README.md)\n\nSTM32L4R9AI-DISCO [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/stm32l4r9ai-disco/README.md)\n\nQEMU [[details]](https://github.com/gyeongmann/TizenRT/blob/master/build/configs/qemu/README.md)\n\n\n\n','https://github.com/gyeongmann/TizenRT','https://withme.s3.amazonaws.com/img/f5f3e733-5081-422c-a152-e6d1b00057fe_800px-Tizen-Lockup-On-Light-RGB.png',1755635590224722866,'gyeongmann',NULL),(632,'2024-11-17 00:38:49.923992','2024-11-17 00:39:37.819669',1,0,1,'text-generation-inference','![BlockNote image](https://camo.githubusercontent.com/816a23feff65e234bf4393d453a7b3c8d24092f8630c2ed131b8b500ddb16dc1/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f4e617273696c2f7467695f6173736574732f7265736f6c76652f6d61696e2f7468756d626e61696c2e706e67)\n\n# Text Generation Inference\n\n![BlockNote image](https://camo.githubusercontent.com/afaad1cd3eb9f616fa5f8764f047603f53587984b922c9198ec1ab2895d9aae1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68756767696e67666163652f746578742d67656e65726174696f6e2d696e666572656e63653f7374796c653d736f6369616c)![BlockNote image](https://camo.githubusercontent.com/f0fe98e6afc151ec5523b758b023431bacb2de779486f7488953b503f5643b88/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d537761676765722d696e666f726d6174696f6e616c)\n\nA Rust, Python and gRPC server for text generation inference. Used in production at [HuggingFace](https://huggingface.co/) to power Hugging Chat, the Inference API and Inference Endpoint.\n\n## Table of contents\n\n*   [Get Started](https://github.com/gyeongmann/text-generation-inference#get-started)\n\n    *   [API Documentation](https://github.com/gyeongmann/text-generation-inference#api-documentation)\n    *   [Using a private or gated model](https://github.com/gyeongmann/text-generation-inference#using-a-private-or-gated-model)\n    *   [A note on Shared Memory](https://github.com/gyeongmann/text-generation-inference#a-note-on-shared-memory-shm)\n    *   [Distributed Tracing](https://github.com/gyeongmann/text-generation-inference#distributed-tracing)\n    *   [Local Install](https://github.com/gyeongmann/text-generation-inference#local-install)\n    *   [CUDA Kernels](https://github.com/gyeongmann/text-generation-inference#cuda-kernels)\n\n*   [Optimized architectures](https://github.com/gyeongmann/text-generation-inference#optimized-architectures)\n\n*   [Run Mistral](https://github.com/gyeongmann/text-generation-inference#run-a-model)\n\n    *   [Run](https://github.com/gyeongmann/text-generation-inference#run)\n    *   [Quantization](https://github.com/gyeongmann/text-generation-inference#quantization)\n\n*   [Develop](https://github.com/gyeongmann/text-generation-inference#develop)\n\n*   [Testing](https://github.com/gyeongmann/text-generation-inference#testing)\n\nText Generation Inference (TGI) is a toolkit for deploying and serving Large Language Models (LLMs). TGI enables high-performance text generation for the most popular open-source LLMs, including Llama, Falcon, StarCoder, BLOOM, GPT-NeoX, and [more](https://huggingface.co/docs/text-generation-inference/supported_models). TGI implements many features, such as:\n\n*   Simple launcher to serve most popular LLMs\n\n*   Production ready (distributed tracing with Open Telemetry, Prometheus metrics)\n\n*   Tensor Parallelism for faster inference on multiple GPUs\n\n*   Token streaming using Server-Sent Events (SSE)\n\n*   Continuous batching of incoming requests for increased total throughput\n\n*   Optimized transformers code for inference using [Flash Attention](https://github.com/HazyResearch/flash-attention) and [Paged Attention](https://github.com/vllm-project/vllm) on the most popular architectures\n\n*   Quantization with :\n\n    *   [bitsandbytes](https://github.com/TimDettmers/bitsandbytes)\n    *   [GPT-Q](https://arxiv.org/abs/2210.17323)\n    *   [EETQ](https://github.com/NetEase-FuXi/EETQ)\n    *   [AWQ](https://github.com/casper-hansen/AutoAWQ)\n\n*   [Safetensors](https://github.com/huggingface/safetensors) weight loading\n\n*   Watermarking with [A Watermark for Large Language Models](https://arxiv.org/abs/2301.10226)\n\n*   Logits warper (temperature scaling, top-p, top-k, repetition penalty, more details see [transformers.LogitsProcessor](https://huggingface.co/docs/transformers/internal/generation_utils#transformers.LogitsProcessor))\n\n*   Stop sequences\n\n*   Log probabilities\n\n*   [Speculation](https://huggingface.co/docs/text-generation-inference/conceptual/speculation) ~2x latency\n\n*   [Guidance/JSON](https://huggingface.co/docs/text-generation-inference/conceptual/guidance). Specify output format to speed up inference and make sure the output is valid according to some specs..\n\n*   Custom Prompt Generation: Easily generate text by providing custom prompts to guide the model\'s output\n\n*   Fine-tuning Support: Utilize fine-tuned models for specific tasks to achieve higher accuracy and performance\n\n### Hardware support\n\n*   [Nvidia](https://github.com/huggingface/text-generation-inference/pkgs/container/text-generation-inference)\n*   [AMD](https://github.com/huggingface/text-generation-inference/pkgs/container/text-generation-inference) (-rocm)\n*   [Inferentia](https://github.com/huggingface/optimum-neuron/tree/main/text-generation-inference)\n*   [Intel GPU](https://github.com/huggingface/text-generation-inference/pull/1475)\n*   [Gaudi](https://github.com/huggingface/tgi-gaudi)\n*   [Google TPU](https://huggingface.co/docs/optimum-tpu/howto/serving)\n\n## Get Started\n\n### Docker\n\nFor a detailed starting guide, please see the [Quick Tour](https://huggingface.co/docs/text-generation-inference/quicktour). The easiest way of getting started is using the official Docker container:\n\n```javascript\nmodel=HuggingFaceH4/zephyr-7b-beta\n# share a volume with the Docker container to avoid downloading weights every run\nvolume=$PWD/data\n\ndocker run --gpus all --shm-size 1g -p 8080:80 -v $volume:/data \\\n    ghcr.io/huggingface/text-generation-inference:2.1.0 --model-id $model\n```\n\nAnd then you can make requests like\n\n```javascript\ncurl 127.0.0.1:8080/generate_stream \\\n    -X POST \\\n    -d \'{\"inputs\":\"What is Deep Learning?\",\"parameters\":{\"max_new_tokens\":20}}\' \\\n    -H \'Content-Type: application/json\'\n```\n\n**Note:** To use NVIDIA GPUs, you need to install the [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html). We also recommend using NVIDIA drivers with CUDA version 12.2 or higher. For running the Docker container on a machine with no GPUs or CUDA support, it is enough to remove the `--gpus all` flag and add `--disable-custom-kernels`, please note CPU is not the intended platform for this project, so performance might be subpar.\n\n**Note:** TGI supports AMD Instinct MI210 and MI250 GPUs. Details can be found in the [Supported Hardware documentation](https://huggingface.co/docs/text-generation-inference/supported_models#supported-hardware). To use AMD GPUs, please use `docker run --device /dev/kfd --device /dev/dri --shm-size 1g -p 8080:80 -v $volume:/data ghcr.io/huggingface/text-generation-inference:2.1.0-rocm --model-id $model` instead of the command above.\n\nTo see all options to serve your models (in the [code](https://github.com/huggingface/text-generation-inference/blob/main/launcher/src/main.rs) or in the cli):\n\n```javascript\ntext-generation-launcher --help\n```\n\n### API documentation\n\nYou can consult the OpenAPI documentation of the `text-generation-inference` REST API using the `/docs` route. The Swagger UI is also available at: <https://huggingface.github.io/text-generation-inference>.\n\n### Using a private or gated model\n\nYou have the option to utilize the `HF_TOKEN` environment variable for configuring the token employed by `text-generation-inference`. This allows you to gain access to protected resources.\n\nFor example, if you want to serve the gated Llama V2 model variants:\n\n1.  Go to <https://huggingface.co/settings/tokens>\n2.  Copy your cli READ token\n3.  Export `HF_TOKEN=<your cli READ token>`\n\nor with Docker:\n\n```javascript\nmodel=meta-llama/Llama-2-7b-chat-hf\nvolume=$PWD/data # share a volume with the Docker container to avoid downloading weights every run\ntoken=<your cli READ token>\n\ndocker run --gpus all --shm-size 1g -e HF_TOKEN=$token -p 8080:80 -v $volume:/data ghcr.io/huggingface/text-generation-inference:2.0 --model-id $model\n```\n\n### A note on Shared Memory (shm)\n\n`NCCL` is a communication framework used by `PyTorch` to do distributed training/inference. `text-generation-inference` make use of `NCCL` to enable Tensor Parallelism to dramatically speed up inference for large language models.\n\nIn order to share data between the different devices of a `NCCL` group, `NCCL` might fall back to using the host memory if peer-to-peer using NVLink or PCI is not possible.\n\nTo allow the container to use 1G of Shared Memory and support SHM sharing, we add `--shm-size 1g` on the above command.\n\nIf you are running `text-generation-inference` inside `Kubernetes`. You can also add Shared Memory to the container by creating a volume with:\n\n```javascript\n- name: shm\n  emptyDir:\n   medium: Memory\n   sizeLimit: 1Gi\n```\n\nand mounting it to `/dev/shm`.\n\nFinally, you can also disable SHM sharing by using the `NCCL_SHM_DISABLE=1` environment variable. However, note that this will impact performance.\n\n### Distributed Tracing\n\n`text-generation-inference` is instrumented with distributed tracing using OpenTelemetry. You can use this feature by setting the address to an OTLP collector with the `--otlp-endpoint` argument. The default service name can be overridden with the `--otlp-service-name` argument\n\n### Architecture\n\n![BlockNote image](https://camo.githubusercontent.com/865b15b83e926b08c3ce2ad186519ad520bce2241b89095edcf7416d2be91aba/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f68756767696e67666163652f646f63756d656e746174696f6e2d696d616765732f7265736f6c76652f6d61696e2f5447492e706e67)\n\n### Local install\n\nYou can also opt to install `text-generation-inference` locally.\n\nFirst [install Rust](https://rustup.rs/) and create a Python virtual environment with at least Python 3.9, e.g. using `conda`:\n\n```javascript\ncurl --proto \'=https\' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\nconda create -n text-generation-inference python=3.11\nconda activate text-generation-inference\n```\n\nYou may also need to install Protoc.\n\nOn Linux:\n\n```javascript\nPROTOC_ZIP=protoc-21.12-linux-x86_64.zip\ncurl -OL https://github.com/protocolbuffers/protobuf/releases/download/v21.12/$PROTOC_ZIP\nsudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc\nsudo unzip -o $PROTOC_ZIP -d /usr/local \'include/*\'\nrm -f $PROTOC_ZIP\n```\n\nOn MacOS, using Homebrew:\n\n```javascript\nbrew install protobuf\n```\n\nThen run:\n\n```javascript\nBUILD_EXTENSIONS=True make install # Install repository and HF/transformer fork with CUDA kernels\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2\n```\n\n**Note:** on some machines, you may also need the OpenSSL libraries and gcc. On Linux machines, run:\n\n```javascript\nsudo apt-get install libssl-dev gcc -y\n```\n\n## Optimized architectures\n\nTGI works out of the box to serve optimized models for all modern models. They can be found in [this list](https://huggingface.co/docs/text-generation-inference/supported_models).\n\nOther architectures are supported on a best-effort basis using:\n\n`AutoModelForCausalLM.from_pretrained(<model>, device_map=\"auto\")`\n\nor\n\n`AutoModelForSeq2SeqLM.from_pretrained(<model>, device_map=\"auto\")`\n\n## Run locally\n\n### Run\n\n```javascript\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2\n```\n\n### Quantization\n\nYou can also quantize the weights with bitsandbytes to reduce the VRAM requirement:\n\n```javascript\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2 --quantize\n```\n\n4bit quantization is available using the [NF4 and FP4 data types from bitsandbytes](https://arxiv.org/pdf/2305.14314.pdf). It can be enabled by providing `--quantize bitsandbytes-nf4` or `--quantize bitsandbytes-fp4` as a command line argument to `text-generation-launcher`.\n\n## Develop\n\n```javascript\nmake server-dev\nmake router-dev\n```\n\n## Testing\n\n```javascript\n# python\nmake python-server-tests\nmake python-client-tests\n# or both server and client tests\nmake python-tests\n# rust cargo tests\nmake rust-tests\n# integration tests\nmake integration-tests\n```\n\n\n\n','https://github.com/gyeongmann/text-generation-inference','https://withme.s3.amazonaws.com/img/dd0acb35-e245-463d-bf5a-3f11181a6f84_68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f4e617273696c2f7467695f6173736574732f7265736f6c76652f6d61696e2f7468756d626e61696c2e706e67.png',4045681506974057403,'gyeongmann',NULL),(633,'2024-11-17 00:42:07.633535','2024-11-17 00:43:11.735776',1,0,1,'next.js','![BlockNote image](https://camo.githubusercontent.com/26d06a6572aa5d9ecdb699add71d40e57aefe8244c6306ba58a70aee6ad5123c/68747470733a2f2f6173736574732e76657263656c2e636f6d2f696d6167652f75706c6f61642f76313636323133303535392f6e6578746a732f49636f6e5f6c696768745f6261636b67726f756e642e706e67)\n\n# Next.js\n\n![BlockNote image](https://camo.githubusercontent.com/a7ee01bcc96a6e07e392a87f7e3202faa847efd0bc129e66f716ea98d9302ced/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d414445253230425925323056657263656c2d3030303030302e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d56657263656c266c6162656c436f6c6f723d303030)![BlockNote image](https://camo.githubusercontent.com/60dcf9db176916c5e18b23978eb6d1c0282a88ed3d9632568c6b953f868b3b6f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e6578742e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030)![BlockNote image](https://camo.githubusercontent.com/34bfded824851462f4cbaf614527b184b1872b41e35a6414ecbff72ecbe1e25a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6e6578742e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030)![BlockNote image](https://camo.githubusercontent.com/84f18bb62460515b8c657f349c87d7f8a85b6044b58e73495f4dbe79588f59c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e253230746865253230636f6d6d756e6974792d626c756576696f6c65742e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d4e6578742e6a73266c6162656c436f6c6f723d303030303030266c6f676f57696474683d3230)\n\n## Getting Started\n\nUsed by some of the world\'s largest companies, Next.js enables you to create full-stack web applications by extending the latest React features, and integrating powerful Rust-based JavaScript tooling for the fastest builds.\n\n*   Visit our [Learn Next.js](https://nextjs.org/learn) course to get started with Next.js.\n*   Visit the [Next.js Showcase](https://nextjs.org/showcase) to see more sites built with Next.js.\n\n## Documentation\n\nVisit <https://nextjs.org/docs> to view the full documentation.\n\n## Community\n\nThe Next.js community can be found on [GitHub Discussions](https://github.com/vercel/next.js/discussions) where you can ask questions, voice ideas, and share your projects with other people.\n\nTo chat with other community members you can join the Next.js [Discord](https://nextjs.org/discord) server.\n\nDo note that our [Code of Conduct](https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md) applies to all Next.js community channels. Users are **highly encouraged** to read and adhere to them to avoid repercussions.\n\n## Contributing\n\nContributions to Next.js are welcome and highly appreciated. However, before you jump right into it, we would like you to review our [Contribution Guidelines](https://github.com/gyeongmann/next.js/blob/canary/contributing.md) to make sure you have a smooth experience contributing to Next.js.\n\n### Good First Issues:\n\nWe have a list of **[good first issues](https://github.com/vercel/next.js/labels/good%20first%20issue)** that contain bugs that have a relatively limited scope. This is a great place for newcomers and beginners alike to get started, gain experience, and get familiar with our contribution process.\n\n## Authors\n\nA list of the original co-authors of Next.js that helped bring this amazing framework to life!\n\n*   Tim Neutkens ([@timneutkens](https://x.com/timneutkens))\n*   Naoyuki Kanezawa ([@nkzawa](https://x.com/nkzawa))\n*   Guillermo Rauch ([@rauchg](https://x.com/rauchg))\n*   Arunoda Susiripala ([@arunoda](https://x.com/arunoda))\n*   Tony Kovanen ([@tonykovanen](https://x.com/tonykovanen))\n*   Dan Zajdband ([@impronunciable](https://x.com/impronunciable))\n\n## Security\n\nIf you believe you have found a security vulnerability in Next.js, we encourage you to ***responsibly disclose this and NOT open a public issue***. We will investigate all legitimate reports. Email `security@vercel.com` to disclose any security vulnerabilities. Alternatively, you can visit this [link](https://vercel.com/security) to know more about Vercel\'s security and report any security vulnerabilities.\n\n\n\n','https://github.com/gyeongmann/next.js','https://withme.s3.amazonaws.com/img/afdd138e-fd32-4f56-946e-1af9461d7ff9_68747470733a2f2f6173736574732e76657263656c2e636f6d2f696d6167652f75706c6f61642f76313636323133303535392f6e6578746a732f49636f6e5f6c696768745f6261636b67726f756e642e706e67.png',3990896156223750866,'gyeongmann',NULL),(634,'2024-11-17 00:44:28.693816','2024-11-17 00:47:34.213420',1,0,1,'tailwindcss','![BlockNote image](https://raw.githubusercontent.com/tailwindlabs/tailwindcss/HEAD/.github/logo-light.svg)\n\nA utility-first CSS framework for rapidly building custom user interfaces.\n\n![BlockNote image](https://camo.githubusercontent.com/537949e7452abca45b2676e796eb0951fc3daa7507527e8e2de6b7ce0b91e9bb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f7461696c77696e646c6162732f7461696c77696e646373732f63692e796d6c3f6272616e63683d6e657874)![BlockNote image](https://camo.githubusercontent.com/49e47fd71578f80f269e19b1fc027c35197927d809239a7a5bd3d4e6bd1c4afd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f7461696c77696e646373732e737667)![BlockNote image](https://camo.githubusercontent.com/84859f7198466f9d755a318185cb819f153221d74e10030dcfcc79801f2160c0/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7461696c77696e646373732e737667)![BlockNote image](https://camo.githubusercontent.com/5ef8047c46d877cc7349bd223fa0885619a050cf20663688478fb5b310c2a738/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7461696c77696e646373732e737667)\n\n## Documentation\n\nFor full documentation, visit [tailwindcss.com](http://tailwindcss.com).\n\n## Community\n\nFor help, discussion about best practices, or any other conversation that would benefit from being searchable:\n\n[Discuss Tailwind CSS on GitHub](https://github.com/tailwindcss/tailwindcss/discussions)\n\nFor chatting with others using the framework:\n\n[Join the Tailwind CSS Discord Server](https://discord.gg/7NF8GNe)\n\n## Contributing\n\nIf you\'re interested in contributing to Tailwind CSS, please read our [contributing docs](https://github.com/tailwindcss/tailwindcss/blob/next/.github/CONTRIBUTING.md) **before submitting a pull request**.\n\n\n\n','https://github.com/gyeongmann/tailwindcss','https://withme.s3.amazonaws.com/img/e0eee2e7-b032-4384-b58d-14e873f3f841_tailwind-css_uoqpuu.webp',7255981851279051486,'gyeongmann',NULL),(635,'2024-11-17 00:49:17.334740','2024-11-17 00:50:13.320182',1,0,1,'react-native','# [React Native](https://reactnative.dev/)\n\n**Learn once, write anywhere:**\\\nBuild mobile apps with React.\n\n![BlockNote image](https://camo.githubusercontent.com/6581c31c16c1b13ddc2efb92e2ad69a93ddc4a92fd871ff15d401c4c6c9155a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667)![BlockNote image](https://camo.githubusercontent.com/e8e24278e86f5a276d76c7af3791b9d763eb470388ff8ef9a54ab40382e7ade5/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f72656163742d6e61746976652e7376673f7374796c653d736869656c64)![BlockNote image](https://camo.githubusercontent.com/917f5f9dcb03c12df48b4d9e2896230b28598efce8240a3058929a12b1890b2b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d6e61746976653f636f6c6f723d627269676874677265656e266c6162656c3d6e706d2532307061636b616765)![BlockNote image](https://camo.githubusercontent.com/d88d8d77fa79e828eea397f75a1ebd114d13488aeec4747477ffbd2274de95ed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667)![BlockNote image](https://camo.githubusercontent.com/98a1cbca67bd657294624acb379491544dd8316fcdbd9ca93991d4d5a6453277/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f72656163746e61746976652e7376673f6c6162656c3d466f6c6c6f772532304072656163746e6174697665)\n\n### [Getting Started](https://reactnative.dev/docs/getting-started) · [Learn the Basics](https://reactnative.dev/docs/tutorial) · [Showcase](https://reactnative.dev/showcase) · [Contribute](https://reactnative.dev/docs/contributing) · [Community](https://reactnative.dev/help) · [Support](https://github.com/facebook/react-native/blob/HEAD/.github/SUPPORT.md)\n\nReact Native brings **[React](https://react.dev/)**[\'s](https://react.dev/) declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\n*   **Declarative.** React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\n*   **Component-Based.** Build encapsulated components that manage their state, then compose them to make complex UIs.\n*   **Developer Velocity.** See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\n*   **Portability.** Reuse code across iOS, Android, and [other platforms](https://reactnative.dev/docs/out-of-tree-platforms).\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our [ecosystem overview](https://github.com/facebook/react-native/blob/HEAD/ECOSYSTEM.md).\n\n## Contents\n\n*   [Requirements](https://github.com/gyeongmann/react-native#-requirements)\n*   [Building your first React Native app](https://github.com/gyeongmann/react-native#-building-your-first-react-native-app)\n*   [Documentation](https://github.com/gyeongmann/react-native#-documentation)\n*   [Upgrading](https://github.com/gyeongmann/react-native#-upgrading)\n*   [How to Contribute](https://github.com/gyeongmann/react-native#-how-to-contribute)\n*   [Code of Conduct](https://github.com/gyeongmann/react-native#code-of-conduct)\n*   [License](https://github.com/gyeongmann/react-native#-license)\n\n## 📋 Requirements\n\nReact Native apps may target iOS 13.4 and Android 6.0 (API 23) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like [Expo](https://expo.dev/) can be used to work around this.\n\n## 🎉 Building your first React Native app\n\nFollow the [Getting Started guide](https://reactnative.dev/docs/getting-started). The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\n*   [Trying out React Native](https://snack.expo.dev/@samples/hello-world)\n*   [Creating a New Application](https://reactnative.dev/docs/getting-started)\n*   [Adding React Native to an Existing Application](https://reactnative.dev/docs/integration-with-existing-apps)\n\n## 📖 Documentation\n\nThe full documentation for React Native can be found on our [website](https://reactnative.dev/docs/getting-started).\n\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the [React documentation](https://react.dev/learn).\n\nThe source for the React Native documentation and website is hosted on a separate repo, **[@facebook/react-native-website](https://github.com/facebook/react-native-website)**.\n\n## 🚀 Upgrading\n\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the [Upgrading Guide](https://reactnative.dev/docs/upgrading) for instructions.\n\nReact Native releases are discussed [in this discussion repo](https://github.com/reactwg/react-native-releases/discussions).\n\n## 👏 How to Contribute\n\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.\n\n### [Code of Conduct](https://code.fb.com/codeofconduct/)\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the [full text](https://code.fb.com/codeofconduct/) so that you can understand what actions will and will not be tolerated.\n\n### [Contributing Guide](https://reactnative.dev/docs/contributing)\n\nRead our **[Contributing Guide](https://reactnative.dev/docs/contributing)** to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\n\n### [Open Source Roadmap](https://github.com/facebook/react-native/wiki/Roadmap)\n\nYou can learn more about our vision for React Native in the **[Roadmap](https://github.com/facebook/react-native/wiki/Roadmap)**.\n\n### Good First Issues\n\nWe have a list of [good first issues](https://github.com/facebook/react-native/labels/good%20first%20issue) that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\n\n### Discussions\n\nLarger discussions and proposals are discussed in **[@react-native-community/discussions-and-proposals](https://github.com/react-native-community/discussions-and-proposals)**.\n\n## 📄 License\n\nReact Native is MIT licensed, as found in the [LICENSE](https://github.com/facebook/react-native/blob/main/LICENSE) file.\n\nReact Native documentation is Creative Commons licensed, as found in the [LICENSE-docs](https://github.com/facebook/react-native/blob/main/LICENSE-docs) file.\n\n\n\n','https://github.com/gyeongmann/react-native','https://withme.s3.amazonaws.com/img/979b7f23-76db-4e5f-aeb1-f392398feeb6_다운로드 (1).png',5663857409726040199,'gyeongmann',NULL),(636,'2024-11-18 19:43:46.224568','2024-11-18 19:49:17.297233',1,0,1,'WithMe','\n\n\n','https://github.com/taegun1011/WithMe','https://withme.s3.amazonaws.com/img/860a120c-5b24-4d79-a819-64fc4d571b43_Man happy to see improved document.jpeg',8836856664389300631,'taegun1011','This project implements a collaborative Markdown editing service with a Spring-based backend and a Next.js frontend. The service provides several key features designed to enhance the user experience and streamline Markdown editing for developers: 1. Real-time Collaboration on Markdown: Users can simultaneously write and edit Markdown documents with their teammates for a specific repository, promoting efficient collaboration. 2. User-friendly Markdown Writing via Blocks: Even without prior knowledge of Markdown syntax, users can easily create Markdown documents using an intuitive block-based editor. 3. AI-Assisted Markdown Generation: By leveraging project information from remote repositories, users can utilize ChatGPT to automatically generate Markdown content, significantly reducing manual workload. 4. Direct Push to Remote Repositories: The service allows users to push the completed Markdown documents directly to their remote repositories, integrating seamlessly with existing version control workflows. This project bridges the gap between collaborative Markdown editing and repository management while incorporating modern AI tools to enhance productivity. By combining a user-friendly interface with secure backend mechanisms, it effectively caters to developers\' needs for efficient documentation and collaboration.'),(637,'2024-11-18 19:57:56.166570','2024-11-18 19:57:56.166578',0,0,1,'A507-withme','','https://github.com/taegun1011/A507-withme',NULL,NULL,'taegun1011','It appears to be a web project that can collaborate to create markdown files simultaneously and apply them to remote repositories. It also includes a drafting function using AI, and OAuth is used to manage members. It also includes the ability to share completed documents with others and search for them using ElasticSearch. The backend was implemented through the Spring Framework and provides a variety of functions. The front seems to have been implemented in NextJS, and SEO is applied to make it easier for users to access the service.');
/*!40000 ALTER TABLE `workspace` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-11-19 12:51:14
